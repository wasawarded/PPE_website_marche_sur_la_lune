Applications
of
a
contemporary
digital
designs
and
microcontrollers
will
be
used
to
teach
students
digital
logic
microcontroller
programming
and
microcontroller
interfacing
This
course
is
intended
This
laboratory
covers
applications
of
microcontroller
fundamentals
Topics
include
digital
logic
microcontroller
programming
and
interfacing
The
activities
for
this
course
utilize
typical
degradation
mechanisms
and
prevention
will
be
studied
The
materials
selection
process
will
include
economic
ecological
and
ethical
considerations
An
emphasis
is
placed
on
the
interrelationship
of
Applications
of
a
contemporary
digital
designs
and
microcontrollers
will
be
used
to
teach
students
digital
logic
microcontroller
programming
and
microcontroller
interfacing
This
course
is
intended
This
laboratory
covers
applications
of
microcontroller
fundamentals
Topics
include
digital
logic
microcontroller
programming
and
interfacing
The
activities
for
this
course
utilize
typical
degradation
mechanisms
and
prevention
will
be
studied
The
materials
selection
process
will
include
economic
ecological
and
ethical
considerations
An
emphasis
is
placed
on
the
interrelationship
of
BUTTON
Toggle
Definition
subsection
1
1
Formal
logic
1
2
Informal
logic
2
Basic
concepts
2
5
Formal
systems
3
Systems
of
logic
BUTTON
Toggle
Systems
of
logic
subsection
3
1
Aristotelian
3
2
Classical
o
3
2
1
Propositional
logic
o
3
2
2
First-order
logic
3
3
Extended
o
3
3
1
Modal
logic
o
3
3
2
Higher
order
logic
3
4
Deviant
BUTTON
Toggle
Areas
of
research
subsection
4
1
Philosophy
of
logic
and
philosophical
logic
4
2
Metalogic
4
3
Mathematical
logic
4
4
Computational
logic
4
5
Formal
semantics
of
natural
language
4
6
Epistemology
of
logic
5
History
Logic
is
the
study
of
correct
reasoning
It
includes
both
formal
and
informal
logic
Formal
logic
is
the
study
of
deductively
valid
inferences
or
logical
truths
It
examines
how
conclusions
follow
from
premises
based
on
the
structure
of
arguments
alone
independent
of
their
topic
and
content
Informal
logic
is
associated
with
informal
fallacies
critical
thinking
and
argumentation
theory
Informal
logic
examines
arguments
expressed
in
natural
language
whereas
formal
logic
uses
formal
language
When
used
as
a
countable
noun
the
term
a
logic
refers
to
a
specific
logical
formal
system
that
articulates
a
proof
system
Logic
plays
a
central
role
in
many
fields
such
as
philosophy
of
propositions
is
their
internal
structure
For
example
complex
propositions
are
made
up
of
simpler
propositions
linked
by
logical
vocabulary
like
usually
depends
on
the
meanings
of
all
of
its
parts
However
this
is
not
the
case
for
logically
true
propositions
They
are
true
only
because
of
their
logical
structure
independent
of
the
specific
meanings
of
the
individual
parts
suffer
3
Arguments
that
fall
short
of
the
standards
of
correct
reasoning
often
embody
fallacies
Systems
of
logic
are
theoretical
frameworks
for
assessing
the
correctness
of
arguments
Logic
has
been
studied
since
antiquity
Early
approaches
include
Aristotelian
logic
Stoic
logic
Nyaya
and
Mohism
Aristotelian
logic
focuses
on
reasoning
in
the
form
of
syllogisms
It
was
considered
the
main
system
of
logic
in
the
Western
world
until
it
was
replaced
by
modern
formal
logic
which
has
its
roots
in
the
work
of
late
19
th-century
mathematicians
such
as
Gottlob
Frege
Today
the
most
commonly
used
system
is
classical
logic
It
consists
of
propositional
logic
and
first-order
logic
Propositional
logic
only
considers
logical
relations
between
full
propositions
First-order
logic
also
takes
the
internal
parts
of
propositions
into
account
like
predicates
and
quantifiers
Extended
logics
accept
the
basic
intuitions
behind
classical
logic
and
apply
it
to
other
fields
such
as
metaphysics
ethics
and
epistemology
Deviant
logics
on
the
other
hand
reject
certain
classical
intuitions
and
provide
alternative
explanations
of
the
basic
laws
of
logic
The
word
logic
originates
from
the
Greek
word
logos
which
has
a
variety
of
translations
such
as
reason
discourse
or
language
4
whether
arguments
are
correct
i.e
whether
their
premises
support
the
conclusion
7
These
general
characterizations
apply
to
logic
in
the
widest
sense
i.e
to
both
formal
and
informal
logic
since
they
are
both
concerned
with
assessing
the
correctness
of
arguments
8
Formal
logic
is
the
traditionally
dominant
field
and
some
logicians
restrict
logic
to
formal
logic
9
Formal
logic
Formal
logic
is
also
known
as
symbolic
logic
and
is
widely
used
in
mathematical
logic
It
uses
a
formal
approach
to
study
reasoning
it
replaces
concrete
expressions
with
abstract
symbols
to
examine
the
logical
form
of
arguments
independent
of
their
concrete
content
In
this
sense
it
is
topic-neutral
since
it
is
only
concerned
with
the
Formal
logic
is
interested
in
deductively
valid
arguments
for
which
the
truth
of
their
premises
ensures
the
truth
of
their
conclusion
This
means
that
it
is
impossible
for
the
premises
to
be
true
and
the
conclusion
to
be
false
11
For
valid
arguments
the
logical
structure
of
the
premises
and
the
conclusion
follows
a
pattern
called
a
rule
of
3
therefore
q
are
valid
independent
of
what
the
terms
p
and
q
stand
for
13
In
this
sense
formal
logic
can
be
defined
as
the
science
of
valid
inferences
An
alternative
definition
sees
logic
as
the
study
of
logical
truths
14
A
proposition
is
logically
true
if
its
truth
depends
only
on
the
logical
vocabulary
used
in
it
This
means
that
it
is
true
in
all
possible
worlds
and
under
all
interpretations
of
its
non-logical
terms
like
the
claim
either
it
is
raining
or
it
is
not
15
These
two
definitions
of
formal
logic
are
not
identical
but
they
are
closely
related
For
example
if
the
inference
from
p
to
q
is
deductively
valid
then
the
claim
if
p
then
q
is
a
logical
truth
16
Visualization
of
how
to
translate
an
English
sentence
into
first-order
logic
Formal
logic
needs
to
translate
natural
language
arguments
into
a
formal
language
like
first-order
logic
to
assess
whether
they
are
valid
In
this
example
the
letter
c
represents
Carmen
while
the
Formal
logic
uses
formal
languages
to
express
and
analyze
arguments
17
They
normally
have
a
very
limited
vocabulary
and
exact
to
construct
sentences
so-called
well-formed
formulas
18
This
simplicity
and
exactness
of
formal
logic
make
it
capable
of
formulating
precise
rules
of
inference
They
determine
whether
a
given
argument
is
The
term
logic
can
also
be
used
in
a
slightly
different
sense
as
a
countable
noun
In
this
sense
a
logic
is
a
logical
formal
system
Distinct
logics
differ
from
each
other
concerning
the
rules
of
inference
they
accept
as
valid
and
the
formal
languages
used
to
express
have
been
proposed
There
are
disagreements
about
what
makes
a
formal
system
a
logic
22
For
example
it
has
been
suggested
that
only
logically
complete
systems
like
first-order
logic
qualify
as
logics
For
such
reasons
some
theorists
deny
that
higher-order
logics
are
logics
in
the
strict
sense
23
Informal
logic
edit
Main
article
Informal
logic
When
understood
in
a
wide
sense
logic
encompasses
both
formal
and
informal
logic
24
Informal
logic
uses
non-formal
criteria
and
standards
to
analyze
and
assess
the
correctness
of
arguments
Its
main
focus
is
on
everyday
discourse
25
Its
development
was
prompted
by
difficulties
in
applying
the
insights
of
formal
logic
to
natural
language
arguments
26
In
this
regard
it
considers
problems
that
formal
logic
on
its
own
is
unable
to
address
27
Both
provide
criteria
for
assessing
the
correctness
of
arguments
and
distinguishing
Many
characterizations
of
informal
logic
have
been
suggested
but
there
is
no
general
agreement
on
its
precise
definition
29
The
most
literal
approach
sees
the
terms
formal
and
informal
as
applying
to
the
language
used
to
express
arguments
On
this
view
informal
logic
studies
arguments
that
are
in
informal
or
natural
language
30
Formal
logic
can
only
examine
them
indirectly
by
translating
them
first
into
a
formal
language
while
informal
logic
investigates
them
in
their
original
form
31
On
this
view
the
argument
Birds
fly
Tweety
is
a
bird
Therefore
Tweety
flies
belongs
to
natural
language
and
is
examined
by
informal
logic
But
the
formal
translation
1
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
semantics
MATH
displaystyle
Flies(Tweety
is
studied
by
formal
logic
32
The
study
of
natural
language
arguments
comes
with
various
difficulties
For
example
natural
language
expressions
are
often
ambiguous
vague
and
context-dependent
33
Another
approach
defines
informal
logic
in
a
wide
sense
as
the
normative
study
of
the
standards
criteria
and
Another
characterization
identifies
informal
logic
with
the
study
of
non-deductive
arguments
In
this
way
it
contrasts
with
deductive
reasoning
examined
by
formal
logic
35
Non-deductive
arguments
make
their
conclusion
probable
but
do
not
ensure
that
it
is
true
An
example
A
further
approach
is
to
define
informal
logic
as
the
study
of
informal
fallacies
37
Informal
fallacies
are
incorrect
arguments
in
which
or
against
us
you
are
not
with
us
therefore
you
are
against
us
39
Some
theorists
state
that
formal
logic
studies
the
general
form
of
arguments
while
informal
logic
studies
particular
instances
of
arguments
Another
approach
is
to
hold
that
formal
logic
only
considers
the
role
of
logical
constants
for
correct
inferences
while
informal
logic
also
takes
the
meaning
of
substantive
concepts
into
account
Further
approaches
focus
on
the
discussion
of
logical
topics
with
or
without
formal
devices
and
on
the
role
of
epistemology
for
the
Premises
and
conclusions
are
the
basic
parts
of
inferences
or
arguments
and
therefore
play
a
central
role
in
logic
In
the
case
of
a
valid
inference
or
a
correct
argument
the
conclusion
follows
from
the
For
instance
the
premises
Mars
is
red
and
Mars
is
a
planet
support
the
conclusion
Mars
is
a
red
planet
For
most
types
of
logic
it
is
accepted
that
premises
and
conclusions
have
to
be
on
how
it
is
interpreted
46
Another
approach
is
to
understand
premises
and
conclusions
in
psychological
terms
as
thoughts
or
judgments
This
position
is
known
as
psychologism
It
was
discussed
at
Some
complex
propositions
are
true
independently
of
the
substantive
meanings
of
their
parts
53
In
classical
logic
for
example
the
complex
proposition
either
Mars
is
red
or
Mars
is
not
red
is
true
independent
of
whether
its
parts
like
the
simple
proposition
Mars
is
red
are
true
or
false
In
such
cases
the
truth
is
called
a
logical
truth
a
proposition
is
logically
true
if
its
truth
depends
only
on
the
logical
vocabulary
used
in
it
54
This
means
that
it
is
true
under
all
interpretations
of
its
non-logical
terms
In
some
modal
logics
this
means
that
the
proposition
is
true
in
all
possible
worlds
55
Some
theorists
define
logic
as
the
study
of
logical
truths
16
Truth
tables
can
be
used
to
show
how
logical
connectives
work
or
how
the
truth
values
of
complex
propositions
depends
on
their
parts
They
semantics
MATH
displaystyle
p\land
q
uses
the
logical
connective
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
displaystyle
q
the
weather
was
good
are
true
In
all
other
cases
the
expression
as
a
whole
is
false
Other
important
logical
connectives
are
reasoning
from
these
premises
to
the
conclusion
43
But
these
terms
are
often
used
interchangeably
in
logic
Arguments
are
correct
or
incorrect
depending
on
whether
their
premises
support
their
conclusion
Premises
and
conclusions
on
the
other
hand
are
true
or
false
depending
on
whether
they
are
in
accord
with
reality
In
formal
logic
a
sound
argument
is
an
argument
that
is
both
correct
and
has
only
true
each
link
of
the
chain
has
to
be
successful
43
Diagram
of
argument
terminology
used
in
logic
Argument
terminology
used
in
logic
such
cases
the
term
ampliative
or
inductive
reasoning
is
used
63
Deductive
arguments
are
associated
with
formal
logic
in
contrast
to
the
relation
between
ampliative
arguments
and
informal
logic
64
priori
i.e
no
sense
experience
is
needed
to
determine
whether
they
obtain
3
they
are
modal
i.e
that
they
hold
by
logical
necessity
for
the
given
propositions
independent
of
any
other
appearances
is
controversial
because
it
belongs
to
the
field
of
psychology
not
logic
and
because
appearances
may
be
different
for
different
people
87
The
main
focus
of
most
logicians
is
to
study
the
criteria
according
to
which
an
argument
is
correct
or
incorrect
A
fallacy
is
committed
if
these
criteria
are
violated
In
the
case
of
formal
logic
they
are
known
as
rules
of
inference
93
They
are
definitory
rules
which
conclusion
based
on
a
set
of
premises
This
distinction
does
not
just
apply
to
logic
but
also
to
games
In
chess
for
example
the
definitory
rules
dictate
that
bishops
may
only
move
diagonally
The
strategic
win
a
game
for
instance
by
controlling
the
center
and
by
defending
one's
king
94
It
has
been
argued
that
logicians
should
give
more
emphasis
to
strategic
rules
since
they
are
highly
relevant
for
A
formal
system
of
logic
consists
of
a
formal
language
together
with
a
set
of
axioms
and
a
proof
system
used
to
draw
inferences
from
these
axioms
95
In
logic
axioms
are
statements
that
are
accepted
without
proof
They
are
used
to
justify
other
statements
96
Some
theorists
well-formed
formulas
99
For
instance
the
syntactic
rules
of
propositional
logic
determine
that
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
Q
annotation
semantics
MATH
displaystyle
land
Q
is
not
since
the
logical
conjunction
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
A
semantics
is
a
system
for
mapping
expressions
of
a
formal
language
to
their
denotations
In
many
systems
of
logic
denotations
are
truth
values
For
instance
the
semantics
for
classical
propositional
logic
assigns
the
formula
A
system
of
logic
is
sound
when
its
proof
system
cannot
derive
a
conclusion
from
a
set
of
premises
unless
it
is
semantically
entailed
by
Systems
of
logic
Systems
of
logic
are
theoretical
frameworks
for
assessing
the
correctness
of
reasoning
and
arguments
For
over
two
thousand
years
Aristotelian
logic
was
treated
as
the
canon
of
logic
in
the
Western
world
104
but
modern
developments
in
this
field
have
led
to
a
vast
proliferation
of
logical
systems
105
One
prominent
categorization
divides
modern
formal
logical
systems
into
classical
logic
extended
logics
and
deviant
logics
106
Main
article
Aristotelian
logic
Aristotelian
logic
encompasses
a
great
variety
of
topics
They
include
metaphysical
theses
about
ontological
categories
and
problems
of
scientific
explanation
But
in
a
more
narrow
sense
it
is
identical
to
term
logic
or
syllogistics
A
syllogism
is
a
form
of
argument
involving
three
propositions
two
premises
and
a
conclusion
Each
proposition
has
wise
and
the
copula
is
108
The
subject
and
the
predicate
are
the
terms
of
the
proposition
Aristotelian
logic
does
not
contain
complex
propositions
made
up
of
simple
propositions
It
differs
in
this
aspect
from
propositional
logic
in
which
any
two
propositions
can
be
linked
using
a
logical
connective
like
and
to
form
a
new
complex
proposition
109
used
to
visualize
the
relations
between
the
four
basic
categorical
propositions
in
Aristotelian
logic
It
shows
for
example
that
the
propositions
All
S
are
P
and
Some
S
are
not
P
are
contradictory
In
Aristotelian
logic
the
subject
can
be
universal
particular
indefinite
or
singular
For
example
the
term
all
humans
is
a
Aristotelian
logic
only
includes
predicates
for
simple
properties
of
entities
But
it
lacks
predicates
corresponding
to
relations
between
three
predicates
referred
to
as
major
term
minor
term
and
middle
term
114
The
central
aspect
of
Aristotelian
logic
involves
classifying
all
possible
syllogisms
into
valid
and
invalid
arguments
Main
article
Classical
logic
Classical
logic
is
distinct
from
traditional
or
Aristotelian
logic
It
encompasses
propositional
logic
and
first-order
logic
It
is
classical
in
the
sense
that
it
is
based
on
basic
logical
intuitions
shared
by
most
logicians
117
These
intuitions
include
the
law
of
excluded
middle
the
double
negation
elimination
the
principle
of
to
other
fields
as
well
Because
of
this
focus
on
mathematics
it
does
not
include
logical
vocabulary
relevant
to
many
other
topics
of
philosophical
importance
Examples
of
concepts
it
overlooks
are
the
between
past
present
and
future
119
Such
issues
are
addressed
by
extended
logics
They
build
on
the
basic
intuitions
of
classical
logic
and
expand
it
by
introducing
new
logical
vocabulary
This
way
the
exact
logical
approach
is
applied
to
fields
like
ethics
or
epistemology
that
lie
beyond
the
scope
of
mathematics
120
Propositional
logic
Propositional
logic
comprises
formal
systems
in
which
formulae
are
built
from
atomic
propositions
using
logical
connectives
For
instance
propositional
logic
represents
the
conjunction
of
two
atomic
propositions
semantics
MATH
displaystyle
P\land
Q
Unlike
predicate
logic
where
terms
and
predicates
are
the
smallest
units
propositional
logic
takes
full
propositions
with
truth
values
as
its
most
basic
component
121
Thus
propositional
logics
can
only
represent
logical
relationships
that
arise
from
the
way
complex
propositions
are
built
from
simpler
ones
First-order
logic
Main
article
First-order
logic
First-order
logic
includes
the
same
propositional
connectives
as
propositional
logic
but
differs
from
it
because
it
articulates
the
internal
structure
of
propositions
This
happens
through
devices
such
semantics
MATH
displaystyle
exists
xB(x
First-order
logic
contains
various
rules
of
inference
that
determine
how
expressions
articulated
this
way
Extended
logics
are
logical
systems
that
accept
the
basic
principles
of
classical
logic
They
introduce
additional
symbols
and
principles
to
apply
it
to
fields
like
metaphysics
ethics
and
epistemology
125
Modal
logic
Main
article
Modal
logic
Modal
logic
is
an
extension
of
classical
logic
In
its
original
form
sometimes
called
alethic
modal
logic
it
introduces
two
new
symbols
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
that
Socrates
is
a
banker
127
To
include
these
symbols
in
the
logical
formalism
modal
logic
introduces
new
rules
of
inference
that
govern
what
role
they
play
in
inferences
One
rule
of
inference
states
Other
forms
of
modal
logic
introduce
similar
symbols
but
associate
different
meanings
with
them
to
apply
modal
logic
to
other
fields
For
example
deontic
logic
concerns
the
field
of
ethics
and
introduces
symbols
to
express
the
ideas
of
obligation
and
permission
i.e
to
describe
whether
an
agent
has
to
perform
a
certain
action
or
is
allowed
to
perform
it
129
The
modal
operators
in
temporal
modal
logic
articulate
temporal
relations
They
can
be
used
to
express
for
example
that
something
happened
at
one
time
or
that
something
is
happening
all
the
time
129
In
epistemology
epistemic
modal
logic
is
used
to
represent
the
ideas
of
knowing
something
in
contrast
to
merely
Higher
order
logic
Main
article
Higher-order
logic
Higher-order
logics
extend
classical
logic
not
by
using
modal
operators
but
by
introducing
new
forms
of
quantification
131
Quantifiers
correspond
to
terms
like
all
or
some
In
classical
first-order
logic
quantifiers
are
only
applied
to
individuals
The
formula
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
semantics
MATH
displaystyle
x
In
higher-order
logics
quantification
is
also
allowed
over
predicates
This
increases
its
expressive
power
For
of
mathematical
theories
43
But
it
has
drawbacks
in
regard
to
its
meta-logical
properties
and
ontological
implications
which
is
why
first-order
logic
is
still
more
commonly
used
133
Main
article
Deviant
logic
Deviant
logics
are
logical
systems
that
reject
some
of
the
basic
intuitions
of
classical
logic
Because
of
this
they
are
usually
seen
not
as
its
supplements
but
as
its
rivals
Deviant
logical
systems
differ
from
each
other
either
because
they
reject
different
classical
Intuitionistic
logic
is
a
restricted
version
of
classical
logic
135
It
uses
the
same
symbols
but
excludes
some
rules
of
inference
For
displaystyle
lnot
lnot
A
This
is
a
valid
rule
of
inference
in
classical
logic
but
it
is
invalid
in
intuitionistic
logic
Another
classical
principle
not
part
of
intuitionistic
logic
is
the
law
of
excluded
middle
It
states
that
for
every
sentence
either
it
or
its
displaystyle
A\lor
lnot
A
is
true
135
These
deviations
from
classical
logic
are
based
on
the
idea
that
truth
is
established
by
verification
using
a
proof
Intuitionistic
logic
is
especially
prominent
in
the
field
of
constructive
mathematics
which
emphasizes
Multi-valued
logics
depart
from
classicality
by
rejecting
the
principle
of
bivalence
which
requires
all
propositions
to
be
either
true
or
false
For
instance
Jan
Łukasiewicz
and
Stephen
Cole
Kleene
both
proposed
ternary
logics
which
have
a
third
truth
value
representing
that
a
statement's
truth
value
is
indeterminate
137
These
logics
have
been
applied
in
the
field
of
linguistics
Fuzzy
logics
are
multivalued
logics
that
have
an
infinite
number
of
degrees
of
truth
represented
by
a
real
number
between
0
and
1
138
Paraconsistent
logics
are
logical
systems
that
can
deal
with
contradictions
They
are
formulated
to
avoid
the
principle
of
Main
article
Informal
logic
Informal
logic
is
usually
carried
out
in
a
less
systematic
way
It
often
focuses
on
more
specific
issues
like
investigating
a
particular
type
of
fallacy
or
studying
a
certain
aspect
of
argumentation
Nonetheless
some
frameworks
of
informal
logic
have
also
been
presented
that
try
to
provide
a
systematic
characterization
of
the
correctness
of
The
pragmatic
or
dialogical
approach
to
informal
logic
sees
arguments
as
speech
acts
and
not
merely
as
a
set
of
premises
together
with
a
The
epistemic
approach
to
informal
logic
on
the
other
hand
focuses
on
the
epistemic
role
of
arguments
148
It
is
based
on
the
idea
that
fails
to
provide
independent
justification
for
its
conclusion
even
though
it
is
deductively
valid
151
In
this
sense
logical
normativity
consists
in
epistemic
success
or
rationality
149
The
applying
its
formal
method
to
specific
topics
outside
its
scope
like
to
ethics
or
computer
science
156
In
other
cases
logic
itself
is
made
the
subject
of
research
in
another
discipline
This
can
happen
in
philosophical
assumptions
linked
to
the
basic
concepts
used
by
logicians
Other
ways
include
interpreting
and
analyzing
logic
through
mathematical
structures
as
well
as
studying
and
comparing
abstract
properties
of
formal
logical
systems
157
Philosophy
of
logic
and
philosophical
logic
Main
articles
Philosophy
of
logic
and
Philosophical
logic
Philosophy
of
logic
is
the
philosophical
discipline
studying
the
scope
and
nature
of
logic
59
It
examines
many
presuppositions
implicit
in
logic
like
how
to
define
its
basic
concepts
or
the
metaphysical
assumptions
associated
with
them
158
It
is
also
concerned
with
how
to
classify
logical
systems
and
considers
the
ontological
commitments
they
incur
159
Philosophical
logic
is
one
of
the
areas
within
the
philosophy
of
logic
It
studies
the
application
of
logical
methods
to
philosophical
problems
in
fields
like
metaphysics
ethics
and
epistemology
160
This
application
usually
happens
in
the
form
of
extended
or
deviant
logical
systems
161
Metalogic
Main
article
Metalogic
Metalogic
is
the
field
of
inquiry
studying
the
properties
of
formal
logical
systems
For
example
when
a
new
formal
system
is
developed
metalogicians
may
study
it
to
determine
which
formulas
can
be
proven
in
it
They
may
also
study
whether
an
algorithm
could
be
developed
to
find
a
proof
for
each
formula
and
whether
every
provable
formula
in
it
is
a
tautology
Finally
they
may
compare
it
to
other
logical
systems
to
understand
its
distinctive
features
A
key
issue
in
metalogic
concerns
the
relation
between
syntax
and
semantics
The
syntactic
rules
of
a
argument
is
provable
and
whether
every
provable
argument
is
valid
Metalogicians
also
study
whether
logical
systems
are
complete
sound
and
consistent
They
are
interested
in
whether
the
systems
are
decidable
and
what
expressive
power
they
have
Metalogicians
usually
rely
heavily
on
abstract
mathematical
reasoning
when
examining
and
formulating
metalogical
proofs
This
way
they
aim
to
arrive
at
precise
and
general
conclusions
on
these
topics
162
Mathematical
logic
Main
article
Mathematical
logic
Photograph
of
Bertrand
Russell
Bertrand
Russell
made
various
contributions
to
mathematical
logic
163
The
term
mathematical
logic
is
sometimes
used
as
a
synonym
of
formal
logic
But
in
a
more
restricted
sense
it
refers
to
the
study
of
logic
within
mathematics
Major
subareas
include
model
theory
proof
theory
set
theory
and
computability
theory
164
Research
in
mathematical
logic
commonly
addresses
the
mathematical
properties
of
formal
systems
of
logic
However
it
can
also
include
attempts
to
use
logic
to
analyze
mathematical
reasoning
or
to
establish
logic-based
foundations
of
mathematics
165
The
latter
was
a
major
concern
in
early
20
th-century
mathematical
logic
which
pursued
the
program
of
logicism
pioneered
by
philosopher-logicians
such
as
Gottlob
Frege
Alfred
North
Whitehead
and
Bertrand
Russell
Mathematical
theories
were
supposed
to
be
logical
tautologies
and
their
program
was
to
show
this
by
means
of
a
reduction
of
mathematics
to
logic
Many
attempts
to
realize
this
program
failed
from
the
crippling
of
Frege's
project
in
his
Grundgesetze
by
Russell's
it
has
been
the
source
of
many
of
the
most
challenging
and
important
issues
in
mathematical
logic
They
include
Cantor's
theorem
the
status
of
the
Axiom
of
Choice
the
question
of
the
independence
of
the
Computability
theory
is
the
branch
of
mathematical
logic
that
studies
effective
procedures
to
solve
calculation
problems
One
of
its
main
Computational
logic
Main
articles
Computational
logic
and
Logic
in
computer
science
Diagram
of
an
AND
gate
using
transistors
Conjunction
AND
is
one
of
the
basic
operations
of
Boolean
logic
It
can
be
electronically
implemented
in
several
ways
for
example
by
using
two
transistors
Computational
logic
is
the
branch
of
logic
and
computer
science
that
studies
how
to
implement
mathematical
reasoning
and
logical
formalisms
using
computers
This
includes
for
example
automatic
theorem
provers
intervention
169
Logic
programming
languages
are
designed
specifically
to
express
facts
using
logical
formulas
and
to
draw
inferences
from
these
facts
For
example
Prolog
is
a
logic
programming
language
based
on
predicate
logic
170
Computer
scientists
also
apply
concepts
from
logic
to
problems
in
computing
The
works
of
Claude
Shannon
were
influential
in
this
regard
He
showed
how
Boolean
logic
can
be
used
to
understand
and
implement
computer
circuits
171
This
can
be
achieved
using
electronic
logic
gates
i.e
electronic
circuits
with
one
or
more
inputs
and
usually
one
output
The
truth
values
of
propositions
are
represented
by
voltage
levels
In
this
way
logic
functions
can
be
simulated
by
applying
the
corresponding
voltages
to
Formal
semantics
is
a
subfield
of
logic
linguistics
and
the
philosophy
of
language
The
discipline
of
semantics
studies
the
meaning
of
language
Formal
semantics
uses
formal
tools
from
the
fields
of
symbolic
logic
and
mathematics
to
give
precise
theories
of
the
meaning
of
natural
language
expressions
It
understands
meaning
usually
in
relation
to
truth
conditions
i.e
it
examines
in
which
situations
a
sentence
would
be
true
or
false
One
of
its
central
methodological
assumptions
is
the
principle
of
compositionality
It
states
that
the
Epistemology
of
logic
The
epistemology
of
logic
studies
how
one
knows
that
an
argument
is
valid
or
that
a
proposition
is
logically
true
174
This
includes
questions
like
how
to
justify
that
modus
ponens
is
a
valid
rule
of
inference
or
that
contradictions
are
false
175
The
traditionally
dominant
view
is
that
this
form
of
logical
understanding
belongs
to
knowledge
a
priori
176
In
this
regard
it
is
often
argued
that
the
mind
has
a
special
faculty
to
examine
relations
between
pure
ideas
and
that
this
faculty
is
also
responsible
for
apprehending
logical
truths
177
A
similar
approach
understands
the
rules
of
logic
in
terms
of
linguistic
conventions
On
this
view
the
laws
of
logic
are
trivial
since
they
are
true
by
definition
they
just
express
the
meanings
of
the
logical
vocabulary
178
Some
theorists
like
Hilary
Putnam
and
Penelope
Maddy
object
to
the
view
that
logic
is
knowable
a
priori
They
hold
instead
that
logical
truths
depend
on
the
empirical
world
This
is
usually
combined
with
the
claim
that
the
laws
of
logic
express
universal
regularities
found
in
the
structural
features
of
the
world
According
to
this
view
they
may
For
example
it
has
been
argued
that
certain
insights
of
quantum
mechanics
refute
the
principle
of
distributivity
in
classical
logic
which
states
that
the
formula
displaystyle
A\land
B
lor
A\land
C
This
claim
can
be
used
as
an
empirical
argument
for
the
thesis
that
quantum
logic
is
the
correct
logical
system
and
should
replace
classical
logic
179
Main
article
History
of
logic
Top
row
Aristotle
who
established
the
canon
of
western
philosophy
108
and
Avicenna
who
replaced
Aristotelian
logic
in
Islamic
discourse
180
Bottom
row
William
of
Ockham
a
major
figure
of
medieval
scholarly
thought
181
and
Gottlob
Frege
one
of
the
founders
of
modern
symbolic
logic
182
Logic
was
developed
independently
in
several
cultures
during
antiquity
One
major
early
contributor
was
Aristotle
who
developed
term
logic
in
his
Organon
and
Prior
Analytics
183
He
was
responsible
for
the
introduction
of
the
hypothetical
syllogism
184
and
temporal
modal
logic
185
Further
innovations
include
inductive
logic
186
as
well
as
the
discussion
of
new
logical
concepts
such
as
terms
predicables
syllogisms
and
propositions
Aristotelian
logic
was
highly
regarded
in
classical
and
medieval
times
both
in
Europe
and
the
Middle
East
It
has
now
been
superseded
by
later
work
though
many
of
its
key
insights
are
still
present
in
modern
systems
of
logic
188
Ibn
Sina
Avicenna
was
the
founder
of
Avicennian
logic
which
replaced
Aristotelian
logic
as
the
dominant
system
of
logic
in
the
Islamic
world
189
It
influenced
Western
medieval
writers
such
as
Albertus
an
original
temporally
modalized
syllogistic
theory
involving
temporal
logic
and
modal
logic
193
He
also
made
use
of
inductive
logic
such
as
his
methods
of
agreement
difference
and
concomitant
variation
which
are
critical
to
the
scientific
method
191
Fakhr
al-Din
al-Razi
was
another
influential
Muslim
logician
He
criticized
Aristotelian
syllogistics
and
formulated
an
early
system
of
inductive
logic
foreshadowing
the
system
of
inductive
logic
developed
by
John
Stuart
Mill
194
During
the
Middle
Ages
many
translations
and
interpretations
of
Aristotelian
logic
were
made
The
works
of
Boethius
were
particularly
influential
Besides
translating
Aristotle's
work
into
Latin
he
also
produced
textbooks
on
logic
195
Later
the
works
of
Islamic
philosophers
such
as
Ibn
Sina
and
Ibn
Rushd
Averroes
were
drawn
on
William
of
Ockham's
influential
Summa
Logicae
was
released
It
is
a
comprehensive
treatise
on
logic
that
discusses
many
basic
concepts
of
logic
and
provides
a
systematic
exposition
of
types
of
propositions
and
their
truth
conditions
196
which
defends
the
thesis
that
a
white
horse
is
not
a
horse
The
school
of
Mohism
also
acknowledged
the
importance
of
language
for
logic
and
tried
to
relate
the
ideas
in
these
fields
to
the
realm
of
ethics
197
In
India
the
study
of
logic
was
primarily
pursued
by
the
schools
of
Nyaya
Buddhism
and
Jainism
It
was
not
treated
as
a
separate
academic
object
199
A
similar
emphasis
on
the
relation
to
epistemology
is
also
found
in
Buddhist
and
Jainist
schools
of
logic
where
inference
is
used
to
expand
the
knowledge
gained
through
other
sources
200
Some
of
the
later
theories
of
Nyaya
belonging
to
the
Navya-Nyāya
school
resemble
modern
forms
of
logic
such
as
Gottlob
Frege's
distinction
between
sense
and
reference
and
his
definition
of
number
201
The
syllogistic
logic
developed
by
Aristotle
predominated
in
the
West
until
the
mid
19
th
century
when
interest
in
the
foundations
of
mathematics
stimulated
the
development
of
modern
symbolic
logic
202
Many
see
Gottlob
Frege's
Begriffsschrift
as
the
birthplace
of
modern
logic
Gottfried
Wilhelm
Leibniz's
idea
of
a
universal
formal
language
is
often
considered
a
forerunner
Other
pioneers
were
George
Boole
who
invented
Boolean
algebra
as
a
mathematical
system
of
logic
and
Charles
Peirce
who
developed
the
logic
of
relatives
Alfred
North
Whitehead
and
Bertrand
Russell
in
turn
condensed
many
of
these
insights
in
their
work
Principia
Mathematica
Modern
logic
introduced
novel
concepts
such
as
functions
quantifiers
and
relational
predicates
A
hallmark
of
modern
symbolic
logic
is
its
use
of
formal
language
to
precisely
codify
its
insights
In
this
regard
it
departs
from
earlier
logicians
who
relied
mainly
on
natural
language
203
Of
particular
influence
was
the
development
of
first-order
logic
which
is
usually
treated
as
the
standard
system
of
modern
logic
204
Its
analytical
generality
allowed
the
formalization
of
mathematics
and
drove
the
model
theory
possible
and
provided
the
foundation
of
modern
mathematical
logic
205
Glossary
of
logic
Outline
of
logic
Overview
of
and
topical
guide
to
logic
Critical
thinking
Analysis
of
facts
to
form
a
judgment
List
of
logic
journals
List
of
logic
symbols
List
of
symbols
used
to
express
logical
relations
List
of
logicians
Logic
puzzle
Puzzle
deriving
from
the
mathematics
field
of
Logos
Concept
in
philosophy
religion
rhetoric
and
psychology
Vector
logic
1
However
there
are
some
forms
of
logic
like
imperative
logic
where
this
may
not
be
the
case
42
4
Pépin
2004
Logos
Online
Etymology
Staff
5
Hintikka
2019
lead
section
Nature
and
varieties
of
logic
6
Hintikka
2019
Nature
and
varieties
of
logic
Haack
1978
pp
1
10
Philosophy
of
logics
Schlesinger
Keren-Portnoy
Parush
2001
p
220
7
Hintikka
Sandu
2006
p
13
Audi
1999
b
Philosophy
of
logic
McKeon
8
Blair
Johnson
2000
pp
93
95
Craig
1996
Formal
and
informal
logic
9
Craig
1996
Formal
and
informal
logic
Barnes
2007
p
274
Planty-Bonjour
2012
p
62
Rini
2010
p
26
pp
93
95
Magnus
2005
pp
12
4
1
6
Formal
languages
11
a
b
McKeon
Craig
1996
Formal
and
informal
logic
12
Hintikka
Sandu
2006
p
13
Pritzker
1999
p
155
15
Gómez-Torrente
2019
Magnus
2005
1
5
Other
logical
notions
p
10
16
a
b
Hintikka
Sandu
2006
p
16
17
Honderich
2005
logic
informal
Craig
1996
Formal
and
informal
logic
Johnson
1999
pp
265
268
18
Craig
1996
Formal
languages
and
systems
Simpson
2008
p
14
Deductive
validity
Johnson
1999
p
267
21
Haack
1978
pp
1
2
4
Philosophy
of
logics
Hintikka
Sandu
2006
pp
16
17
Jacquette
2006
Introduction
Philosophy
of
logic
today
pp
1
12
22
Haack
1978
pp
1
2
4
Philosophy
of
logics
Jacquette
2006
pp
1
12
Introduction
Philosophy
of
logic
today
23
Haack
1978
pp
5
7
9
Philosophy
of
logics
Hintikka
Sandu
2006
pp
31
2
Haack
1996
pp
229
30
24
Haack
1978
pp
1
10
Philosophy
of
logics
Groarke
2021
lead
section
1
1
Formal
and
Informal
Logic
26
Groarke
2021
lead
section
1
History
Audi
1999
a
Informal
logic
Johnson
1999
pp
265
274
27
Craig
1996
Formal
and
informal
logic
Johnson
1999
p
267
28
Blair
Johnson
2000
pp
93
97
Craig
1996
Formal
and
informal
logic
29
Johnson
1999
pp
265
270
van
Eemeren
et
al
pp
1
45
Informal
30
Groarke
2021
1
1
Formal
and
Informal
Logic
Audi
1999
a
Informal
logic
Honderich
2005
logic
informal
31
Blair
Johnson
2000
pp
93
107
Groarke
2021
lead
section
1
1
32
Oaksford
Chater
2007
p
47
33
Craig
1996
Formal
and
informal
logic
Walton
1987
pp
2
3
6
8
1
A
new
model
of
argument
Engel
1982
pp
59
92
2
The
medium
of
35
Falikowski
Mills
2022
p
98
Weddle
2011
pp
383
8
36
Informal
logic
and
the
eductive-inductive
distinction
Blair
2011
p
47
39
Maltby
Day
Macaskill
2007
p
564
Dowden
40
Craig
1996
Formal
and
informal
logic
Johnson
1999
pp
265
270
41
a
b
Audi
1999
b
Philosophy
of
logic
Honderich
2005
philosophical
logic
42
Haack
1974
p
51
43
a
b
c
d
e
Audi
1999
b
Philosophy
of
logic
44
Falguera
Martínez-Vidal
Rosen
2021
Tondl
2012
p
111
45
Olkowski
Pirovolakis
2019
pp
65
66
46
Audi
1999
b
Philosophy
of
logic
Pietroski
2021
47
Audi
1999
b
Philosophy
of
logic
Kusch
2020
Rush
2014
pp
1
10
189
190
48
a
b
King
2019
Pickel
2020
pp
2991
3006
49
a
b
c
Honderich
2005
philosophical
logic
50
Pickel
2020
pp
2991
3006
51
Honderich
2005
philosophical
logic
Craig
1996
Philosophy
of
logic
Michaelson
Reimer
2019
52
Michaelson
Reimer
2019
53
Hintikka
2019
Nature
and
varieties
of
logic
MacFarlane
2017
54
Gómez-Torrente
2019
MacFarlane
2017
Honderich
2005
philosophical
logic
55
Gómez-Torrente
2019
Jago
2014
p
41
59
a
b
Hintikka
2019
lead
section
Nature
and
varieties
of
logic
Audi
1999
b
Philosophy
of
logic
60
Blackburn
2008
argument
Stairs
2017
p
343
64
Groarke
2021
1
1
Formal
and
Informal
Logic
Weddle
2011
pp
383
8
36
Informal
logic
and
the
eductive-inductive
distinction
van
Eemeren
Garssen
2009
p
191
97
Gensler
2006
p
xliii
Font
Jansana
2017
p
8
98
Haack
1978
pp
1
10
Philosophy
of
logics
Hintikka
Sandu
2006
pp
31
32
Jacquette
2006
pp
1
12
Introduction
Philosophy
of
logic
today
99
Moore
Carling
1982
p
53
Enderton
2001
pp
12
13
Sentential
Chapter
2
5
van
Dalen
1994
Chapter
1
5
104
Jacquette
2006
pp
1
12
Introduction
Philosophy
of
logic
today
Smith
2022
Groarke
105
Haack
1996
1
Alternative
in
Alternative
Logic
106
Haack
1978
pp
1
10
Philosophy
of
logics
Haack
1996
1
Alternative
in
Alternative
Logic
Wolf
1978
pp
327
340
116
Spriggs
2012
pp
20
2
117
Hintikka
2019
Nature
and
varieties
of
logic
Alternative
logics
Hintikka
Sandu
2006
pp
27
8
Bäck
2016
p
317
118
Shapiro
Kouri
Kissel
2022
119
Burgess
2009
1
Classical
logic
120
Jacquette
2006
pp
1
12
Introduction
Philosophy
of
logic
today
Borchert
2006
c
Logic
Non-Classical
Goble
2001
123
Shapiro
Kouri
Kissel
2022
Honderich
2005
philosophical
logic
Michaelson
Reimer
2019
124
Nolt
2021
Magnus
2005
4
Quantified
logic
125
Bunnin
Yu
2009
p
179
Garson
2023
Introduction
130
Rendsvig
Symons
2021
131
Audi
1999
b
Philosophy
of
logic
Väänänen
2021
Ketland
2005
Second
Order
Logic
132
Audi
1999
b
Philosophy
of
logic
Väänänen
2021
Daintith
Wright
2008
Predicate
calculus
133
Audi
1999
b
Philosophy
of
logic
Ketland
2005
Second
Order
Logic
156
Hintikka
2019
Logic
and
other
disciplines
Haack
1978
pp
1
10
Philosophy
of
logics
157
Hintikka
2019
lead
section
Features
and
problems
of
logic
Gödel
1984
pp
447
469
Russell's
mathematical
logic
Monk
1976
pp
1
9
Introduction
158
Jacquette
2006
pp
1
12
Introduction
Philosophy
of
logic
today
159
Hintikka
2019
Problems
of
ontology
160
Jacquette
2006
pp
1
12
Introduction
Philosophy
of
logic
today
Burgess
2009
1
Classical
logic
161
Goble
2001
Introduction
Hintikka
Sandu
2006
pp
31
32
182
Haaparanta
2009
pp
4
6
1
Introduction
Hintikka
Spade
Modern
logic
Logic
since
1900
183
Kline
1972
A
major
achievement
of
Aristotle
was
the
founding
of
the
science
of
logic
p
53
Łukasiewicz
1957
p
7
Liu
Guo
2023
p
15
202
Groarke
Haaparanta
2009
pp
3
5
1
Introduction
203
Haaparanta
2009
pp
4
6
Hintikka
Spade
Modern
logic
Logic
since
1900
Audi
Robert
1999
a
Informal
logic
The
Cambridge
Dictionary
of
Philosophy
Cambridge
University
Press
p
435
ISBN
978
1
107
64379
6
Audi
Robert
1999
b
Philosophy
of
logic
The
Cambridge
Dictionary
of
Philosophy
Cambridge
University
Press
pp
679
681
pp
535
536
ISBN
978
0
02
865780
6
OCLC
61151356
The
two
most
important
types
of
logical
calculi
are
propositional
or
sentential
calculi
and
functional
or
predicate
calculi
A
propositional
calculus
Burgess
John
P
2009
1
Classical
logic
Philosophical
Logic
Princeton
NJ
Princeton
University
Press
pp
1
12
Chakrabarti
Kisor
Kumar
June
1976
Some
Comparisons
Between
Frege's
Logic
and
Navya-Nyaya
Logic
Philosophy
and
Phenomenological
Research
36
4
554
563
doi
10
2307
2106873
JSTOR
2106873
Frede
Michael
Aristotle
Michigan
Technological
University
Retrieved
1
November
2022
Gödel
Kurt
1984
Russell's
mathematical
logic
In
Benacerraf
Paul
Putnam
Hilary
eds
Philosophy
of
Mathematics
Selected
Haack
Susan
1978
1
Philosophy
of
logics
Philosophy
of
Logics
London
and
New
York
Cambridge
University
Press
pp
1
10
Hintikka
Jaakko
J
2019
Philosophy
of
logic
Encyclopædia
Britannica
Archived
from
the
original
on
28
April
2015
Retrieved
21
Hintikka
Jaakko
J
Spade
Paul
Vincent
History
of
logic
Encyclopædia
Britannica
Retrieved
23
September
2022
Jacquette
Dale
2006
Introduction
Philosophy
of
logic
today
Philosophy
of
Logic
North
Holland
pp
1
12
ISBN
978
0
444
51541
4
Schagrin
Morton
L
Metalogic
Encyclopædia
Britannica
Retrieved
23
September
2022
Weddle
Perry
2011
Chapter
36
Informal
logic
and
the
eductive-inductive
distinction
Across
the
Lines
of
Disciplines
De
Inference
Philosophy
of
logic
Proof
Semantics
of
logic
Syntax
Argumentation
Metalogic
Metamathematics
topics
Mathematical
logic
Boolean
algebra
standard
for
judging
individual
relations
but
not
the
relations
of
states
as
the
latter
remains
to
be
governed
by
the
logic
of
power
and
interest
It
follows
that
from
a
realist
perspective
individuals
are
national
sovereignty
Accordingly
human
rights
issues
even
pose
a
particularly
potent
challenge
to
the
central
logic
of
a
system
of
independent
sovereign
states
under
anarchy
and
thus
to
one
of
the
key
assumptions
of
realism
whereby
such
development
cannot
be
explained
by
a
logic
of
self-interest
Sikkink
1998
517
that
norm
Wheeler
2002
30
9
In
this
regard
they
are
viewed
as
having
a
social
ontological
character
meaning
that
they
are
social
rather
than
natural
facts
Accordingly
the
application
of
that
are
owed
to
other
individuals
Hohfeld
1917
In
this
sense
as
Valentini
points
out
they
follow
a
particular
logical
structure
For
an
agent
A
to
have
a
right
to
X
against
another
agent
B
is
for
A
to
to
the
enemy
The
concept
of
humanity
is
an
especially
useful
ideological
instrument
of
imperialist
expansion
and
in
its
ethical
humanitarian
form
it
is
a
specific
vehicle
of
economic
imperialism
that
the
film
industry
in
China
is
predominately
governed
by
a
commercial
logic
dictated
by
profit
maximization
as
adopted
by
both
official
cultural
policies
and
commercial
practices
As
played
out
by
the
Titanic
miracle
we
observe
how
culture
remains
an
ideological
tool
for
the
Party
whose
central
maxim
appears
to
be
commercial
enterprise
and
economic
growth
Whereas
cultural
artifacts
during
the
Maoist
era
as
dictated
by
the
Party
ideologically
opposed
capitalism
today’s
culture
industry
embraces
the
market
and
what
sells
in
collusion
between
Hollywood
movie-moguls
and
high-ranking
Leninist
officials
whose
ideological
differences
and
national
loyalties
are
negotiated
by
their
homage
to
the
accumulation
of
capital
and
GPA
and
not
by
lineage
or
family
income
But
does
reality
support
those
expectations
Or
are
admissions
governed
by
a
logic
that
rewards
socioeconomic
status
while
disguising
it
as
personal
merit
policies
American
Journal
of
Sociology
An
excellent
sociological
account
of
a
highly
selective
institutional
gatekeeper
Yale
University
Soares's
history
of
Yale
1999
which
received
the
prize
for
outstanding
book
from
the
Culture
Section
of
the
American
Sociological
Association
This
entry
is
an
introduction
to
science
maps
and
science
mapping
It
focuses
on
the
conceptual
theoretical
and
methodological
issues
of
science
mapping
rather
than
on
the
mathematical
formulation
of
represented
in
science
maps
to
investigate
the
dynamics
of
science
We
also
discuss
some
epistemological
and
sociological
topics
that
can
help
in
the
interpretation
contextualization
and
assessment
of
of
science
mapping
to
the
humanities
In
Section
7
some
epistemological
topics
which
bridge
across
science
mapping
sociology
of
science
and
philosophy
of
science
are
discussed
the
objectivity
of
This
entry
focuses
on
conceptual
theoretical
and
methodological
issues
of
science
mapping
rather
than
on
the
rigorous
mathematical
can
be
traced
back
to
Aristotle
and
to
the
Isagoge
an
introduction
to
Aristotle’s
logic
written
by
Porphyry
in
the
3
rd
Century
In
the
13
th
Century
Ramon
Llull
depicted
a
tree
of
the
sciences
in
his
Arbor
infrastructures
Sugimoto
and
Weingart
2015
As
these
systems
serve
different
purposes
and
are
governed
by
different
logics
frictions
and
inconsistences
between
the
classificatory
schemes
they
produce
are
to
l’innovation
at
the
École
des
mines
in
Paris
They
were
designed
to
study
the
interaction
between
scientific
knowledge
and
technological
innovation
and
more
generally
the
relations
between
science
and
by
documentation
services
to
index
the
content
of
scientific
and
technological
publications
Callon
Courtial
and
Laville
1991
The
method
of
co-word
analysis
then
consists
first
in
collecting
all
the
patents
allows
tracing
the
links
between
scientific
knowledge
and
technological
applications
Meyer
2000
whereas
by
studying
the
scientists
that
are
both
authors
of
scientific
publications
and
inventors
of
patents
it
is
possible
to
map
the
overlap
between
scientific
and
technological
literature
Murray
2002
In
the
last
years
text-mining
techniques
see
Section
4
2
2
Co-word
analysis
In
this
section
we
deal
with
some
epistemological
and
sociological
topics
related
to
science
mapping
We
start
by
asking
in
what
sense
In
the
previous
sections
we
saw
how
the
creation
of
a
science
map
involves
several
methodological
and
technical
decisions
from
the
science
cartographer
such
as
the
unit
of
analysis
the
mapping
objective
Rather
they
result
from
a
combination
of
the
features
of
the
mapped
field
on
the
one
hand
and
the
methodological
decisions
of
the
science
cartographer
on
the
other
hand
However
we
should
allow
reconstructing
the
terminology
of
a
scientific
field
because
they
reflect
thousands
of
terminological
micro-choices
made
by
the
researchers
when
drafting
the
titles
and
abstracts
of
their
papers
The
relations
between
the
different
terms
are
the
results
of
these
choices
Idiosyncratic
and
non-standard
terminological
would
again
choices
cancel
out
when
enough
publications
are
considered
contribute
to
the
justification
of
the
paper’s
claims
Gross
et
al
2002
As
sociological
and
anthropological
studies
have
revealed
real
research
practices
can
be
a
lot
less
smooth
than
the
accounts
we
find
The
socio-constructivist
approach
to
citations
is
grounded
in
the
socio-constructivist
sociology
of
science
a
sociological
paradigm
that
raised
in
different
forms
in
the
1970
s
partly
as
a
reaction
to
the
4
Hot
areas
detection
What
are
the
scientific
areas
that
are
growing
faster
What
is
their
potential
for
technological
transfer
as
a
Tool
for
Describing
the
Network
of
Interactions
between
Basic
and
Technological
Research
The
Case
of
Polymer
Chemsitry
Scientometrics
22
no
1
155
205
https
doi.org
10
1007
BF
02019280
Murray
Fiona
2002
Innovation
as
Co-Evolution
of
Scientific
and
Technological
Networks
Exploring
Tissue
Engineering
Research
Policy
31
no
8
9
1389
1403
https
doi.org
10
1016
S
0048
7333
02
00070
7
Thijs
Bart
2019
Science
Mapping
and
the
Identification
of
Topics
Theoretical
and
Methodological
Considerations
In
Springer
Handbook
of
Science
and
Technology
Indicators
edited
by
Wolfgang
Glänzel
Henk
F
The
logic
for
this
is
as
follows
On
the
face
of
it
there
is
no
rational
way
to
explain
the
halachah
of
hazamah
For
why
should
we
of
the
fact
that
two
other
credible
witnesses
have
contradicted
it
then
it
logically
follows
that
this
testimony
can
weather
the
relatively
minor
issue
that
it
lacks
the
built-in
deterrent
that
it
be
How
would
Rav
Ashi
respond
to
this
argument
Perhaps
Rav
Ashi
would
say
that
you
have
no
right
to
make
any
logical
extensions
from
a
law
that
is
clearly
not
governed
by
logic
This
viewpoint
can
be
compared
to
the
view
that
ironically
is
expressed
by
Rava
back
on
27
a
The
Gemara
disqualified
status
retroactively
Why
not
Because
since
as
explained
above
the
whole
concept
of
hazamah
defies
logic
we
cannot
treat
it
as
a
regular
case
where
we
would
certainly
establish
the
person’s
status
ruling
we
can
only
apply
it
today
and
going
forward
But
on
our
page
Rava
is
asserting
that
logic
compels
us
to
say
that
an
exemption
from
the
normal
requirement
that
testimony
be
subject
to
hazamah
must
have
perhaps
most
cogently
the
conditions
imposed
by
the
state
of
the
industrial
arts
the
technological
situation
but
in
the
second
place
and
scarcely
less
exacting
in
detail
the
received
scheme
of
use
and
ruling
principles
that
govern
the
quest
of
knowledge
it
will
therefore
be
the
habits
of
thought
enforced
by
the
current
technological
scheme
that
will
have
most
or
most
immediately
to
say
in
the
current
systematization
of
facts
The
working
logic
of
the
current
state
of
the
industrial
arts
will
necessarily
insinuate
itself
as
the
logical
scheme
which
must
of
course
effectually
govern
the
interpretation
and
so
enforced
in
the
traffic
of
workday
life
goes
into
effect
as
a
scheme
of
logic
governing
the
quest
of
knowledge
such
principles
as
have
by
habit
found
acceptance
as
being
conventionally
salutary
and
conclusive
preconceptions
of
that
disciplined
workmanship
that
has
been
instructed
in
the
logic
of
the
modern
technology
and
sophisticated
with
much
experience
in
a
civilization
in
whose
scheme
of
life
pecuniary
canons
no
less
unconditionally
with
no
more
afterthought
of
an
extraneous
sanction
than
once
did
the
highly
personalized
mythological
and
philosophical
constructions
and
interpretations
that
had
the
vogue
in
things
and
to
reduce
this
knowledge
to
a
comprehensible
system
The
objective
end
is
a
theoretical
organization
a
logical
articulation
of
things
known
the
lines
of
which
must
not
be
deflected
by
any
universities
appear
to
have
been
founded
originally
to
meet
the
needs
of
professional
training
more
particularly
theological
and
philosophical
training
in
the
earlier
times
The
American
universities
occupied
with
the
same
general
range
of
materials
and
employ
somewhat
the
same
logical
methods
in
handling
these
materials
But
the
relation
that
results
from
this
community
of
material
is
almost
wholly
external
So
also
on
the
other
hand
the
formal
incorporation
of
these
technological
and
professional
men
in
the
academic
body
with
its
professedly
single-minded
interest
in
learning
has
its
effect
on
their
position
which
unavoidably
leads
them
to
court
a
specious
appearance
of
scholarship
and
so
to
invest
their
technological
discipline
with
a
degree
of
pedantry
and
sophistication
whereby
it
is
hoped
to
give
in
like
wise
and
in
like
degree
that
modern
science
and
scholarship
have
grown
out
of
the
technology
of
handicraft
and
the
theological
philosophy
of
the
schoolmen
7
But
just
as
it
would
be
a
bootless
divine
scheme
of
salvation
and
with
a
view
to
quiet
title
and
to
make
manifest
their
devotion
to
the
greater
good
of
eschatological
expediency
those
ingenious
speculators
were
content
to
proclaim
that
Professional
training
and
technological
work
at
large
have
of
course
not
lost
ground
either
in
the
volume
and
the
rigour
of
their
institutional
ideal
not
necessarily
an
ideal
nursed
by
any
given
individual
but
the
ideal
logically
involved
in
the
scheme
of
modern
civilization
and
logically
coming
out
of
the
historical
development
of
Western
civilization
hitherto
and
visible
to
any
one
who
will
of
satellites
sensory
aircraft
and
specialized
monitoring
equipment
to
provide
information
on
meteorological
events
and
their
impact
The
United
States
government
has
long
had
an
interest
in
nonproliferation
as
a
means
of
ensuring
national
security
The
logic
governing
this
interest
is
straightforward
as
long
as
weapons
continue
Legendary
for
its
secrecy
the
National
Security
Agency
NSA
is
the
leading
cryptologic
organization
in
the
United
States
intelligence
community
Focused
on
cryptologic
and
cryptanalytic
missions
it
is
the
nation's
leading
employer
of
mathematicians
yet
little
is
known
about
developed
with
real-world
applications
and
their
challenges
in
mind
Active
logic
explicitly
reasons
in
time
and
incorporates
a
history
of
its
reasoning
as
it
runs
This
characteristic
makes
active
logic
more
flexible
than
traditional
AI
systems
and
therefore
more
suitable
for
One
important
strategy
that
we
employ
in
active
logic
is
metareasoning
Because
active
logic
tracks
its
reasoning
it
is
able
to
reason
about
its
own
inferences
and
thereby
recognize
and
recover
from
errors
to
provide
probabilistic
inference
for
targeted
queries
compiled
from
a
given
logic
program
For
stable
model
counting
every
model
represented
by
the
compiled
theory
must
be
stable
a
notion
in
logic
programming
that
stipulates
that
the
truth
of
atoms
cannot
be
self
supporting
given
the
logic
program’s
rules
9
To
accommodate
for
stable
models
DSHARP
was
Gutmann
B
Thon
I
Janssens
G
and
Raedt
L
D
2015
Inference
and
learning
in
probabilistic
logic
programs
using
15
3
358
401
7
Aziz
R
A
Chu
G
Muise
C
and
Stuckey
P
2015
Stable
model
counting
and
its
application
in
probabilistic
logic
programming
In
The
29
th
AAAI
Conference
on
Artificial
Intelligence
9
Gelfond
M
and
Lifschitz
V
1988
The
stable
model
semantics
for
logic
programming
In
Logic
Programming
Proceedings
of
the
Fifth
International
Conference
and
Symposium
Seattle
Washington
August
reasoning
is
that
it
takes
place
step-wise
in
time
Active
Logic
is
one
of
a
family
of
inference
engines
step-logics
that
explicitly
reason
in
time
and
incorporate
a
history
of
their
reasoning
as
they
support
for
a
security
model
that
separates
security
code
from
business
logic
WebLogic
allows
users
to
develop
and
deploy
an
application
that
has
business
logic
and
allows
the
application
to
access
other
services
like
database
messaging
or
other
enterprise
systems
It
is
a
robust
2
5
Event
calculus
solution
2
6
Default
logic
solution
2
7
Answer
set
programming
solution
2
8
Separation
logic
solution
2
9
Action
description
languages
In
artificial
intelligence
with
implications
for
cognitive
science
the
frame
problem
describes
an
issue
with
using
first-order
logic
to
express
facts
about
a
robot
in
the
world
Representing
the
state
of
a
robot
with
traditional
first-order
logic
requires
the
use
of
many
axioms
that
simply
imply
that
things
in
the
environment
do
not
change
arbitrarily
For
example
Hayes
describes
a
block
world
with
rules
about
stacking
blocks
together
In
a
first-order
logic
system
additional
axioms
are
required
to
make
inferences
about
the
environment
connection
with
the
problem
of
limiting
the
beliefs
that
have
to
be
updated
in
response
to
actions
In
the
logical
context
actions
are
typically
specified
by
what
they
change
with
the
implicit
assumption
off
at
time
0
and
the
door
opened
at
time
1
can
be
directly
represented
in
logic
clarification
needed
by
the
following
formulae
While
the
three
formulae
above
are
a
direct
expression
in
logic
of
what
is
known
they
do
not
suffice
to
correctly
draw
consequences
While
the
domain
can
be
first
expressed
in
this
language
and
then
automatically
translated
into
logic
In
this
article
only
the
expression
in
logic
is
shown
and
only
in
the
simplified
language
with
no
action
names
A
successor
state
axiom
is
a
formalization
in
logic
of
these
two
facts
For
example
if
The
fluent
calculus
is
a
variant
of
the
situation
calculus
It
solves
the
frame
problem
by
using
first-order
logic
terms
rather
than
predicates
to
represent
the
states
Converting
predicates
into
terms
in
first-order
logic
is
called
reification
the
fluent
calculus
can
be
seen
as
a
logic
in
which
predicates
representing
the
state
of
conditions
are
reified
The
difference
between
a
predicate
and
a
term
in
first-order
logic
is
that
a
term
is
a
representation
of
an
object
possibly
a
complex
object
The
event
calculus
solves
the
frame
problem
eliminating
undesired
solutions
by
using
a
non-monotonic
logic
such
as
first-order
logic
with
circumscription
3
or
by
treating
the
event
calculus
as
a
logic
program
using
negation
as
failure
Default
logic
solution
Encyclopædia
c
1679
This
default
sometimes
called
the
commonsense
law
of
inertia
was
expressed
by
Raymond
Reiter
in
default
logic
The
counterpart
of
the
default
logic
solution
in
the
language
of
answer
set
programming
is
a
rule
with
strong
negation
Separation
logic
solution
Separation
logic
is
a
formalism
for
reasoning
about
computer
programs
using
pre/post
specifications
of
the
form
displaystyle
mathrm
precondition
mathrm
code
mathrm
postcondition
Separation
logic
is
an
extension
of
Hoare
logic
oriented
to
reasoning
about
mutable
data
structures
in
computer
memory
Separation
logic
employs
a
tight
interpretation
of
pre/post
specs
which
say
that
the
code
can
only
access
memory
locations
guaranteed
to
exist
by
the
precondition
7
This
leads
to
the
soundness
of
the
most
important
inference
rule
of
the
logic
the
frame
rule
There
appears
to
be
some
similarity
between
the
separation
logic
solution
to
the
frame
problem
and
that
of
the
fluent
calculus
mentioned
Since
domains
are
expressed
in
these
languages
rather
than
directly
in
logic
the
frame
problem
only
arises
when
a
specification
given
in
an
action
description
logic
is
to
be
translated
into
logic
Typically
however
a
translation
is
given
from
these
languages
to
answer
set
programming
rather
than
first-order
logic
Defeasible
reasoning
Linear
logic
Separation
logic
Non-monotonic
logic
Qualification
problem
4
i.e
no
contradicting
information
is
known
5
Reynolds
J.C
2002
Separation
logic
A
logic
for
shared
mutable
data
structures
Proceedings
17
th
Annual
IEEE
Symposium
on
S
2
CID
6271346
6
O'Hearn
Peter
2019
01
28
Separation
logic
Communications
of
the
ACM
62
2
86
95
doi
10
1145
3211968
ISSN
0001
0782
Doherty
P
Gustafsson
J
Karlsson
L
Kvarnström
J
1998
TAL
Temporal
action
logics
language
specification
and
tutorial
Electronic
Transactions
on
Artificial
Intelligence
2
3
4
273
306
Gelfond
M
Lifschitz
V
1993
Representing
action
and
change
by
logic
programs
Journal
of
Logic
Programming
17
2
4
301
322
doi
10
1016
0743
1066
93
90035
f
Hanks
S
McDermott
D
1987
Nonmonotonic
logic
and
temporal
projection
Artificial
Intelligence
33
3
379
412
Miller
R
Shanahan
M
1999
The
event-calculus
in
classical
logic
alternative
axiomatizations
Electronic
Transactions
on
Artificial
Intelligence
3
1
77
105
Reiter
R
1980
A
logic
for
default
reasoning
PDF
Artificial
Intelligence
13
1
2
81
132
CiteSeerX
10
1
1
250
9224
Sandewall
E
1998
Cognitive
robotics
logic
and
its
metatheory
Features
and
fluents
revisited
Electronic
Transactions
on
Artificial
Turner
H
1997
Representing
actions
in
logic
programs
and
default
theories
a
situation
calculus
approach
PDF
Journal
of
integration
of
databases
in
particular
relational
databases
with
a
logic
reasoner
and
rule
engine
We
argue
that
defeasible
logic
is
an
appropriate
formalism
to
model
rules
in
particular
when
the
rules
are
Random
Entry
Chronological
Archives
Church’s
type
theory
aka
simple
type
theory
is
a
formal
logical
language
which
includes
classical
first-order
and
propositional
logic
but
is
more
expressive
in
a
practical
sense
It
is
used
with
some
the
formal
semantics
of
natural
language
And
in
particular
when
used
as
a
metalogic
to
semantically
embed
expressive
quantified
non-classical
logics
it
enables
further
topical
applications
in
artificial
intelligence
and
philosophy
for
verifying
the
correctness
of
mathematical
proofs
and
a
range
of
projects
involving
logic
and
artificial
intelligence
Some
examples
and
further
references
are
given
in
Sections
1
2
2
and
5
below
Type
theories
are
also
called
higher-order
logics
since
they
allow
quantification
not
only
over
individual
variables
as
in
first-order
logic
but
also
over
function
predicate
and
even
higher-order
variables
Type
theories
characteristically
assign
types
to
entities
5
3
Computational
Metaphysics
and
Artificial
Intelligence
5
4
Metalogical
Studies
Bibliography
properties
and
relations
may
be
regarded
as
particular
kinds
of
functions
Church’s
type
type
theory
is
thus
a
logic
of
functions
and
in
this
sense
it
is
in
the
tradition
of
the
work
of
Frege’s
The
first
is
the
symbol
used
for
the
type
of
individuals
the
second
is
the
symbol
used
for
a
logical
constant
see
Section
1
2
1
below
the
third
is
the
symbol
used
as
a
variable-binding
operator
that
represents
In
addition
there
may
be
other
constants
of
various
types
which
will
be
called
nonlogical
constants
or
parameters
Each
choice
of
parameters
determines
a
particular
formulation
of
the
system
of
the
same
if
x
and
y
have
exactly
the
same
properties
It
is
not
difficult
to
show
that
these
two
forms
of
the
definition
are
logically
equivalent
Example
4
An
example
from
philosophy
is
Gödel’s
variant
of
the
ontological
argument
for
the
existence
of
God
This
example
illustrates
two
interesting
aspects
Church’s
type
theory
can
be
employed
as
a
meta-logic
to
concisely
embed
expressive
other
logics
such
as
the
higher-order
modal
logic
assumed
by
Gödel
By
exploiting
the
possible
world
semantics
of
this
target
logic
its
syntactic
elements
are
defined
in
such
a
way
that
the
infrastructure
of
the
meta-logic
are
reused
as
much
as
possible
In
this
technique
called
shallow
semantical
embedding
of
Pi
realizes
a
possibilist
notion
of
quantification
By
introducing
a
binary
existence
predicate
in
the
metalogic
and
by
utilizing
this
predicate
as
an
additional
guard
in
the
definition
where
n
imath
is
a
nominal
constant
symbol
in
the
meta-logic
denoting
a
particular
possible
world
The
above
technique
can
be
exploited
for
a
natural
encoding
and
automated
assessment
of
Gödel’s
ontological
argument
in
higher-order
modal
logic
which
unfolds
into
formulas
in
Church’s
type
theory
such
that
higher-order
theorem
provers
can
be
applied
shall
sometimes
refer
to
elementary
type
theory
as
cT
It
embodies
the
logic
of
propositional
connectives
quantifiers
and
λ-conversion
in
the
context
of
type
theory
atoi
behaves
like
a
variable-binding
operator
but
it
is
defined
in
terms
of
λ
with
the
aid
of
the
logical
constant
iota
alpha
o
alpha
Thus
λ
is
still
the
only
Tarski
1923
noted
that
in
the
context
of
higher-order
logic
one
can
define
propositional
connectives
in
terms
of
logical
equivalence
and
quantifiers
Quine
1956
showed
how
both
quantifiers
and
connectives
defined
as
in
Section
1
2
1
The
logical
constants
of
cQ
0
are
sfQ
o
alpha
alpha
and
iota
imath
o
imath
It
is
natural
to
compare
the
semantics
of
type
theory
with
the
semantics
of
first-order
logic
where
the
theorems
are
precisely
the
wffs
which
are
valid
in
all
interpretations
From
an
intuitive
point
of
of
type
α
to
an
appropriate
element
of
cD
alpha
which
is
called
the
denotation
of
C
The
logical
constants
are
given
their
standard
denotations
then
this
requirement
is
obviously
met
due
to
the
presence
of
the
logical
constants
sfQ
o
alpha
alpha
in
the
signature
which
by
definition
denote
the
respective
identity
relations
on
the
objects
Thus
far
investigations
of
model
theory
for
Church’s
type
theory
have
been
far
less
extensive
than
for
first-order
logic
Nevertheless
there
has
been
some
work
on
methods
of
constructing
nonstandard
models
of
models
for
theories
with
arbitrary
possibly
incomplete
sets
of
logical
constants
and
on
developing
general
methods
of
establishing
completeness
of
various
systems
of
axioms
with
respect
to
various
Smullyan
1995
as
a
tool
for
deriving
a
number
of
basic
metatheorems
about
first-order
logic
in
a
uniform
way
The
principle
was
extended
to
elementary
type
theory
by
Andrews
1971
and
to
extensional
type
theory
with
primitive
equality
e.g
system
cQ
0
as
in
Section
1
4
or
alternatively
a
system
based
on
logical
constants
nsim
o
o
lor
o
o
o
and
the
Pi
o
o
alpha
s
as
in
Section
1
2
1
but
with
additional
primitive
logical
constants
o
alpha\alpha
added
extensional
type
theory
with
primitive
equality
are
presented
in
Benzmüller
1999
a
in
this
work
primitive
logical
constants
o
alpha\alpha
were
used
in
addition
to
nsim
o
o
lor
o
o
o
and
the
Pi
o
o
alpha
s
such
a
redundant
choice
of
logical
constants
is
not
rare
in
higher-order
theorem
provers
One
option
An
expansion
proof
is
a
generalization
of
the
notion
of
a
Herbrand
expansion
of
a
theorem
of
first-order
logic
it
provides
a
very
elegant
concise
and
nonredundant
representation
of
the
relationship
Since
type
theory
includes
first-order
logic
it
is
no
surprise
that
most
systems
of
type
theory
are
undecidable
However
one
may
look
for
Although
the
system
cT
of
elementary
type
theory
is
analogous
to
first-order
logic
in
certain
respects
it
is
a
considerably
more
complex
language
and
special
cases
of
the
decision
problem
for
unsolvable
By
contrast
the
corresponding
decision
problem
in
first-order
logic
with
function
symbols
is
known
to
be
solvable
Maslov
1967
Since
irrelevant
or
vacuous
quantifiers
can
always
be
below
The
challenges
are
obviously
much
bigger
than
in
first-order
logic
The
practically
way
more
expressive
nature
of
the
term-language
of
Church’s
type
theory
causes
a
larger
bushier
and
more
difficult
to
traverse
proof
search
space
than
in
first-order
logic
Moreover
remember
that
unification
which
constitutes
a
very
important
control
however
there
is
a
chance
to
find
significantly
shorter
proofs
than
in
first-order
logic
This
is
well
illustrated
with
a
small
concrete
example
in
Boolos
1987
for
which
a
fully
automated
proof
seems
now
in
Leo-III
cooperates
with
first-order
reasoning
tools
using
translations
to
many-sorted
first-order
logic
The
prover
accepts
every
common
TPTP
syntax
dialect
and
is
thus
very
widely
applicable
Recently
the
prover
has
also
been
extended
to
natively
supports
almost
every
normal
higher-order
modal
logic
Steen
et
al
2023
Vampire
Bhayat
Reger
2020
which
has
dominated
the
TPTP
competitions
in
first-order
logic
for
more
than
two
decades
now
also
supports
the
automation
of
Church's
type
theory
using
a
component
of
Montague’s
analysis
of
natural
language
is
the
definition
of
a
tensed
intensional
logic
Montague
1974
256
which
is
an
enhancement
of
Church’s
type
theory
Montague
Grammar
had
a
huge
impact
and
has
since
been
developed
in
many
further
directions
not
least
in
Typelogical/Categorical
Grammar
Further
related
work
on
intensional
and
higher-order
modal
logic
is
presented
in
Gallin
1975
and
Muskens
2006
Church’s
type
theory
is
a
classical
logic
but
topical
applications
in
philosophy
and
artificial
intelligence
often
require
expressive
non-classical
logics
In
order
to
support
such
applications
with
reasoning
tools
for
Church’s
type
theory
the
shallow
semantical
generalizes
and
extends
the
ideas
underlying
the
well
known
standard
translation
of
modal
logics
to
first-order
logic
The
technique
was
applied
for
the
assessment
of
modern
variants
of
the
ontological
argument
with
a
range
of
higher-order
theorem
provers
including
The
semantical
embedding
approach
has
been
adapted
and
further
extended
for
a
range
of
other
non-classical
logics
and
related
applications
In
philosophy
this
includes
the
encoding
and
formal
assessment
of
ambitious
ethical
and
metaphysical
theories
and
in
artificial
intelligence
this
includes
the
mechanization
of
deontic
logics
and
normative
reasoning
to
control
AI
systems
Benzmüller
et
al
2020
as
well
as
an
automatic
proof
of
the
muddy
children
puzzle
see
Appendix
B
of
dynamic
epistemic
logic
which
is
a
famous
puzzle
in
epistemic
reasoning
respectively
dynamic
epistemic
reasoning
5
4
Metalogical
Studies
Church’s
type
theory
is
also
well
suited
to
support
metalogical
studies
including
the
encoding
of
other
logical
formalisms
and
formalized
soundness
and
completeness
studies
see
e.g
Schlichtkrull
Benzmüller
Christoph
and
Bruno
Woltzenlogel
Paleo
2014
Automating
Gödel’s
Ontological
Proof
of
God’s
Existence
with
Higher-Order
Automated
Theorem
Provers
in
Proceedings
of
the
Halkjær
Asta
Anders
Schlichtkrull
Jørgen
Villadsen
2023
A
sequent
calculus
for
first-order
logic
formalized
in
Isabelle/HOL
Journal
of
Logic
and
Computation
33
4
818
836
doi
Schlichtkrull
Anders
2023
Soundness
of
the
Q
0
proof
system
for
higher-order
logic
Archive
of
Formal
Proofs
https
www.isa-afp.org/entries/Q
0
Soundness.html
59
4
483
502
doi
10
1007
s
10817
017
9407
7
2023
The
logic
languages
of
the
TPTP
world
Logic
Journal
of
the
IGPL
31
6
1153
1169
doi
10
1093
jigpal/jzac
068
artificial
intelligence
logic-based
category
theory
choice
axiom
of
descriptions
epsilon
calculus
Frege
Gottlob
Gödel
Kurt
incompleteness
theorems
grammar
typelogical
lambda
calculus
the
logic
history
of
first-order
logic
logic
classical
logic
deontic
logic
dynamic
epistemic
logic
modal
logic
second-order
and
higher-order
metaphysics
ontological
arguments
paradox
Skolem’s
paradoxes
and
contemporary
logic
possibilism-actualism
debate
possible
worlds
Principia
Mathematica
proof
theory
Random
Entry
Chronological
Archives
we
introduce
the
tools
of
economics,we
will
provide
examples
of
how
inattention
to
the
logic
of
economics
can
lead
you
to
false
and
sometimes
costly
errors
When
you
reach
the
end
of
this
book
you
logic
1
noun
6
logic
2
Definitions
1
Advertisement
View
synonyms
for
logic
BUTTON
American
BUTTON
British
BUTTON
Scientific
BUTTON
logic
2
a
particular
method
of
reasoning
or
argumentation
We
were
unable
to
follow
his
logic
3
the
system
or
principles
of
reasoning
applicable
to
any
branch
of
4
reason
or
sound
judgment
as
in
utterances
or
actions
There
wasn't
much
logic
in
her
move
Synonyms
cogency
sense
5
convincing
forcefulness
inexorable
truth
or
persuasiveness
the
irresistible
logic
of
the
facts
6
Computers
logic
circuit
logic
2
to
nouns
ending
in
logy
analogic
logic
premises
without
reference
to
meaning
or
context
See
also
formal
logic
deduction
induction
2
any
particular
formal
system
in
which
are
defined
axioms
and
rules
etc
8
chop
logic
to
use
excessively
subtle
or
involved
logic
or
argument
9
electronics
computing
1
the
principles
underlying
the
units
in
a
computer
system
that
perform
arithmetical
and
logical
operations
See
also
logic
circuit
2
as
modifier
a
logic
element
logic
logic
1
The
branch
of
philosophy
dealing
with
the
principles
of
reasoning
Classical
logic
as
taught
in
ancient
Greece
and
Rome
systematized
rules
for
deduction
The
modern
scientific
and
philosophical
logic
of
deduction
has
become
closely
allied
to
mathematics
especially
in
showing
how
the
foundations
of
mathematics
lie
in
logic
Origin
of
logic
1
First
recorded
in
1325
75
Middle
English
logik
from
Latin
logica
noun
use
of
neuter
plural
in
Medieval
Latin
taken
as
feminine
Origin
of
logic
2
Greek
logikós
See
logic
Discover
More
Origin
of
logic
1
C
14
from
Old
French
logique
from
Medieval
Latin
logica
neuter
plural
treated
in
Medieval
Latin
as
feminine
singular
from
Greek
logikos
We
are
willing
to
talk
to
them
with
logic
We
are
willing
to
talk
to
them
with
a
real
proposal
Kuritzkes
A
tennis
match
has
its
own
sort
of
logic
its
own
dramatic
logic
and
it’s
building
to
a
crescendo
From
Los
Angeles
Times
There's
a
logic
to
this
there's
a
commercial
logic
It's
not
without
any
sense
or
point
at
all
Similar
logic
is
echoed
throughout
anti-estrangement
articles
such
as
the
New
York
Times
noting
that
estranged
children
are
likely
to
lose
Reusing
the
same
Multan
pitch
for
the
second
Test
was
rooted
in
cricketing
logic
From
BBC
logialogical
Programmable
logic
device
complemented
inputs
to
the
AND
gates
These
AND
gates
also
known
as
product
terms
are
ORed
together
to
form
a
sum-of-products
logic
array
A
programmable
logic
device
PLD
is
an
electronic
component
used
to
build
reconfigurable
digital
circuits
Unlike
digital
logic
constructed
using
discrete
logic
gates
with
fixed
functions
the
function
of
a
PLD
is
undefined
at
the
time
of
manufacture
Before
the
PLD
can
be
used
in
a
circuit
it
must
be
programmed
to
implement
the
desired
function
1
Compared
to
fixed
logic
devices
programmable
logic
devices
simplify
the
design
of
complex
logic
and
may
offer
superior
performance
2
Unlike
for
microprocessors
programming
a
PLD
changes
the
connections
PLDs
can
broadly
be
categorised
into
in
increasing
order
of
complexity
simple
programmable
logic
devices
SPLDs
comprising
programmable
array
logic
programmable
logic
array
and
generic
array
logic
complex
programmable
logic
devices
CPLDs
and
field-programmable
gate
arrays
FPGAs
IC
The
TMS
2000
had
up
to
17
inputs
and
18
outputs
with
8
JK
flip-flops
for
memory
TI
coined
the
term
programmable
logic
array
PLA
for
this
device
4
In
1971
General
Electric
Company
GE
was
developing
a
programmable
logic
device
based
on
the
new
programmable
read-only
memory
PROM
technology
This
experimental
device
improved
on
IBM's
ROAM
by
allowing
multilevel
logic
Intel
had
just
introduced
the
floating-gate
UV
EPROM
so
the
researcher
at
GE
incorporated
that
technology
The
GE
device
was
the
first
erasable
PLD
ever
developed
predating
the
Altera
EPLD
by
over
a
decade
GE
obtained
several
early
patents
on
programmable
logic
devices
5
6
7
mask
limited
its
use
The
device
is
significant
because
it
was
the
basis
for
the
field
programmable
logic
array
produced
by
Signetics
in
1975
the
82
S
100
Intersil
actually
beat
Signetics
to
market
but
poor
In
1974
GE
entered
into
an
agreement
with
Monolithic
Memories
MMI
to
develop
a
mask-programmable
logic
device
incorporating
the
GE
innovations
The
device
was
named
programmable
associative
logic
array
or
PALA
The
MMI
5760
was
completed
in
1976
and
could
implement
edit
Main
article
Programmable
logic
array
IC
The
TMS
2000
had
up
to
17
inputs
and
18
outputs
with
8
JK
flip-flops
for
memory
TI
coined
the
term
programmable
logic
array
for
this
device
4
A
programmable
logic
array
PLA
has
a
programmable
AND
gate
array
which
links
to
a
programmable
OR
gate
array
which
can
then
be
edit
Main
article
Programmable
array
logic
programmable-AND
plane
used
to
implement
sum-of-products
binary
logic
equations
for
each
of
the
outputs
in
terms
of
the
inputs
and
either
synchronous
or
asynchronous
feedback
from
the
outputs
MMI
introduced
a
breakthrough
device
in
1978
the
programmable
array
logic
or
PAL
The
architecture
was
simpler
than
that
of
Signetics
FPLA
because
it
omitted
the
programmable
OR
array
This
made
the
parts
edit
Main
article
Generic
array
logic
220
px-Lattice_GAL
16
V
8
jpg
Lattice
GAL
16
V
8
and
20
V
8
These
are
35
An
improvement
on
the
PAL
was
the
generic
array
logic
device
or
GAL
invented
by
Lattice
Semiconductor
in
1985
This
device
has
the
same
logical
properties
as
the
PAL
but
can
be
erased
and
reprogrammed
The
GAL
is
very
useful
in
the
prototyping
stage
of
a
design
when
any
bugs
in
the
logic
can
be
corrected
by
reprogramming
GALs
are
programmed
and
reprogrammed
using
a
PAL
programmer
or
in
the
case
of
chips
that
Lattice
GALs
combine
CMOS
and
electrically
erasable
E
2
floating
gate
technology
for
a
high-speed
low-power
logic
device
A
similar
device
called
a
PEEL
programmable
electrically
erasable
logic
was
introduced
by
the
International
CMOS
Technology
ICT
corporation
Sometimes
GAL
chips
are
referred
as
simple
programmable
logic
device
SPLD
analogous
to
complex
programmable
logic
device
CPLD
below
edit
Main
article
Complex
programmable
logic
device
PALs
and
GALs
are
available
only
in
small
sizes
equivalent
to
a
few
hundred
logic
gates
For
bigger
logic
circuits
complex
PLDs
or
CPLDs
can
be
used
These
contain
the
equivalent
of
several
PALs
linked
by
programmable
interconnections
all
in
one
integrated
circuit
CPLDs
can
replace
thousands
or
even
hundreds
of
thousands
of
logic
gates
CPLD
contains
a
circuit
that
decodes
the
data
stream
and
configures
the
CPLD
to
perform
its
specified
logic
function
Some
manufacturers
such
as
Altera
and
Atmel
now
Microchip
use
JTAG
to
program
CPLDs
FPGAs
use
a
grid
of
logic
gates
and
once
stored
the
data
doesn't
change
similar
to
that
of
an
ordinary
gate
array
The
term
The
difference
between
FPGAs
and
CPLDs
is
that
FPGAs
are
internally
based
on
look-up
tables
LUTs
whereas
CPLDs
form
the
logic
functions
with
sea-of-gates
e.g
sum
of
products
CPLDs
are
meant
for
simpler
designs
while
FPGAs
are
meant
for
more
complex
designs
In
general
CPLDs
are
a
good
choice
for
wide
combinational
logic
applications
whereas
FPGAs
are
more
suitable
for
large
state
machines
such
as
An
erasable
programmable
logic
device
EPLD
is
an
integrated
circuit
that
comprises
an
array
of
PLDs
that
do
not
come
pre-connected
the
PLDs
are
being
sold
now
that
contain
a
microprocessor
with
a
fixed
function
the
so-called
core
surrounded
by
programmable
logic
These
devices
let
designers
concentrate
on
adding
new
features
to
designs
A
PLD
is
a
combination
of
a
logic
device
and
a
memory
device
The
memory
is
used
to
store
the
pattern
that
was
given
to
the
chip
during
commonly
referred
to
as
JEDEC
files
They
are
analogous
to
software
compilers
The
languages
used
as
source
code
for
logic
compilers
are
called
hardware
description
languages
or
HDLs
1
A
device
programmer
is
used
to
transfer
the
Boolean
logic
pattern
into
the
programmable
device
In
the
early
days
of
programmable
logic
every
PLD
manufacturer
also
produced
a
specialized
device
programmer
for
its
family
of
logic
devices
Later
universal
device
programmers
came
onto
the
market
that
supported
several
logic
device
families
from
different
manufacturers
Today's
device
programmers
usually
can
program
common
PLDs
mostly
PAL/GAL
equivalents
from
all
existing
manufacturers
Common
file
formats
used
to
store
the
Boolean
logic
pattern
fuses
are
JEDEC
Altera
POF
programmable
object
file
or
Xilinx
BITstream
17
edit
Complex
programmable
logic
device
CPLD
Field-programmable
gate
array
FPGA
Macrocell
array
Programmable
array
logic
PAL
4
a
b
Andres
Kent
October
1970
A
Texas
Instruments
Application
Report
MOS
programmable
logic
arrays
Texas
Instruments
Bulletin
CA
158
Report
introduces
the
TMS
2000
and
Cahners
Publishing
66
July
20
1975
Press
release
on
Intersil
IM
5200
field
programmable
logic
array
Fourteen
inputs
pins
and
48
product
terms
Avalanched-induced-migration
programming
Unit
price
was
37
50
9
FPLA's
give
quick
custom
logic
EDN
20
13
Boston
MA
Cahners
Publishing
61
July
20
1975
Press
release
on
Signetics
82
S
100
and
82
S
101
field
programmable
logic
arrays
Fourteen
inputs
pins
8
output
pins
and
48
product
terms
NiCr
fuse
link
Wikimedia
Commons
has
media
related
to
Programmable
logic
devices
Programmable
logic
Memory
cell
Combinational
logic
Sequential
logic
Logic
gate
Three-dimensional
integrated
circuit
3
D
IC
Emitter-coupled
logic
ECL
Erasable
programmable
logic
device
EPLD
Macrocell
array
Programmable
logic
array
PLA
Programmable
logic
device
PLD
Programmable
Array
Logic
PAL
Generic
Array
Logic
GAL
Complex
programmable
logic
device
CPLD
Field-programmable
gate
array
FPGA
Formal
equivalence
checking
Synchronous
logic
Asynchronous
logic
Finite-state
machine
Retrieved
from
https
en.wikipedia.org/w/index.php?title
Programmable_logic_device&o
ldid
1264062025
2
5
Negation
as
failure
2
6
Metalogic
programming
2
7
Relationship
with
the
Computational-representational
3
1
Prolog
3
2
Constraint
logic
programming
3
3
Datalog
3
4
Answer
set
programming
3
5
Abductive
logic
programming
3
6
Inductive
logic
programming
3
7
Concurrent
logic
programming
3
8
Concurrent
constraint
logic
programming
3
9
Higher-order
logic
programming
3
10
Linear
logic
programming
3
11
Object-oriented
logic
programming
3
12
Transaction
logic
programming
4
See
also
From
Wikipedia
the
free
encyclopedia
Programming
paradigm
based
on
formal
logic
Logic
programming
is
a
programming
database
and
knowledge
representation
paradigm
based
on
formal
logic
A
logic
program
is
a
set
of
sentences
in
logical
form
representing
knowledge
about
some
problem
domain
Computation
is
performed
by
applying
logical
reasoning
to
that
knowledge
to
solve
problems
in
the
domain
Major
logic
programming
language
families
include
Prolog
Answer
Set
Programming
ASP
and
and
are
read
as
declarative
sentences
in
logical
form
Although
Horn
clause
logic
programs
are
Turing
complete
1
2
for
most
practical
applications
Horn
clause
programs
need
to
be
extended
to
normal
logic
programs
with
negative
conditions
For
example
the
definition
of
sibling
uses
a
negative
condition
where
the
predicate
Logic
programming
languages
that
include
negative
conditions
have
the
knowledge
representation
capabilities
of
a
non-monotonic
logic
In
ASP
and
Datalog
logic
programs
have
only
a
declarative
reading
and
their
execution
is
performed
by
means
of
a
proof
procedure
or
model
generator
whose
behaviour
is
not
meant
to
be
controlled
by
the
programmer
However
in
the
Prolog
family
of
languages
logic
programs
also
have
a
procedural
interpretation
as
goal-reduction
procedures
Much
of
the
research
in
the
field
of
logic
programming
has
been
concerned
with
trying
to
develop
a
logical
semantics
for
negation
as
failure
and
with
developing
other
semantics
and
other
implementations
for
negation
These
developments
have
been
important
in
turn
for
supporting
the
development
of
formal
methods
for
logic-based
program
verification
and
program
transformation
The
use
of
mathematical
logic
to
represent
and
execute
computer
programs
is
also
a
feature
of
the
lambda
calculus
developed
by
Alonzo
Church
in
the
1930
s
However
the
first
proposal
to
use
the
clausal
form
of
logic
for
representing
computer
programs
was
made
by
Cordell
Green
3
This
used
an
axiomatization
of
a
subset
of
LISP
together
Although
it
was
based
on
the
proof
methods
of
logic
Planner
developed
by
Carl
Hewitt
at
MIT
was
the
first
language
to
emerge
within
this
Hayes
and
Kowalski
in
Edinburgh
tried
to
reconcile
the
logic-based
declarative
approach
to
knowledge
representation
with
Planner's
In
the
meanwhile
Alain
Colmerauer
in
Marseille
was
working
on
natural-language
understanding
using
logic
to
represent
semantics
and
using
resolution
for
question-answering
During
the
summer
of
1971
Colmerauer
invited
Kowalski
to
Marseille
and
together
they
discovered
that
the
clausal
form
of
logic
could
be
used
to
represent
formal
grammars
and
that
resolution
theorem
provers
could
be
used
for
parsing
Industry
to
develop
the
software
for
the
Fifth
Generation
Computer
Systems
FGCS
project
The
FGCS
project
aimed
to
use
logic
programming
to
develop
advanced
Artificial
Intelligence
applications
on
massively
parallel
computers
Although
the
project
initially
explored
the
use
of
Prolog
it
later
adopted
the
use
of
concurrent
logic
programming
because
it
was
closer
to
the
FGCS
computer
architecture
However
the
committed
choice
feature
of
concurrent
logic
programming
interfered
with
the
language's
logical
semantics
18
and
with
its
suitability
for
knowledge
representation
and
problem
solving
issues
resulted
in
the
FGCS
project
failing
to
meet
its
objectives
Interest
in
both
logic
programming
and
AI
fell
into
world-wide
decline
19
In
the
meanwhile
more
declarative
logic
programming
approaches
including
those
based
on
the
use
of
Prolog
continued
to
make
progress
developed
to
combine
declarative
and
procedural
representations
of
knowledge
the
purely
declarative
interpretation
of
logic
programs
became
the
focus
for
applications
in
the
field
of
deductive
databases
Work
in
this
field
became
prominent
around
1977
when
Hervé
Gallaire
and
Jack
Minker
organized
a
workshop
on
logic
and
databases
in
Toulouse
20
The
field
was
eventually
renamed
as
Datalog
This
focus
on
the
logical
declarative
reading
of
logic
programs
was
given
further
impetus
by
the
development
of
constraint
logic
programming
in
the
1980
s
and
Answer
Set
Programming
in
the
1990
s
It
is
The
procedural
interpretation
of
logic
programs
which
uses
backward
reasoning
to
reduce
goals
to
subgoals
is
a
special
case
of
the
use
of
a
problem-solving
strategy
to
control
the
use
of
a
declarative
logical
representation
of
knowledge
to
obtain
the
behaviour
of
an
algorithm
More
generally
different
problem-solving
strategies
can
be
applied
to
the
same
logical
representation
to
obtain
different
algorithms
Alternatively
different
algorithms
can
be
obtained
with
a
given
problem-solving
strategy
by
using
different
logical
representations
23
so
that
only
one
procedure
applies
26
Such
strategies
are
used
for
example
in
concurrent
logic
programming
edit
See
also
Functional
programming
Comparison
to
logic
programming
Y
can
be
represented
by
the
relation
mother(X
Y
In
this
respect
logic
programs
are
similar
to
relational
databases
which
also
represent
functions
as
relations
syntax
Ciao
Prolog
for
example
transforms
functional
syntax
into
relational
form
and
executes
the
resulting
logic
program
using
the
standard
Prolog
execution
strategy
29
Moreover
the
same
relations
Some
of
these
languages
such
as
miniKanren
28
and
relational
linear
programming
30
are
logic
programming
languages
in
the
sense
of
this
article
language
31
whose
core
construct
is
a
relational
expression
which
is
similar
to
an
expression
in
first-order
predicate
logic
edit
Main
article
Syntax
and
semantics
of
logic
programming
Viewed
in
purely
logical
terms
there
are
two
approaches
to
the
declarative
semantics
of
Horn
clause
logic
programs
One
approach
is
the
original
logical
consequence
semantics
which
understands
solving
a
goal
as
showing
that
the
goal
is
a
theorem
that
is
true
in
all
models
In
this
approach
computation
is
theorem-proving
in
first-order
logic
and
both
backward
reasoning
as
in
SLD
resolution
and
forward
also
regarded
as
providing
a
separate
proof-theoretic
or
operational
semantics
for
logic
programs
But
from
a
logical
point
of
view
they
are
proof
methods
rather
than
semantics
Remarkably
the
same
problem-solving
methods
of
forward
and
backward
reasoning
which
were
originally
developed
for
the
logical
consequence
semantics
are
equally
applicable
to
the
satisfiability
semantics
Here
are
the
same
definitions
as
a
logic
program
using
add(X
Y
Z
to
represent
X
Y
Z
and
multiply(X
Y
Z
to
represent
X
Y
Z
However
with
the
logical-consequence
semantics
there
are
non-standard
models
of
the
program
in
which
for
example
add(s(s
0
s(s
0
fails
In
the
satisfiability
semantics
the
failure
of
the
goal
means
that
the
truth
value
of
the
goal
is
false
But
in
the
logical
consequence
semantics
the
failure
means
that
the
truth
value
of
the
The
logical
semantics
of
NAF
was
unresolved
until
Keith
Clark
35
showed
that
under
certain
natural
conditions
NAF
is
an
efficient
correct
and
sometimes
complete
way
of
reasoning
with
the
logical
consequence
semantics
using
the
completion
of
a
logic
program
in
first-order
logic
This
property
of
withdrawing
a
conclusion
when
new
information
is
added
is
called
non-monotonicity
and
it
makes
logic
programming
a
non-monotonic
logic
The
completion
semantics
for
negation
is
a
logical
consequence
semantics
for
which
SLDNF
provides
a
proof-theoretic
implementation
However
in
the
1980
s
the
satisfiability
semantics
became
more
popular
for
logic
programs
with
negation
In
the
satisfiability
semantics
negation
is
interpreted
according
to
the
classical
definition
of
truth
in
an
intended
or
standard
model
of
the
logic
program
In
the
case
of
logic
programs
with
negative
conditions
there
are
two
main
variants
of
the
satisfiability
semantics
In
the
well-founded
semantics
the
intended
model
of
a
logic
program
is
a
unique
three-valued
minimal
model
which
always
exists
The
well-founded
semantics
generalises
the
notion
of
inductive
definition
in
mathematical
logic
38
XSB
Prolog
39
implements
the
well-founded
semantics
using
SLG
resolution
40
Both
the
well-founded
and
stable
model
semantics
apply
to
arbitrary
logic
programs
with
negation
However
both
semantics
coincide
for
stratified
logic
programs
For
example
the
program
for
sanctioning
thieves
is
locally
stratified
and
all
three
semantics
for
the
Attempts
to
understand
negation
in
logic
programming
have
also
contributed
to
the
development
of
abstract
argumentation
Metalogic
programming
Metaprogramming
is
an
application
of
the
more
general
use
of
a
metalogic
or
metalanguage
to
describe
and
reason
about
another
language
called
the
object
language
Metalogic
programming
allows
object-level
and
metalevel
representations
to
be
combined
as
in
natural
language
For
example
in
the
following
In
his
popular
Introduction
to
Cognitive
Science
44
Paul
Thagard
includes
logic
and
rules
as
alternative
approaches
to
modelling
human
thinking
He
argues
that
rules
which
have
the
form
IF
condition
THEN
action
are
very
similar
to
logical
conditionals
but
they
are
simpler
and
have
greater
psychological
plausability
page
51
Among
other
differences
between
logic
and
rules
he
argues
that
logic
uses
deduction
but
rules
use
search
page
45
and
can
be
used
to
reason
either
forward
or
backward
page
47
Sentences
in
logic
have
to
be
interpreted
as
universally
true
but
rules
can
be
defaults
which
He
states
that
unlike
logic
rule-based
systems
can
also
easily
represent
strategic
information
about
what
to
do
page
45
For
strategy
of
reducing
a
goal
to
subgoals
can
be
interpreted
in
the
manner
of
logic
programming
as
applying
backward
reasoning
to
a
logical
conditional
can_go(you
home
have(you
bus_fare
catch(you
bus
and
backward
reasoning
default
reasoning
and
goal-reduction
are
also
defining
characteristics
of
logic
programming
This
suggests
that
Thagard's
conclusion
page
56
that
also
applies
to
logic
programming
Other
arguments
showing
how
logic
programming
can
be
used
to
model
aspects
of
human
thinking
are
presented
by
Keith
Stenning
and
Michiel
van
Lambalgen
in
their
book
Human
Reasoning
and
Cognitive
Science
45
They
show
how
the
non-monotonic
character
of
logic
programs
can
be
used
to
explain
human
performance
on
a
variety
of
psychological
tasks
They
also
show
page
237
that
closed–world
reasoning
in
its
guise
as
logic
programming
has
an
appealing
neural
implementation
unlike
classical
logic
In
The
Proper
Treatment
of
Events
46
Michiel
van
Lambalgen
and
Fritz
Hamm
investigate
the
use
of
constraint
logic
programming
to
code
temporal
notions
in
natural
language
by
looking
at
the
way
human
The
use
of
logic
to
represent
procedural
knowledge
and
strategic
information
was
one
of
the
main
goals
contributing
to
the
early
development
of
logic
programming
Moreover
it
continues
to
be
an
important
feature
of
the
Prolog
family
of
logic
programming
languages
today
However
many
applications
of
logic
programming
including
Prolog
applications
increasingly
focus
on
the
use
of
logic
to
represent
purely
declarative
knowledge
These
applications
include
both
is
often
difficult
to
represent
such
implicit
knowledge
in
explicit
rules
This
difficulty
does
not
arise
however
when
logic
programs
are
used
to
represent
the
existing
explicit
rules
of
a
business
Historically
the
representation
of
a
large
portion
of
the
British
Nationality
Act
as
a
logic
program
in
the
1980
s
49
was
hugely
influential
for
the
development
of
computational
representations
of
legislation
showing
how
logic
programming
enables
intuitively
appealing
representations
that
can
be
directly
deployed
to
generate
as
which
always
succeeds
but
cannot
be
backtracked
Cut
can
be
used
to
improve
efficiency
but
can
also
interfere
with
the
logical
meaning
of
clauses
In
many
cases
the
use
of
cut
can
be
replaced
by
negation
Prolog
provides
other
features
in
addition
to
cut
that
do
not
have
a
logical
interpretation
These
include
the
built-in
predicates
assert
and
retract
for
destructively
updating
the
state
of
the
program
during
Various
extensions
of
logic
programming
have
been
developed
to
provide
a
logical
framework
for
such
destructive
change
of
state
53
54
55
Constraint
logic
programming
edit
Main
article
Constraint
logic
programming
Constraint
logic
programming
CLP
combines
Horn
clause
logic
programming
with
constraint
solving
It
extends
Horn
clauses
by
Procedurally
subgoals
whose
predicates
are
defined
by
the
program
are
solved
by
goal-reduction
as
in
ordinary
logic
programming
but
constraints
are
simplified
and
checked
for
satisfiability
by
a
The
following
constraint
logic
program
represents
a
toy
temporal
database
of
john's
history
as
a
teacher
teaches(john
software
T
1999
T
T
2005
teaches(john
logic
T
2005
T
T
2012
rank(john
instructor
T
1990
T
T
2010
semantics
The
following
goal
clause
queries
the
database
to
find
out
when
john
both
taught
logic
and
was
a
professor
teaches(john
logic
T
rank(john
professor
T
Constraint
logic
programming
has
been
used
to
solve
problems
in
such
fields
as
civil
engineering
mechanical
engineering
digital
circuit
verification
automated
timetabling
air
traffic
control
and
finance
It
is
closely
related
to
abductive
logic
programming
Datalog
is
a
database
definition
language
which
combines
a
relational
view
of
data
as
in
relational
databases
with
a
logical
view
as
in
logic
programming
and
cartesian
product
to
specify
queries
which
access
a
database
Datalog
uses
logical
connectives
such
as
or
and
and
not
in
the
bodies
of
rules
to
define
relations
as
part
of
the
database
itself
introducing
a
least-fixed-point
operator
56
57
In
contrast
recursive
relations
can
be
defined
naturally
by
rules
in
logic
programs
without
the
need
for
any
new
logical
connectives
or
operators
Datalog
differs
from
more
general
logic
programming
by
having
only
constants
and
variables
as
terms
Moreover
all
facts
are
true
For
this
purpose
it
uses
the
stable
model
semantics
according
to
which
a
logic
program
can
have
zero
one
or
more
intended
models
For
example
the
following
program
represents
a
degenerate
variant
of
This
combination
of
ordinary
logic
programming
clauses
and
constraint
clauses
illustrates
the
generate-and-test
methodology
of
problem
instantiate
the
program
in
all
possible
ways
reducing
it
to
a
propositional
logic
program
known
as
grounding
Then
they
apply
a
propositional
logic
problem
solver
such
as
the
DPLL
algorithm
or
a
Boolean
SAT
solver
However
some
implementations
such
as
s(CASP
59
Abductive
logic
programming
Main
article
Abductive
logic
programming
Abductive
logic
programming
60
ALP
like
CLP
extends
normal
logic
programming
by
allowing
the
bodies
of
clauses
to
contain
literals
whose
Abductive
logic
programming
has
been
used
for
fault
diagnosis
planning
natural
language
processing
and
machine
learning
It
has
also
Inductive
logic
programming
Main
article
Inductive
logic
programming
Inductive
logic
programming
ILP
is
an
approach
to
machine
learning
that
induces
logic
programs
as
hypothetical
generalisations
of
positive
and
negative
examples
Given
a
logic
program
representing
background
knowledge
and
positive
examples
together
with
constraints
representing
negative
examples
an
ILP
system
induces
a
logic
program
that
generalises
the
positive
examples
while
excluding
the
negative
Recent
work
in
ILP
combining
logic
programming
learning
and
probability
has
given
rise
to
the
fields
of
statistical
relational
learning
and
probabilistic
inductive
logic
programming
Concurrent
logic
programming
Main
article
Concurrent
logic
programming
Concurrent
logic
programming
integrates
concepts
of
logic
programming
with
concurrent
programming
Its
development
was
given
a
big
impetus
in
A
concurrent
logic
program
is
a
set
of
guarded
Horn
clauses
of
the
form
is
the
commitment
operator
Declaratively
guarded
Horn
clauses
are
read
as
ordinary
logical
implications
of
the
chosen
clause
These
subgoals
can
also
be
executed
in
parallel
Thus
concurrent
logic
programming
implements
a
form
of
don't
care
nondeterminism
rather
than
don't
know
nondeterminism
For
example
the
following
concurrent
logic
program
defines
a
predicate
shuffle(Left
Right
Merge
which
can
be
used
to
shuffle
two
lists
Carl
Hewitt
has
argued
68
that
because
of
the
indeterminacy
of
concurrent
computation
concurrent
logic
programming
cannot
implement
general
concurrency
However
according
to
the
logical
semantics
any
result
of
a
computation
of
a
concurrent
logic
program
is
a
logical
consequence
of
the
program
even
though
not
all
logical
consequences
can
be
derived
Concurrent
constraint
logic
programming
Main
article
Concurrent
constraint
logic
programming
Concurrent
constraint
logic
programming
69
combines
concurrent
logic
programming
and
constraint
logic
programming
using
constraints
to
control
concurrency
A
clause
can
contain
a
guard
which
is
a
set
of
constraints
that
may
block
the
applicability
of
the
clause
When
the
guards
of
several
clauses
are
satisfied
concurrent
constraint
logic
programming
makes
a
committed
choice
to
use
only
one
Higher-order
logic
programming
Several
researchers
have
extended
logic
programming
with
higher-order
programming
features
derived
from
higher-order
logic
such
as
predicate
variables
Such
languages
include
the
Prolog
extensions
HiLog
70
and
Linear
logic
programming
Basing
logic
programming
within
linear
logic
has
resulted
in
the
design
of
logic
programming
languages
that
are
considerably
more
expressive
than
those
based
on
classical
logic
Horn
clause
programs
can
only
represent
state
change
by
the
change
in
arguments
to
predicates
In
linear
logic
programming
one
can
use
the
ambient
linear
logic
to
support
state
change
Some
early
designs
of
logic
programming
languages
based
on
linear
logic
include
LO
72
Lolli
73
ACL
74
and
Forum
75
Forum
provides
a
goal-directed
interpretation
of
all
linear
logic
Object-oriented
logic
programming
F-logic
76
extends
logic
programming
with
objects
and
the
frame
syntax
Transaction
logic
programming
Transaction
logic
53
is
an
extension
of
logic
programming
with
a
logical
theory
of
state-modifying
updates
It
has
both
a
model-theoretic
semantics
and
a
procedural
one
An
implementation
of
a
subset
of
Transaction
logic
is
available
in
the
Flora
2
78
system
Other
prototypes
are
also
available
Boolean
satisfiability
problem
Constraint
logic
programming
Control
theory
Functional
programming
Fuzzy
logic
Inductive
logic
programming
Linear
logic
Logic
in
computer
science
includes
Formal
methods
Logic
programming
languages
Programmable
logic
controller
R
Satisfiability
Syntax
and
semantics
of
logic
programming
2
Andréka
H
Németi
I
1978
The
generalised
completeness
of
Horn
predicate-logic
as
a
programming
language
Acta
Cybernetica
4
1
3
10
Edinburgh
University
Press
pp
423
429
5
Kowalski
R
A
1988
The
early
years
of
logic
programming
PDF
Communications
of
the
ACM
31
38
43
England
Ellis
Horwood
pp
194
215
25
Nakamura
K
July
1985
Heuristic
Prolog
logic
program
execution
by
heuristic
search
Conference
on
Logic
Programming
27
Swift
T
Warren
D.S
January
2012
XSB
Extending
Prolog
with
tabled
logic
programming
Theory
and
Practice
of
Logic
Programming
12
1
2
157
187
arXiv
1012
5123
34
Van
Emden
M.H
Kowalski
R.A
October
1976
The
semantics
of
predicate
logic
as
a
programming
language
Journal
of
the
ACM
23
4
733
742
doi
10
1145
321978
321991
S
2
CID
11048276
doi
10
1016
0743
1066
84
90023
2
38
Denecker
M
Ternovska
E
2008
A
logic
of
nonmonotone
inductive
definitions
ACM
Transactions
on
Computational
Logic
9
41
Phan
Minh
Dung
1995
On
the
acceptability
of
arguments
and
its
fundamental
role
in
nonmonotonic
reasoning
logic
programming
and
n–person
games
Artificial
Intelligence
77
2
321
357
49
Sergot
M.J
Sadri
F
Kowalski
R.A
Kriwaczek
F
Hammond
P
Cory
H.T
1986
The
British
Nationality
Act
as
a
logic
program
PDF
Communications
of
the
ACM
29
5
370
386
doi
10
1145
5689
5920
S
2
CID
5665107
50
Prakken
H
Sartor
G
October
2015
Law
and
logic
a
review
from
an
argumentation
perspective
PDF
Artificial
Intelligence
Logic
Programming
In
ICLP
Vol
93
pp
257
279
54
Genesereth
M
2023
Dynamic
logic
programming
In
Prolog
The
Next
50
Years
pp
197
209
Cham
Springer
Nature
Switzerland
55
Kowalski
R
Sadri
F
Calejo
M
and
Dávila
J
2023
Combining
logic
programming
and
imperative
programming
in
LPS
In
Prolog
The
Next
50
Years
pp
210
223
Cham
Springer
Nature
60
Denecker
M
Kakas
A.C
July
2000
Special
issue
abductive
logic
programming
Journal
of
Logic
Programming
44
1
3
1
4
doi
10
1016
S
0743
1066
99
00078
3
63
Nienhuys-Cheng
Shan-hwei
Wolf
Ronald
de
1997
Foundations
of
inductive
logic
programming
Lecture
notes
in
computer
science
Lecture
notes
in
artificial
intelligence
Berlin
Heidelberg
Learning
pp
1
33
Dordrecht
Springer
Netherlands
65
Cropper
A
and
Dumančić
S
2022
Inductive
logic
programming
at
30
a
new
introduction
Journal
of
Artificial
Intelligence
70
Chen
Weidong
Kifer
Michael
Warren
David
S
February
1993
HiLog
A
foundation
for
higher-order
logic
programming
Journal
of
Logic
Programming
15
3
187
230
doi
10
1016
0743
1066
93
90039
J
71
Miller
D.A
and
Nadathur
G
1986
July
Higher-order
logic
programming
In
International
Conference
on
Logic
Programming
pp
74
Kobayashi
Naoki
Yonezawa
Akinori
1994
Asynchronous
communication
model
based
on
linear
logic
US/Japan
Workshop
on
Parallel
Symbolic
Computing
pp
279
294
CiteSeerX
10
1
1
42
8749
201
232
doi
10
1016
0304
3975
96
00045
X
76
Kifer
M
and
Lausen
G
1989
June
F-logic
a
higher-order
language
for
reasoning
about
objects
inheritance
and
scheme
In
78
Yang
G
and
Kifer
M
2000
July
FLORA
Implementing
an
efficient
DOOD
system
using
a
tabling
logic
engine
In
International
Conference
on
Computational
Logic
pp
1078
1093
Kowalski
R
A
1988
The
early
years
of
logic
programming
PDF
Communications
of
the
ACM
31
38
43
doi
10
1145
35043
35046
Miller
Dale
Nadathur
Gopalan
Pfenning
Frank
Scedrov
Andre
1991
Uniform
proofs
as
a
foundation
for
logic
programming
Annals
of
Pure
and
Applied
Logic
51
1
2
125
157
Evgeny
Dantsin
Thomas
Eiter
Georg
Gottlob
Andrei
Voronkov
Complexity
and
expressive
power
of
logic
programming
ACM
Comput
Surv
33
3
374
425
2001
Dependent
types
Functional
logic
Point-free
style
Logic
Abductive
logic
Answer
set
Constraint
Constraint
logic
Inductive
logic
Nondeterministic
Ontology
Probabilistic
logic
Query
Choreographic
programming
Concurrent
logic
Concurrent
constraint
logic
Concurrent
OO
agents
to
facilitate
knowledge
sharing
and
exchange
in
content
rating
in
describing
collections
of
pages
that
represent
a
single
logical
document
for
describing
intellectual
property
rights
of
Web
pages
Schemas
OWL
SKOS
For
more
complex
cases
tools
are
available
to
define
logical
relationships
among
resources
and
their
relationships
for
example
Does
one
have
to
understand
the
theory
of
formal
ontologies
and
logic
to
use
the
Semantic
Web
this
is
done
under
the
hood
What
the
developer
needs
to
operate
with
are
usually
simple
logical
patterns
of
the
sort
Given
that
Flipper
isA
Dolphin
and
Dolphin
isAlso
Mammal
one
can
conclude
for
ontologies
or
rules
model
theory
e.g
for
the
precise
semantics
of
RDF
and
RDF
Schemas
or
various
types
of
logics
e.g
for
rules
However
it
must
be
noted
that
Artificial
Intelligence
has
a
number
of
terms
which
are
synonymous
with
terms
it
already
knows
or
related
in
more
complex
and
useful
but
logically
precise
ways
On
the
Semantic
Web
both
ontologies
and
rules
are
used
to
express
extra
constraints
and
logical
relationships
among
resources
An
example
for
their
usage
is
to
help
data
integration
when
for
example
different
Ontologies
and
rules
refer
to
two
different
traditions
stemming
from
logic
as
developed
in
the
past
decades
Whereas
ontologies
are
more
closely
related
to
classification
systems
and
particularly
to
description
logic
rules
rely
more
on
the
advances
of
logic
programming
and
rule
based
systems
The
term
rules
in
the
context
of
the
Semantic
Web
refers
to
elements
of
logic
programming
and
rule
based
systems
bound
to
Semantic
Web
data
Rules
offer
a
way
to
express
for
example
constraints
on
the
a
precise
definition
of
this
core
Rule
language
on
ways
to
extend
this
rule
language
to
various
variants
production
rules
logic
programming
etc
to
exchange
expression
of
rules
among
systems
and
together
on
the
same
data
set
It
defines
some
sort
of
an
interplay
between
two
different
mechanisms
the
shall
we
say
logic
programming
part
and
the
knowledge
representation
part
Implementations
doing
both
The
substantive
differences
is
that
RIF
i.e
logic
programming
and
OWL
are
designed
to
allow
for
optimizations
of
different
sets
of
problems
within
an
ontology
specification
i.e
without
the
data
and
logic
programs
optimize
for
reasoning
problems
within
the
data
i.e
without
the
ontology
So
a
reasonable
rule
of
thumb
is
if
one’s
and/or
rules
includes
a
very
simple
ontology
example
Some
applications
may
decide
not
to
use
even
such
small
ontologies
and
rely
on
the
logic
of
the
application
program
Some
application
may
choose
to
use
very
of
the
terms
Some
applications
need
an
agreement
on
common
terminologies
without
any
rigor
imposed
by
a
logic
system
Finally
some
applications
may
need
more
complex
ontologies
with
complex
necessarily
distort
what
at
least
some
people
are
really
trying
to
express
as
a
consequence
there
will
be
ontological
mismatches
across
parts
of
the
Web
designed
by
different
people
The
issue
is
whether
Consequences
of
inconsistency
in
formal
logic
doesn’t
that
ruin
the
Semantic
Web
The
problem
referred
to
by
this
question
is
the
fact
that
in
formal
logic
if
there
is
an
inconsitency
somewhere
then
it
is
possible
to
draw
all
conclusions
and
their
negations
The
issue
is
whether
this
question
These
inferences
are
mostly
done
within
a
restricted
guarded
subset
of
first
order
logic
Usually
reasoning
on
the
Semantic
Web
does
not
use
the
full
power
of
first
order
or
higher
order
logic
and
therefore
avoids
some
of
the
dangerous
issues
that
can
come
from
an
inferred
inconsistency
In
other
words
in
practice
a
bridging
technology
providing
the
missing
link
between
the
rigorous
logical
formalism
of
ontology
languages
such
as
OWL
and
the
chaotic
informal
and
weakly-structured
world
of
social
approaches
to
4
2
Abductive
4
3
Analogical
5
Fallacies
the
sense
that
it
aims
to
formulate
correct
arguments
that
any
rational
person
would
find
convincing
The
main
discipline
studying
logical
reasoning
is
logic
Distinct
types
of
logical
reasoning
differ
from
each
other
concerning
the
norms
they
employ
and
the
certainty
of
the
conclusion
they
arrive
of
inference
such
as
modus
ponens
or
modus
tollens
Deductive
reasoning
plays
a
central
role
in
formal
logic
and
mathematics
For
non-deductive
logical
reasoning
the
premises
make
their
conclusion
rationally
convincing
without
ensuring
its
truth
This
is
often
plays
a
central
role
in
everyday
life
and
in
most
sciences
Often-discussed
types
are
inductive
abductive
and
analogical
reasoning
Inductive
reasoning
is
a
form
of
generalization
that
infers
example
is
a
doctor
who
examines
the
symptoms
of
their
patient
to
make
a
diagnosis
of
the
underlying
cause
Analogical
reasoning
compares
two
similar
systems
It
observes
that
one
of
them
has
a
feature
and
Arguments
that
fall
short
of
the
standards
of
logical
reasoning
are
called
fallacies
For
formal
fallacies
like
affirming
the
consequent
the
error
lies
in
the
logical
form
of
the
argument
For
informal
fallacies
like
false
dilemmas
the
source
of
the
faulty
reasoning
is
usually
found
in
the
content
or
the
context
of
the
argument
Some
theorists
understand
logical
reasoning
in
a
wide
sense
that
is
roughly
equivalent
to
critical
thinking
In
this
regard
it
encompasses
person
would
find
the
conclusion
convincing
based
on
the
premises
6
1
This
way
logical
reasoning
plays
a
role
in
expanding
knowledge
7
The
main
discipline
studying
logical
reasoning
is
called
logic
It
is
divided
into
formal
and
informal
logic
which
study
formal
and
informal
logical
reasoning
8
9
10
Traditionally
logical
reasoning
was
primarily
associated
with
deductive
reasoning
studied
by
formal
logic
11
But
in
a
wider
sense
it
also
includes
forms
of
non-deductive
reasoning
such
as
inductive
abductive
and
analogical
reasoning
12
13
14
The
forms
of
logical
reasoning
have
in
common
that
they
use
premises
to
make
inferences
in
a
norm-governed
way
As
norm-governed
practices
norms
i.e
agreement
about
whether
and
to
what
degree
the
premises
support
their
conclusion
The
types
of
logical
reasoning
differ
concerning
the
exact
norms
they
use
as
well
as
the
certainty
of
the
case
for
well-researched
issues
in
the
empirical
sciences
1
16
Some
theorists
give
a
very
wide
definition
of
logical
reasoning
that
includes
its
role
as
a
cognitive
skill
responsible
for
high-quality
A
variety
of
basic
concepts
is
used
in
the
study
and
analysis
of
logical
reasoning
Logical
reasoning
happens
by
inferring
a
conclusion
from
a
set
of
premises
3
Premises
and
conclusions
are
normally
seen
the
other
hand
express
no
propositions
since
they
are
neither
true
nor
false
20
3
The
propositions
used
as
the
starting
point
of
logical
reasoning
are
called
the
premises
The
proposition
inferred
from
them
the
terms
argument
and
inference
are
often
used
interchangeably
in
logic
The
purpose
of
arguments
is
to
convince
a
person
that
something
is
the
case
by
providing
reasons
for
this
belief
25
26
Many
probability
if
the
premises
of
a
correct
argument
are
true
it
raises
the
probability
that
its
conclusion
is
also
true
Forms
of
logical
reasoning
can
be
distinguished
based
on
how
the
premises
support
the
inference
is
a
scheme
of
drawing
conclusions
that
depends
only
on
the
logical
form
of
the
premises
and
the
conclusion
but
not
on
their
specific
content
39
40
The
most-discussed
rule
of
inference
is
the
The
rules
governing
deductive
reasoning
are
often
expressed
formally
as
logical
systems
for
assessing
the
correctness
of
deductive
arguments
Aristotelian
logic
is
one
of
the
earliest
systems
and
was
treated
as
the
canon
of
logic
in
the
Western
world
for
over
two
thousand
years
It
is
based
on
syllogisms
like
concluding
that
Socrates
is
a
mortal
mortal
44
45
46
The
currently
dominant
system
is
known
as
classical
logic
and
covers
many
additional
forms
of
inferences
besides
syllogisms
So-called
extended
logics
are
based
on
classical
logic
and
introduce
additional
rules
of
inference
for
specific
domains
For
example
modal
logic
can
be
used
to
reason
about
what
is
possible
and
what
is
necessary
Temporal
logic
can
be
used
to
draw
inferences
about
what
happened
before
during
and
after
an
event
47
48
49
Classical
logic
and
its
extensions
rest
on
a
set
of
basic
logical
intuitions
accepted
by
most
logicians
They
include
the
law
of
excluded
middle
the
double
negation
elimination
the
principle
of
explosion
and
the
bivalence
of
truth
50
So-called
deviant
logics
reject
some
of
these
basic
intuitions
and
propose
alternative
rules
governing
the
validity
of
arguments
44
51
52
For
example
intuitionistic
logics
reject
the
law
of
excluded
middle
and
the
double
negation
elimination
while
paraconsistent
logics
reject
the
principle
of
explosion
52
53
54
Deductive
reasoning
plays
a
central
role
in
formal
logic
and
mathematics
1
In
mathematics
it
is
used
to
prove
mathematical
Non-deductive
reasoning
is
an
important
form
of
logical
reasoning
besides
deductive
reasoning
It
happens
in
the
form
of
inferences
drawn
various
types
of
non-deductive
reasoning
like
inductive
abductive
and
analogical
reasoning
1
59
Non-deductive
reasoning
is
more
common
in
everyday
life
than
deductive
reasoning
60
Analogical
edit
Photo
of
a
Zucker
rat
Analogical
reasoning
can
be
used
to
transfer
insights
from
animal
experiments
to
humans
like
in
the
case
of
Analogical
reasoning
involves
the
comparison
of
two
systems
in
relation
to
their
similarity
It
starts
from
information
about
one
system
and
feature
F
3
therefore
b
probably
also
has
feature
F
89
90
Analogical
reasoning
can
be
used
for
example
to
infer
information
about
humans
from
medical
experiments
on
animals
1
rats
are
similar
Through
analogical
reasoning
knowledge
can
be
transferred
from
one
situation
or
domain
to
another
Arguments
from
analogy
provide
support
Analogical
reasoning
plays
a
central
role
in
problem-solving
decision-making
and
learning
It
can
be
used
both
for
simple
physical
impression
and
thereby
seduce
people
into
accepting
and
using
them
In
logic
the
term
fallacy
does
not
mean
that
the
conclusion
is
false
Instead
it
only
means
that
some
kind
of
error
was
committed
on
the
way
fortuitous
accident
the
conclusion
is
true
Outside
the
field
of
logic
the
term
fallacy
is
sometimes
used
in
a
slightly
different
sense
for
a
false
belief
or
theory
and
not
for
an
Formal
fallacies
are
expressed
in
a
formal
language
and
usually
belong
to
deductive
reasoning
Their
fault
lies
in
the
logical
form
of
the
argument
i.e
that
it
does
not
follow
a
valid
rule
of
Some
theorists
discuss
logical
reasoning
in
a
very
wide
sense
that
includes
its
role
as
a
broad
skill
responsible
for
high-quality
and
includes
the
capacity
to
select
and
apply
the
appropriate
rules
of
logic
to
specific
situations
110
It
encompasses
a
great
variety
of
abilities
besides
drawing
conclusions
from
premises
Examples
are
to
careful
evaluation
and
contrasts
in
this
regard
with
uncritical
snap
judgments
and
gut
feelings
17
Other
core
skills
linked
to
logical
reasoning
are
to
assess
reasons
before
accepting
a
claim
and
to
search
use
common
sense
and
to
avoid
inconsistencies
111
112
The
skills
responsible
for
logical
reasoning
can
be
learned
trained
and
improved
17
113
provided
by
other
people
instead
of
checking
every
single
fact
for
oneself
116
117
This
way
logical
reasoning
can
help
the
person
avoid
the
effects
of
propaganda
or
being
manipulated
by
better
to
suspend
judgment
than
to
jump
to
conclusions
118
In
this
regard
logical
reasoning
should
be
skeptical
and
open-minded
at
the
same
time
120
On
the
practical
level
logical
reasoning
concerns
the
issue
of
making
rational
and
effective
decisions
114
115
For
many
real-life
each
possible
action
there
can
be
conflicting
reasons
some
in
favor
of
it
and
others
opposed
to
it
In
such
cases
logical
reasoning
includes
weighing
the
potential
benefits
and
drawbacks
as
well
as
runs
out
of
drinking
water
in
the
middle
of
a
hiking
trip
they
could
employ
the
skills
associated
with
logical
reasoning
to
decide
whether
to
boil
and
drink
water
from
a
stream
that
might
contain
dangerous
Time
also
plays
a
central
role
in
logical
reasoning
124
If
one
lacks
important
information
it
is
often
better
to
delay
a
decision
and
look
for
new
information
before
coming
to
a
conclusion
111
If
the
decision
is
time-sensitive
on
the
other
hand
logical
reasoning
may
imply
making
a
fast
decision
based
on
the
currently
available
evidence
even
if
it
is
very
limited
For
example
if
a
friend
yells
Duck
during
a
baseball
game
the
most
logical
response
may
be
to
blindly
trust
them
and
duck
instead
of
demanding
an
explanation
or
Argumentation
theory
Dialogical
logic
Epilogism
7
Chang
2014
p
37
8
Haack
1978
p
1
10
1
Philosophy
of
logics
9
Dowden
2020
p
355
10
Girod
2014
p
13
11
Craig
1996
Formal
and
informal
logic
12
Bronkhorst
et
al
2020
p
1674
6
17
a
b
c
Dowden
2020
p
1
18
a
b
c
d
Audi
1999
Philosophy
of
logic
19
a
b
Honderich
2005
philosophical
logic
20
Copi
Cohen
Rodych
2018
p
4
43
Church
1996
p
104
44
a
b
Jacquette
2006
p
1
12
Introduction
Philosophy
of
logic
today
Audi
Robert
1999
Philosophy
of
logic
The
Cambridge
Dictionary
of
Philosophy
Cambridge
University
Press
ISBN
9781107643796
Archived
Bartha
Paul
2019
Analogy
and
Analogical
Reasoning
The
Stanford
Encyclopedia
of
Philosophy
Metaphysics
Research
Lab
Stanford
Bartha
Paul
2022
Analogy
and
Analogical
Reasoning
2
4
Analogical
inference
rules
The
Stanford
Encyclopedia
of
Philosophy
Metaphysics
Research
Lab
Stanford
University
Retrieved
19
January
Craig
Edward
1996
Formal
and
informal
logic
Routledge
Encyclopedia
of
Philosophy
Routledge
ISBN
9780415073103
Archived
Enyeart
Morris
A
Baker
Dale
Vanharlingen
Dave
May
1980
Correlation
of
inductive
and
deductive
logical
reasoning
to
college
physics
achievement
Journal
of
Research
in
Science
Teaching
17
3
Goswami
Usha
23
October
2013
Analogical
Reasoning
in
Children
Routledge
p
86
ISBN
9781317775393
Honderich
Ted
2005
philosophical
logic
The
Oxford
Companion
to
Philosophy
Oxford
University
Press
ISBN
9780199264797
Archived
from
Jacquette
Dale
2006
Introduction
Philosophy
of
logic
today
Philosophy
of
Logic
North
Holland
pp
1
12
ISBN
9780444515414
Reasoning
Concepts
in
logic
1
Formal
accounts
2
A
priori
property
of
logical
consequence
3
Proofs
and
models
4
2
Warrant-based
accounts
4
3
Non-monotonic
logical
consequence
5
See
also
Logical
consequence
also
entailment
or
implication
is
a
fundamental
concept
in
logic
which
describes
the
relationship
between
statements
that
hold
true
when
one
statement
logically
follows
from
one
or
more
statements
A
valid
logical
argument
is
one
in
which
the
conclusion
is
entailed
by
the
premises
because
the
conclusion
is
the
consequence
of
the
premises
The
philosophical
analysis
of
logical
consequence
involves
the
questions
In
what
sense
does
a
conclusion
follow
from
its
premises
and
What
does
it
mean
for
a
conclusion
to
be
a
consequence
of
premises
1
All
of
philosophical
logic
is
meant
to
provide
accounts
of
the
nature
of
logical
consequence
and
the
nature
of
logical
truth
2
explain
with
formal
proof
and
models
of
interpretation
1
A
sentence
is
said
to
be
a
logical
consequence
of
a
set
of
sentences
for
a
given
language
if
and
only
if
using
only
logic
i.e
without
regard
to
any
personal
interpretations
of
the
sentences
the
sentence
must
be
true
if
Logicians
make
precise
accounts
of
logical
consequence
regarding
a
given
language
L
annotation
semantics
MATH
displaystyle
mathcal
L
The
Polish
logician
Alfred
Tarski
identified
three
features
of
an
adequate
characterization
of
entailment
1
The
logical
consequence
relation
relies
on
the
logical
form
of
the
sentences
2
The
relation
is
a
priori
i.e
it
can
be
determined
with
or
without
regard
to
empirical
evidence
sense
experience
and
3
The
logical
consequence
relation
has
a
modal
component
3
The
most
widely
prevailing
view
on
how
best
to
account
for
logical
consequence
is
to
appeal
to
formality
This
is
to
say
that
whether
statements
follow
from
one
another
logically
depends
on
the
structure
or
logical
form
of
the
statements
without
regard
to
the
contents
of
that
form
Syntactic
accounts
of
logical
consequence
rely
on
schemes
using
inference
rules
For
instance
we
can
express
the
logical
form
of
a
valid
argument
as
A
priori
property
of
logical
consequence
semantics
MATH
displaystyle
Q
follows
logically
from
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
semantics
MATH
displaystyle
Q
is
a
logical
consequence
of
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
experience
so
they
must
be
knowable
a
priori
1
However
formality
alone
does
not
guarantee
that
logical
consequence
is
not
influenced
by
empirical
knowledge
So
the
a
priori
property
of
logical
consequence
is
considered
to
be
independent
of
formality
1
The
two
prevailing
techniques
for
providing
accounts
of
logical
consequence
involve
expressing
the
concept
in
terms
of
proofs
and
via
models
The
study
of
the
syntactic
consequence
of
a
logic
is
called
its
proof
theory
whereas
the
study
of
its
semantic
consequence
is
Modal
accounts
of
logical
consequence
are
variations
on
the
following
basic
idea
Such
accounts
are
called
modal
because
they
appeal
to
the
modal
notions
of
logical
necessity
and
logical
possibility
It
is
necessary
that
is
often
expressed
as
a
universal
quantifier
over
possible
The
conclusion
is
a
logical
consequence
of
the
premises
because
we
can
not
imagine
a
possible
world
where
a
all
frogs
are
green
b
Kermit
Modal-formal
accounts
of
logical
consequence
combine
the
modal
and
formal
accounts
above
yielding
variations
on
the
following
basic
idea
displaystyle
A
if
and
only
if
it
is
impossible
for
an
argument
with
the
same
logical
form
as
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
Non-monotonic
logical
consequence
See
also
Non-monotonic
logic
and
Belief
revision
Non-monotonic
inference
relation
consequence
relations
to
capture
the
idea
that
e.g
Tweety
can
fly
is
a
logical
consequence
of
Abstract
algebraic
logic
Ampheck
Boolean
algebra
logic
Boolean
domain
Boolean
function
Boolean
logic
Causality
Peirce's
law
Probabilistic
logic
Propositional
calculus
Strict
conditional
Tautology
logic
Tautological
consequence
Therefore
sign
Nostrand
Publishing
p
88
10
Hunter
Geoffrey
1996
1971
Metalogic
An
Introduction
to
the
Metatheory
of
Standard
First-Order
Logic
University
of
California
applications
An
introduction
London
College
Publications
Series
Mathematical
logic
and
foundations
Hanson
William
H
1997
The
concept
of
logical
consequence
The
Philosophical
Review
106
3
365
409
doi
10
2307
2998398
Shapiro
Stewart
2002
Necessity
meaning
and
rationality
the
notion
of
logical
consequence
in
D
Jacquette
ed
A
Companion
to
Philosophical
Logic
Blackwell
Tarski
Alfred
1936
On
the
concept
of
logical
consequence
Reprinted
in
Tarski
A
1983
Logic
Semantics
Metamathematics
2
nd
Inference
Philosophy
of
logic
Proof
Semantics
of
logic
Syntax
Argumentation
Metalogic
Metamathematics
topics
Mathematical
logic
Boolean
algebra
Mathematical
logic
Cardinality
First-order
logic
Formal
proof
Traditional
Classical
logic
Logical
truth
Truth
tables
Many-valued
logic
3
function
logical/constant
non-logical
variable
Satisfiability
Semantics
of
logic
Strength
Abstract
logic
Algebraic
logic
Automated
theorem
proving
Category
of
sets
History
of
logic
History
of
mathematical
logic
timeline
Common
logical
connectives
Common
logical
symbols
Inquisitive
semantics
Intensional
logic
Lambda
calculus
Pragmatics
Semantics
of
logic
Logical
consequence
Philosophical
logic
Metalogic
Propositional
calculus
Deductive
reasoning
Concepts
in
logic
Syntax
logic
Binary
operations
Logical
connective
OR
Disjunction
redirects
here
For
the
logic
gate
see
OR
gate
For
separation
of
chromosomes
see
Meiosis
For
disjunctions
in
Propositional
calculus
Predicate
logic
Boolean
algebra
Functional
completeness
Scope
logic
Applications
Digital
logic
Programming
languages
Mathematical
logic
Philosophy
of
logic
In
logic
disjunction
also
known
as
logical
disjunction
or
logical
or
or
logical
addition
or
inclusive
disjunction
is
a
logical
connective
typically
notated
as
language
sentence
it
is
sunny
or
it
is
warm
can
be
represented
in
logic
using
the
disjunctive
formula
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
In
classical
logic
disjunction
is
given
a
truth
functional
semantics
according
to
which
a
formula
Because
the
logical
or
means
a
disjunction
formula
is
true
when
either
one
or
both
of
its
parts
are
true
it
is
referred
to
as
an
inclusive
intended
English
speakers
sometimes
uses
the
phrase
and/or
In
terms
of
logic
this
phrase
is
identical
to
or
but
makes
the
inclusion
of
both
being
true
explicit
In
logic
and
related
fields
disjunction
is
customarily
notated
with
an
infix
operator
English
word
or
is
sometimes
used
as
well
often
in
capital
letters
In
Jan
Łukasiewicz's
prefix
notation
for
logic
the
operator
is
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
In
the
semantics
of
logic
classical
disjunction
is
a
truth
functional
operation
which
returns
the
truth
value
true
unless
both
of
its
In
classical
logic
systems
where
logical
disjunction
is
not
a
primitive
it
can
be
defined
in
terms
of
the
primitive
and
150
px-Or-gate-en.svg.png
OR
logic
gate
Operators
corresponding
to
logical
disjunction
exist
in
most
programming
languages
Many
languages
distinguish
between
bitwise
and
logical
disjunction
by
providing
two
distinct
operators
in
languages
following
C
bitwise
disjunction
is
performed
with
the
single
pipe
operator
and
logical
disjunction
with
the
double
pipe
operator
left
operand
evaluates
to
true
then
the
second
right
operand
is
not
evaluated
The
logical
disjunction
operator
thus
usually
constitutes
a
sequence
point
Although
the
type
of
a
logical
disjunction
expression
is
Boolean
in
most
languages
and
thus
can
only
have
the
value
true
or
false
in
some
languages
such
as
Python
and
JavaScript
the
logical
disjunction
operator
returns
one
of
its
operands
the
first
operand
if
it
evaluates
The
membership
of
an
element
of
a
union
set
in
set
theory
is
defined
in
terms
of
a
logical
disjunction
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
displaystyle
x\in
A\cup
B\Leftrightarrow
x\in
A
vee
x\in
B
Because
of
this
logical
disjunction
satisfies
many
of
the
same
identities
as
set-theoretic
union
such
as
associativity
commutativity
distributivity
and
de
Morgan's
laws
identifying
logical
conjunction
with
set
intersection
logical
negation
with
set
complement
11
annotation
semantics
MATH
displaystyle
lor
in
classical
logic
Notably
classical
disjunction
is
inclusive
while
natural
language
disjunction
is
often
Similar
deviations
from
classical
logic
have
been
noted
in
cases
such
as
free
choice
disjunction
and
simplification
of
disjunctive
question
asking
which
of
the
two
professions
is
hers
The
role
of
disjunction
in
these
cases
has
been
analyzed
using
nonclassical
logics
such
as
alternative
semantics
and
inquisitive
semantics
which
have
Affirming
a
disjunct
Boolean
algebra
logic
Boolean
algebra
topics
x
and
y
were
mutually
exclusive
Jevons
and
practically
all
mathematical
logicians
after
him
advocated
on
various
grounds
the
definition
of
logical
addition
in
a
form
that
does
not
necessitate
mutual
exclusiveness
retrieved
2020
09
03
2
Disjunction
logic
Encyclopedia
Britannica
Retrieved
2020
09
03
7
Howson
Colin
1997
Logic
with
trees
an
introduction
to
symbolic
logic
London
New
York
Routledge
p
38
ISBN
978
0
415
13342
5
Common
logical
connectives
Mathematical
logic
Cardinality
First-order
logic
Formal
proof
Traditional
Classical
logic
Logical
truth
Truth
tables
Many-valued
logic
3
function
logical/constant
non-logical
variable
Satisfiability
Semantics
of
logic
Strength
Abstract
logic
Algebraic
logic
Automated
theorem
proving
Category
of
sets
History
of
logic
History
of
mathematical
logic
timeline
Common
logical
symbols
Inquisitive
semantics
Intensional
logic
Lambda
calculus
Pragmatics
Semantics
of
logic
in-memory
data
structures
holding
the
address
is
typically
32
or
64
bits
Most
hard
disk
drives
released
after
1996
implement
logical
block
addressing
In
logical
block
addressing
only
one
number
is
used
to
address
data
and
each
linear
base
address
describes
a
single
block
In
redundant
array
of
independent
disks
RAID
devices
and
storage
area
networks
SANs
and
where
logical
drives
logical
unit
numbers
LUNs
are
composed
via
LUN
virtualization
and
aggregation
LBA
addressing
of
number
LBA
is
the
logical
block
address
HPC
is
the
maximum
number
of
heads
per
cylinder
reported
by
disk
is
greater
than
or
equal
to
16
514
064
then
the
content
of
word
1
the
number
of
logical
cylinders
shall
be
equal
to
16
383
1
20
Therefore
for
LBA
16450559
an
ATA
drive
may
actually
respond
with
the
collaborators
in
early
1970
s
based
on
the
theoretical
foundation
of
logic
of
computable
functions
previously
proposed
by
Dana
Scott
Work
on
the
LCF
system
introduced
the
general-purpose
programming
language
Among
subsequent
implementations
is
Cambridge
LCF
Later
systems
simplified
the
logic
to
use
total
instead
of
partial
functions
leading
to
HOL
HOL
Light
and
the
Isabelle
proof
assistant
that
supports
various
logics
As
of
2019
the
Isabelle
proof
assistant
still
contains
an
implementation
of
an
LCF
logic
Isabelle/LCF
This
mathematical
logic-related
article
is
a
stub
You
can
help
Wikipedia
by
expanding
it
Proof
assistants
Mathematical
logic
stubs
1
Theoretical
foundations
and
analysis
2
Computers
to
assist
logicians
3
Logic
applications
for
computers
220
px-Logic_Gates.svg.png
Diagrammatic
representation
of
computer
logic
gates
Logic
in
computer
science
covers
the
overlap
between
the
field
of
logic
and
that
of
computer
science
The
topic
can
essentially
be
divided
into
Theoretical
foundations
and
analysis
Use
of
computer
technology
to
aid
logicians
Use
of
concepts
from
logic
for
computer
applications
Logic
plays
a
fundamental
role
in
computer
science
Some
of
the
key
areas
of
logic
that
are
particularly
significant
are
computability
theory
formerly
called
recursion
theory
modal
logic
and
category
theory
The
theory
of
computation
is
based
on
concepts
defined
by
logicians
and
mathematicians
such
as
Alonzo
Church
and
Alan
Turing
1
2
Church
first
showed
the
existence
of
algorithmically
perfect
3
In
addition
some
other
major
areas
of
theoretical
overlap
between
logic
and
computer
science
are
Gödel's
incompleteness
theorem
proves
that
any
logical
system
powerful
enough
to
characterize
arithmetic
will
contain
statements
The
frame
problem
is
a
basic
problem
that
must
be
overcome
when
using
first-order
logic
to
represent
the
goals
of
an
artificial
intelligence
agent
and
the
state
of
its
environment
5
The
Curry–Howard
correspondence
is
a
relation
between
logical
systems
and
programming
languages
This
theory
established
a
it
showed
that
terms
in
the
simply
typed
lambda
calculus
correspond
to
proofs
of
intuitionistic
propositional
logic
Category
theory
represents
a
view
of
mathematics
that
emphasizes
Logic
programming
is
a
programming
database
and
knowledge
representation
paradigm
that
is
based
on
formal
logic
A
logic
program
is
a
set
of
sentences
about
some
problem
domain
Computation
is
performed
by
applying
logical
reasoning
to
solve
problems
in
the
domain
Major
logic
programming
language
families
include
Prolog
Answer
Set
Programming
ASP
and
Datalog
Computers
to
assist
logicians
was
the
Logic
Theorist
system
developed
by
Allen
Newell
Cliff
Shaw
and
Herbert
Simon
in
1956
One
of
the
things
that
a
logician
does
is
to
take
a
set
of
statements
in
logic
and
deduce
the
conclusions
additional
statements
that
must
be
true
by
the
laws
of
logic
For
example
if
given
the
statements
All
humans
are
mortal
and
Socrates
is
human
a
valid
conclusion
is
Socrates
is
mortal
Of
course
this
is
a
trivial
example
In
actual
logical
systems
the
statements
can
be
numerous
and
complex
It
was
realized
early
on
that
this
kind
of
Theorist
validated
the
theoretical
work
of
Bertrand
Russell
and
Alfred
North
Whitehead
in
their
influential
work
on
mathematical
logic
called
Principia
Mathematica
In
addition
subsequent
systems
have
been
utilized
by
logicians
to
validate
and
discover
new
mathematical
theorems
and
proofs
7
There
has
always
been
a
strong
influence
from
mathematical
logic
on
the
field
of
artificial
intelligence
AI
From
the
beginning
of
the
field
it
was
realized
that
technology
to
automate
logical
inferences
could
have
great
potential
to
solve
problems
and
draw
conclusions
from
facts
Ron
Brachman
has
described
first-order
logic
FOL
as
the
metric
by
which
all
AI
knowledge
representation
formalisms
should
be
evaluated
First-order
logic
is
a
general
and
powerful
method
for
describing
and
analyzing
information
The
reason
FOL
itself
is
simply
not
used
as
a
limited
subset
of
FOL
Rather
than
arbitrary
formulas
with
the
full
range
of
logical
operators
the
starting
point
is
simply
what
logicians
refer
to
as
modus
ponens
As
a
result
rule-based
systems
can
support
On
the
other
hand
logic
programming
which
combines
the
Horn
clause
subset
of
first-order
logic
with
a
non-monotonic
form
of
negation
has
both
high
expressive
power
and
efficient
implementations
In
particular
the
logic
programming
language
Prolog
is
a
Turing
complete
programming
language
Datalog
extends
the
relational
database
model
with
recursive
relations
while
answer
set
programming
is
a
form
of
logic
programming
oriented
towards
difficult
primarily
NP-hard
search
problems
Another
major
area
of
research
for
logical
theory
is
software
engineering
Research
projects
such
as
the
Knowledge
Based
Software
Assistant
and
Programmer's
Apprentice
programs
have
applied
logical
theory
to
validate
the
correctness
of
software
specifications
They
have
also
used
logical
tools
to
transform
the
specifications
into
efficient
code
on
diverse
platforms
and
to
prove
the
equivalence
Another
important
application
of
logic
to
computer
technology
has
been
in
the
area
of
frame
languages
and
automatic
classifiers
Frame
languages
such
as
KL-ONE
can
be
directly
mapped
to
set
theory
and
first-order
logic
This
allows
specialized
theorem
provers
called
classifiers
to
analyze
the
various
declarations
between
sets
subsets
world
of
the
Internet
Classifier
technology
is
built
on
top
of
languages
such
as
the
Web
Ontology
Language
to
allow
a
logical
semantic
level
on
top
of
the
existing
Internet
This
layer
is
called
the
Temporal
logic
is
used
for
reasoning
in
concurrent
systems
14
Automated
reasoning
Computational
logic
Logic
programming
7
Newell
Allen
J.C
Shaw
H.C
Simon
1963
Empirical
explorations
with
the
logic
theory
machine
In
Ed
Feigenbaum
ed
Computers
and
Thought
McGraw
Hill
pp
109
133
IEEE
Symposium
on
Logic
in
Computer
Science
LICS
Alwen
Tiu
Introduction
to
logic
video
recording
of
a
lecture
at
ANU
Logic
Summer
School
09
aimed
mostly
at
computer
scientists
Inference
Philosophy
of
logic
Proof
Semantics
of
logic
Syntax
Argumentation
Metalogic
Metamathematics
topics
Mathematical
logic
Boolean
algebra
Memory
cell
Combinational
logic
Sequential
logic
Logic
gate
Three-dimensional
integrated
circuit
3
D
IC
Emitter-coupled
logic
ECL
Erasable
programmable
logic
device
EPLD
Macrocell
array
Programmable
logic
array
PLA
Programmable
logic
device
PLD
Programmable
Array
Logic
PAL
Generic
Array
Logic
GAL
Complex
programmable
logic
device
CPLD
Field-programmable
gate
array
FPGA
Formal
equivalence
checking
Synchronous
logic
Asynchronous
logic
Finite-state
machine
A
logic
analyzer
is
an
electronic
instrument
that
captures
and
displays
multiple
logic
signals
from
a
digital
system
or
digital
circuit
A
logic
analyzer
may
convert
the
captured
data
into
timing
diagrams
protocol
decodes
state
machine
traces
opcodes
or
may
correlate
Presently
there
are
three
distinct
categories
of
logic
analyzers
available
on
the
market
Modular
LAs
which
consist
of
both
a
chassis
or
mainframe
and
logic
analyzer
modules
2
The
mainframe/chassis
contains
the
display
a
specific
number
of
channels
and
multiple
modules
may
be
combined
to
obtain
a
very
high
channel
count
While
modular
logic
analyzers
are
typically
more
expensive
the
ability
to
combine
multiple
modules
to
obtain
a
high
channel
count
and
the
generally
higher
performance
of
modular
logic
analyzers
often
justifies
the
price
For
the
very
high
end
modular
logic
analyzers
the
user
often
must
provide
their
own
host
PC
or
purchase
an
embedded
controller
220
px
8
Channel
28
cropped
29
jpg
8
channel
USB
logic
analyzer
Portable
LAs
4
sometimes
referred
to
as
standalone
LAs
Portable
logic
analyzers
integrate
everything
into
a
single
package
with
options
installed
at
the
factory
While
portable
logic
analyzers
generally
have
lower
performance
than
their
modular
counterparts
A
logic
analyzer
can
be
triggered
on
a
complicated
sequence
of
digital
events
then
capture
a
large
amount
of
digital
data
from
the
system
When
logic
analyzers
first
came
into
use
it
was
common
to
attach
several
hundred
clips
to
a
digital
system
Later
specialized
connectors
came
into
use
The
evolution
of
logic
analyzer
probes
has
led
to
a
common
footprint
that
multiple
vendors
support
which
provides
defects
before
the
unit
is
constructed
The
simulation
usually
provides
logic
analysis
displays
Often
complex
discrete
logic
is
verified
by
simulating
inputs
and
testing
outputs
using
boundary
scan
Logic
Field-programmable
gate
arrays
have
become
a
common
measurement
point
for
logic
analyzers
and
are
also
used
to
debug
the
logic
circuit
Logic
Analyzers
are
also
very
useful
when
it
comes
to
analyze
serial
protocols
like
I
2
C
SPI
or
UART
as
they
allow
to
capture
long
logic
sequences
showing
one
or
several
communication
frames
Usually
the
Mixed-signal
oscilloscopes
combine
the
functionality
of
a
digital
storage
oscilloscope
with
a
logic
analyzer
The
several
benefits
of
these
include
the
ability
to
view
analog
and
digital
signals
together
they
do
not
capture
state-mode
data
they
have
a
limited
channel
count
and
do
not
provide
the
analytical
depth
and
insight
of
a
logic
analyzer
A
logic
bomb
is
a
piece
of
code
intentionally
inserted
into
a
software
system
that
will
set
off
a
malicious
function
when
specified
conditions
Software
that
is
inherently
malicious
such
as
viruses
and
worms
often
contain
logic
bombs
that
execute
a
certain
payload
at
a
pre-defined
time
or
when
some
other
condition
is
met
This
technique
can
be
used
by
To
be
considered
a
logic
bomb
the
payload
should
be
unwanted
and
unknown
to
the
user
of
the
software
As
an
example
trial
programs
with
code
that
disables
certain
functionality
after
a
set
time
are
not
normally
regarded
as
logic
bombs
In
June
2006
Roger
Duronio
a
system
administrator
for
UBS
was
charged
with
using
a
logic
bomb
to
damage
the
company's
computer
network
and
with
securities
fraud
for
his
failed
plan
to
drive
down
the
company's
stock
with
activation
of
the
logic
bomb
1
2
Duronio
was
later
convicted
and
sentenced
to
8
years
and
1
month
in
On
20
March
2013
in
an
attack
launched
against
South
Korea
a
logic
bomb
struck
machines
and
wiped
the
hard
drives
and
master
boot
records
of
at
least
three
banks
and
two
media
companies
On
19
July
2019
David
Tinley
a
contract
employee
pleaded
guilty
for
programming
logic
bombs
within
the
software
he
created
for
Siemens
Corporation
8
The
software
was
intentionally
made
to
malfunction
after
a
certain
amount
of
time
requiring
the
company
to
hire
him
to
fix
it
for
a
fee
The
logic
bombs
went
undetected
for
two
years
but
were
then
discovered
while
he
was
out
of
town
In
February
2000
Tony
Xiaotong
Yu
indicted
before
a
grand
jury
was
accused
of
planting
a
logic
bomb
during
his
employment
as
a
programmer
and
securities
trader
at
Deutsche
Morgan
Grenfell
The
Jersey
headquarters
where
he
was
employed
as
a
Unix
administrator
creating
a
logic
bomb
set
to
go
off
on
his
birthday
in
2004
It
failed
to
work
due
to
a
programming
error
so
Lin
corrected
the
years
and
a
fine
of
US
250
000
13
14
On
29
October
2008
a
logic
bomb
was
discovered
at
American
mortgage
giant
Fannie
Mae
The
bomb
was
planted
by
Rajendrasinh
Babubhai
captured
images
of
Duchak
entering
the
facility
after
hours
and
loading
a
logic
bomb
onto
a
CSOC
server
that
stored
data
from
the
U.S
Marshals
In
January
2011
Duchak
was
sentenced
to
two
years
their
second
child
The
judge
at
the
sentencing
mentioned
that
this
logic
bomb
planting
incident
was
an
anomaly
in
an
otherwise
untarnished
work
history
19
History
of
the
Cold
War
that
in
1982
a
sabotage
occurred
on
the
Trans-Siberian
Pipeline
because
of
a
logic
bomb
According
to
Reed
a
KGB
operative
stole
the
plans
for
a
sophisticated
control
system
and
The
Central
Intelligence
Agency
CIA
was
tipped
off
by
documents
in
the
Farewell
Dossier
and
had
the
company
insert
a
logic
bomb
in
the
program
for
sabotage
purposes
20
21
Critics
have
contested
the
9
Cimpanu
Catalin
Siemens
contractor
pleads
guilty
to
planting
logic
bomb
in
company
spreadsheets
ZDNet
Retrieved
9
September
2019
we
introduce
the
tools
of
economics,we
will
provide
examples
of
how
inattention
to
the
logic
of
economics
can
lead
you
to
false
and
sometimes
costly
errors
When
you
reach
the
end
of
this
book
you
Logic
yields
validity
not
truth
Post
by
Ziya
on
Boldomatic
To
be
analytical
and
logical
is
something
most
people
find
recommendable
These
words
have
a
positive
connotation
Scientists
think
more
deeply
than
most
other
people
because
they
use
logical
and
analytical
methods
In
dictionaries
logic
is
often
defined
as
reasoning
conducted
or
assessed
according
to
strict
principles
of
validity
and
Using
logical
and
analytical
methods
in
social
sciences
means
that
economists
succumb
to
the
fallacy
of
composition
the
belief
that
the
society’s
real
structure
is
an
unwarranted
procedure
that
does
not
take
necessary
ontological
considerations
seriously
Faced
with
the
kind
of
methodological
individualism
and
rational
choice
theory
that
dominate
mainstream
economics
we
have
to
admit
that
even
if
The
overarching
flaw
with
the
analytical
economic
approach
using
methodological
individualism
and
rational
choice
theory
is
basically
that
they
reduce
social
explanations
to
purportedly
individual
Economics
is
not
mathematics
or
logic
It’s
about
society
The
real
world
transportable
to
a
largely
unknown
and
uncertain
reality
The
tragedy
with
mainstream
economic
theory
is
that
it
thinks
that
the
logic
and
mathematics
used
are
sufficient
for
dealing
with
our
real-world
Human
logic
has
to
supplant
the
classical
formal
logic
of
deductivism
if
we
want
to
have
anything
of
interest
to
say
of
the
real
instead
of
the
properties
of
the
system
I
also
wonder
about
the
fundamental
limits
of
logic
even
in
the
sciences
perhaps
most
especially
in
the
social
sciences
I
teach
Buddhist
economics
and
Islamic
economics
that
might
help
supplement
our
focus
on
logic
3
David
Harold
Chester
resources
Event
though
it
combines
labour
land
and
capital
it
is
not
directly
connected
with
human
attitudes
within
a
sociological
backing
The
measure
of
this
economics
activity
is
through
the
else
more
suitable
Therefore
it
enables
a
fairly
good
way
for
use
and
application
to
logical
analysis
particularly
for
simulation
of
the
whole
system
over
time
and
also
of
the
reactions
within
its
Much
as
it
can
be
claimed
that
economics
also
includes
the
sociological
aspects
noted
above
we
do
not
have
any
useful
ways
of
combining
the
measure
of
these
should
such
a
measure
even
be
independently
Disregarding
the
unmeasurable
sociological
aspects
only
the
business
economics
of
the
whole
system
of
macroeconomics
is
a
Making
America
Great
Again
2024
The
difference
between
logic
and
science
Money
and
the
myth
of
barter
In
a
computer
most
of
the
electronic
circuits
are
made
up
logic
gates
Logic
gates
are
used
to
create
a
circuit
that
performs
calculations
Outputs
may
be
high
1
or
low
0
Logic
gates
are
implemented
using
diodes
or
transistors
There
are
seven
basic
logic
gates
defined
these
are
Logic
gates
are
basic
building
components
of
digital
circuits
necessary
to
design
complex
systems
They
are
used
to
perform
logical
operations
It
is
important
to
understanding
the
working
and
combination
of
these
Program
to
Implement
Logic
Gates
In
a
computer
most
of
the
electronic
circuits
are
made
up
logic
gates
Logic
gates
are
used
to
create
a
circuit
that
performs
Two
Level
Implementation
of
Logic
Gates
The
term
two-level
logic
refers
to
a
logic
design
that
uses
no
more
than
two
logic
gates
between
input
and
output
This
does
not
mean
that
the
entire
design
will
only
have
two
logic
gates
but
it
does
mean
that
the
single
path
from
input
to
output
will
only
have
two
logic
gates
In
two-level
logic
10
min
read
circuit
and
Print
output
i.e
sum
and
C-Out
of
three
inputs
Full
Adder
A
Full
Adder
is
a
logical
circuit
that
performs
an
addition
operation
on
three
one-bit
binary
numbers
prime
Tex
which
are
analogous
to
disjunction
conjunction
and
negation
in
propositional
logic
Each
of
these
operations
has
a
corresponding
logic
gate
Apart
from
these
there
are
a
few
other
logic
gates
as
well
It
was
inv
10
min
read
Circuits
The
Logic
Gate
takes
one
or
more
Binary
inputs
and
performs
logical
Operations
to
Produce
a
single
binary
Output
Understanding
through
the
Different
Combinations
of
gates
is
design
the
Digital
circuit
The
gates
are
the
building
block
in
Digital
electronics
and
a
MUX
is
a
combinational
logic
circuit
used
in
Digital
Electronics
By
Combining
different
types
of
gates
we
discuss
the
overview
of
the
full
subtractor
and
will
implement
the
full
subtractor
logic
in
the
python
language
Also
we
will
cover
with
the
help
of
examples
Let's
discuss
it
one
by
one
Given
three
Programmable
Array
Logic
PAL
is
a
commonly
used
programmable
logic
device
PLD
It
has
programmable
AND
array
and
fixed
OR
array
Because
only
the
AND
array
is
programmable
it
is
easier
to
having
a
fixed
wiring
structure
of
AND
gates
followed
by
OR
gates
that
can
be
programmed
PLA
is
a
type
of
programmable
logic
device
to
construct
a
reconfigurable
digital
circuit
on
its
architecture
It
includes
memory
as
well
as
logical
6
min
read
Universal
Logic
Gates
A
logic
gate
is
an
active
electronic
component
that
uses
one
or
more
inputs
to
produce
an
output
based
on
the
bolean
algebra
each
of
the
digital
electronics
field
that
uses
binary
variables
and
logical
operations
Think
of
it
as
the
mind
that
makes
the
computers
work
effectively
Then
imagine
that
logic
gates
AND
OR
and
NOT
could
be
the
necessary
helpers
in
It
begins
with
an
elementary
but
thorough
overview
of
mathematical
logic
of
first
order
The
treatment
extends
beyond
a
single
method
of
formulating
logic
to
offer
instruction
in
a
variety
of
techniques
model
theory
truth
tables
Hilbert-type
proof
theory
the
newer
ideas
and
the
more
profound
results
of
twentieth-century
logical
research
Subsequent
chapters
explore
the
study
of
formal
number
theory
with
surveys
of
the
famous
incompleteness
and
undecidability
results
of
Godel
Church
Turing
and
others
The
emphasis
in
the
final
chapter
reverts
to
logic
with
examinations
of
Godel's
completeness
theorem
Gentzen's
theorem
Skolem's
paradox
begingroup
I
strongly
recommend
to
cover
at
least
some
basics
of
Mathematical
Logic
The
literature
is
full
with
logical
flawed
articles
Hence
you
should
master
a
level
to
be
able
to
recognize
page
and
few
pages
here
and
there
That
is
about
900
pages
out
of
about
1000
page
book
that
rely
heavily
on
formal
mathematical
logic
mathematical
proofs
can
vary
but
in
most
of
them
I
cant
think
of
any
graduate
text
that
would
not
lean
heavily
on
formal
mathematical
logic
Maybe
philosophy
of
economics
or
history
of
economic
thought
would
be
Contemporary
Introduction
by
Julian
Reiss
includes
some
parts
that
are
written
in
formal
mathematical
logic
will
be
able
to
understand
and
even
construct
proofs
without
ever
sitting
in
any
course
on
formal
mathematical
logic
Any
study
of
mathematics
implicitly
also
teaches
you
formal
mathematical
logic
just
not
in
necessary
structured
or
obvious
way
16
Topological
concepts
in
economic
theory
4
Almost
every
Hermitian
matrix
has
distinct
eigenvalue
differences
If
models
of
first-order
logic
are
defined
using
set
theory
is
every
first-order
theory
implicitly
an
extension
of
set
theory
Level
beginner
Perspectives
Behavioral
Economics
Complexity
Economics
Ecological
Economics
Evolutionary
Economics
Other
Format
Website
Link
https
leanlogic.online
stimulating
exploration
of
fields
as
diverse
as
culture
history
science
art
logic
ethics
myth
economics
and
anthropology
being
made
up
of
four
hundred
and
four
engaging
essay-entries
covering
topics
analysis
of
how
our
present
market-based
economy
is
destroying
the
very
foundations—ecological
economic
and
cultural
on
which
it
depends
and
his
core
focus
a
compelling
grounded
vision
for
a
cohesive
the
perfect
place
to
start
in
his
all-encompassing
holisic
vision
of
post-growth
economics
https
leanlogic.online/guide-lean-logic
markets
methodology
migration
network
economics
philosophy
of
science
post-capitalism
social
ecological
transformation
socio-economics
Sociology
of
Science
technology
LARS
P
SYLL
Feed
LARS
P
SYLL
Comments
Feed
LARS
P
SYLL
On
the
use
of
logic
and
mathematics
in
economics
Comments
Feed
alternate
alternate
LARS
P
SYLL
WordPress.com
On
the
use
of
logic
and
mathematics
in
economics
thinking
and
reasoning
in
strict
accordance
with
the
limitations
and
incapacities
of
the
human
misunderstanding
The
basic
of
logic
is
the
syllogism
consisting
of
a
major
and
a
minor
premise
and
a
This
may
be
called
syllogism
arithmetical
in
which
by
combining
logic
and
mathematics
we
obtain
a
double
certainty
and
are
twice
blessed
In
mainstream
economics
both
logic
and
mathematics
are
used
extensively
And
most
mainstream
economists
sure
look
upon
themselves
fails
since
there
is
no
way
you
can
relevantly
analyse
confirmation
or
explanation
as
a
purely
logical
relation
between
hypothesis
and
evidence
or
between
law-like
rules
and
explananda
In
science
we
argue
and
try
to
substantiate
our
beliefs
and
hypotheses
with
reliable
evidence
Propositional
and
predicate
deductive
logic
on
the
other
hand
is
not
about
reliability
but
the
validity
of
the
conclusions
real-world
ontology
only
relating
propositions
as
true
or
false
within
a
formal-logic
system
and
as
an
argument
scheme
is
totally
non-ampliative
the
output
of
the
analysis
is
nothing
else
than
the
In
science
we
standardly
use
a
logically
non-valid
inference
the
fallacy
of
affirming
the
consequent
of
the
following
form
Although
logically
invalid
it
is
nonetheless
as
already
Charles
S
Peirce
argued
more
than
a
century
ago
a
kind
of
inference
abduction
premise
2
The
truth
of
the
conclusion
explanation
is
nothing
that
is
logically
given
but
something
we
have
to
justify
argue
for
and
test
in
different
ways
to
possibly
establish
with
any
certainty
or
course
we
can
Inferences
to
the
best
explanation
are
fallible
inferences
since
the
premises
do
not
logically
entail
the
conclusion
so
from
a
logical
point
of
view
inference
to
the
best
explanation
is
a
weak
mode
of
inference
But
if
the
arguments
put
forward
are
strong
defeasible
reasoning
in
inference
to
the
best
explanation
well
then
get
in
to
math
or
logic
not
science
3
Dave
I
think
you
misread
me
here
I
certainly
have
no
problem
at
all
with
mathematics
or
logic
per
se
That’s
not
what
I
am
criticising
Far
from
it
But
to
insist
on
always
applying
4
As
a
mathematician
I
just
don’t
see
how
this
helps
Taking
Lars
last
paragraph
isn’t
logic
relevant
to
science
And
in
so
far
as
science
is
interested
in
mathematical
structures
such
as
numbers
This
is
very
like
Lars
notion
of
abduction
but
is
strictly
logical
for
any
strictly
logical
interpretation
of
implies
and
evidence
Lars
wishes
to
go
beyond
abduction
to
inference
to
the
best
explanation
This
could
also
be
made
logical
by
having
a
logical
definition
of
best
It
seems
to
me
that
neoclassical
economics
could
be
reformulated
in
a
way
that
meets
Lars
requirements
and
is
also
logical
and
mathematical
it
is
just
that
Lars
and
I
might
not
accept
their
notion
of
best
their
lead
from
some
inadequate
understanding
of
science
and
hence
a
misuse
of
logic
and
a
misinterpretation
of
mathematical
results
This
seems
a
better
explanation
to
me
than
Lars
view
is
that
logic
and
maths
per
se
are
to
blame
But
maybe
the
teaching
of
maths
and
logic
are
at
fault
Comment
by
Dave
Marsay
13
Mar
2021
Random
Entry
Chronological
Archives
1
2
Contemporary
economics
and
its
several
schools
2
Six
central
methodological
problems
2
1
Positive
versus
normative
economics
1960
Pasinetti
1981
Roncaglia
1978
and
even
neuroeconomists
who
study
neurological
concomitants
of
choice
behavior
Camerer
2007
Camerer
et
al
2005
Camerer
et
al
2008
Glimcher
et
al
2008
2
Six
central
methodological
problems
Although
the
different
branches
and
schools
of
economics
raise
a
wide
variety
of
epistemological
and
ontological
issues
concerning
economics
six
problems
have
been
central
to
methodological
reflection
in
this
philosophical
sense
concerning
economics
economics
bears
on
and
may
be
influenced
by
normative
concerns
raises
methodological
questions
about
the
relationships
between
a
positive
science
concerning
facts
and
a
normative
inquiry
into
values
and
what
interests
Since
economic
theories
bear
so
centrally
on
people’s
interests
there
are
bound
to
be
ideological
biases
at
work
in
the
discipline
Marx
1867
Preface
Positive
and
normative
are
especially
and
accounts
of
the
reasons
for
their
choices
See
also
the
entries
on
methodological
individualism
and
reasons
for
action
justification
motivation
explanation
economic
equilibrium
In
the
anti-metaphysical
intellectual
environment
of
the
1930
s
and
1940
s
of
which
logical
positivism
was
at
least
symptomatic
any
mention
of
causation
became
suspicious
and
As
mentioned
in
the
previous
section
the
most
important
methodological
issue
concerning
economics
involves
the
very
considerable
false
generalizations
If
these
claims
are
not
universal
generalizations
then
what
is
their
logical
form
And
how
can
claims
that
appear
in
this
way
to
be
false
or
approximate
be
tested
and
confirmed
or
disconfirmed
These
problems
have
bedeviled
economists
and
economic
methodologists
from
the
first
methodological
reflections
to
the
present
day
contingencies
of
policy
and
history
Roscher
1874
Schmoller
1888
1898
Mill’s
methodological
views
dominated
the
mainstream
of
economic
theory
for
a
century
for
example
Cairnes
1875
Mill’s
vision
in
the
1870
s
and
is
clearly
discernible
in
the
most
important
methodological
treatises
concerning
neoclassical
economics
such
as
John
Neville
Keynes
The
Scope
and
Method
of
Political
Economy
1891
or
Lionel
Robbins
An
Essay
on
the
Nature
and
Significance
of
Economic
Science
1932
Hausman
1992
argues
that
current
methodological
practice
closely
resembles
Mill’s
methodology
despite
the
fact
that
is
coherent
and
conforms
to
an
old-fashioned
empiricist
philosophy
of
science
that
finds
the
nomological
force
of
generalizations
in
their
universality
it
is
not
faithful
to
the
way
in
which
economists
see
Over
the
last
two
decades
there
has
been
a
surge
of
experimentation
in
economics
and
Friedman’s
methodological
views
probably
do
not
command
the
same
near
unanimity
that
they
used
to
But
they
are
still
customizing
a
model
from
this
collection
Is
the
ubiquity
of
talk
of
models
just
a
change
in
terminological
fashion
or
does
the
concern
with
models
which
is
by
no
means
unique
to
economics
signal
a
methodological
shift
What
are
models
These
questions
have
been
discussed
by
Cartwright
1989
1999
Godfrey
Smith
2006
Grüne-Yanoff
are
arguably
nothing
other
than
his
or
her
own
thoughts
and
the
logical
implications
of
the
axioms
that
define
the
model
are
never
disappointed
This
is
not
to
say
that
the
logical
investigation
of
models
never
results
in
surprises
Humans
are
not
logically
omniscient
and
discovering
the
implications
of
a
set
of
axioms
may
be
an
arduous
devoted
to
economic
methodology
That
literature
explores
many
methodological
approaches
and
applies
its
conclusions
to
many
schools
and
branches
of
economics
Much
of
the
literature
has
focused
on
the
rapidly
increasing
role
of
empirical
and
experimental
inquiries
in
the
day-to-day
work
of
economists
have
seen
echoes
in
methodological
inquiries
Backhouse
2010
Since
1985
there
has
been
a
journal
economics
and
since
1994
there
has
also
been
a
Journal
of
Economic
Methodology
This
section
will
sample
some
of
the
methodological
approaches
of
the
past
two
decades
falsificationist
methodology
1968
1969
Scientists
should
formulate
theories
that
are
logically
falsifiable
that
is
inconsistent
with
some
possible
observation
reports
All
crows
are
black
is
logically
falsifiable
it
is
inconsistent
with
and
would
be
falsified
by
an
since
it
has
thus
far
survived
testing
Popper
has
defended
what
he
calls
situational
logic
which
is
basically
rational
choice
theory
as
the
correct
method
for
the
social
sciences
1967
1976
There
appear
to
be
serious
tensions
between
Popper’s
falsificationism
and
his
defense
of
situational
logic
and
his
discussion
of
situational
logic
has
not
been
as
influential
as
his
falsificationism
For
discussion
of
how
situational
logic
applies
to
economics
see
Hands
1985
a
theories
and
models
are
almost
all
unfalsifiable
and
if
they
were
the
widespread
acceptance
of
Friedman’s
methodological
views
would
insure
that
they
are
not
subjected
to
serious
test
When
models
apparently
derive
testable
implications
Caldwell
1984
But
this
response
ignores
Popper’s
insistence
that
testing
requires
methodological
decisions
not
to
attribute
failures
of
predictions
to
mistakes
in
subsidiary
These
problems
arise
generally
and
Popper
proposes
that
they
be
solved
by
a
methodological
decision
to
regard
a
failure
of
the
deduced
testable
implication
to
be
a
failure
of
the
theory
But
in
economics
the
subsidiary
assumptions
are
dubious
and
in
many
cases
known
to
be
false
Making
the
methodological
decision
that
Popper
requires
is
unreasonable
and
would
lead
one
to
reject
all
economic
theories
justify
relying
on
it
in
theoretical
studies
or
for
policy
purposes
would
be
making
the
methodological
error
of
supposing
that
there
can
be
evidence
in
support
of
hypotheses
With
the
notable
exception
of
One
radical
reaction
to
the
difficulties
of
justifying
the
reliance
on
severe
simplifications
is
to
deny
that
economics
passes
methodological
muster
Alexander
Rosenberg
1992
maintains
that
economics
can
only
An
equally
radical
but
opposite
reaction
is
Deirdre
McCloskey’s
who
denies
that
there
are
any
non-trivial
methodological
standards
that
economics
must
meet
1985
1992
1994
2000
McCloskey
and
Ziliak
2003
previous
paragraph
is
hard
to
defend
and
potentially
self-defeating
It
is
hard
to
defend
because
epistemological
standards
have
already
influenced
the
conversation
of
economists
The
standards
of
predictive
Friedman
do
so
because
of
their
interest
in
policy
not
because
they
seek
to
avoid
or
resolve
epistemological
and
semantic
puzzles
concerning
references
to
unobservables
devoted
to
exploring
the
varieties
of
realism
implicit
in
the
methodological
statements
and
theoretical
enterprises
of
economists
see
Mäki
1990
a
b
c
2007
and
Lehtinen
Kuorikoski
and
Ylikoski
Throughout
its
history
economics
has
been
the
subject
of
sociological
as
well
as
methodological
scrutiny
Many
sociological
discussions
of
economics
like
Marx’s
critique
of
classical
political
economy
have
been
concerned
to
identify
ideological
distortions
and
thereby
to
criticize
particular
aspects
of
economic
theory
and
economic
policy
efforts
at
fusing
economics
and
sociology
Granovetter
1985
Swedberg
1990
2007
as
well
as
to
a
sociological
turn
within
methodological
reflection
itself
Rather
than
showing
that
there
is
good
evidence
critical
of
mainstream
economics
In
his
Reflection
without
Rules
2001
D
W
Hands
maintains
that
general
methodological
rules
are
of
little
use
He
defends
a
naturalistic
view
of
methodology
and
is
Meanwhile
there
are
many
other
more
specific
methodological
questions
to
address
and
it
is
a
sign
of
the
maturity
of
the
subdiscipline
that
methodology
the
recent
explosion
of
work
on
feminist
economics
is
shot
through
with
methodological
and
sociological
self-reflection
The
fact
that
a
considerably
larger
percentage
of
economists
are
men
than
is
bridging
the
gulf
between
fundamental
economic
theory
and
empirical
evidence
Some
of
it
casts
light
on
the
way
in
which
methodological
commitments
influence
the
extent
to
which
economists
heed
empirical
secured
a
foothold
within
mainstream
economics
it
remains
controversial
substantively
and
methodologically
and
its
implications
for
normative
economics
discussed
below
in
section
6
are
predicted
the
phenomena
before
they
were
observed
The
reason
seems
to
be
that
these
psychological
theories
do
not
have
the
same
wide
scope
as
the
basic
principles
of
mainstream
economics
Hausman
1992
chapter
that
one
finds
in
Gul
and
Pesandorfer’s
essay
is
weakening
But
it
is
clear
that
the
methodological
commitments
governing
theoretical
economics
are
much
more
complex
and
more
specific
to
economics
than
the
to
fail
abysmally
when
tried
elsewhere
Atheoretical
inquiry
even
when
methodologically
sophisticated
has
severe
limits
as
a
tactic
of
knowledge
acquisition
Similar
problems
affect
what
one
might
call
the
logical
coherence
of
social
judgments
List
and
Pettit
2002
Suppose
society
consists
of
The
judgments
of
each
of
the
individuals
are
consistent
with
the
principles
of
logic
while
social
judgments
violate
them
How
important
is
it
that
social
judgments
be
consistent
with
the
principles
of
logic
own
well-being
for
some
purpose
they
value
more
highly
Preferences
may
reflect
past
manipulation
or
distorting
psychological
influences
Elster
1983
In
addition
if
preference
satisfaction
constitutes
The
following
bibliography
is
not
comprehensive
It
generally
avoids
separate
citations
for
methodological
essays
in
collections
It
does
not
list
separately
the
essays
on
economic
methodology
from
special
1992
1980
b
A
Methodological
Appraisal
of
Marxian
Economics
Amsterdam
North-Holland
Virtues
and
Commercial
Interests
London
Routledge
Brennan
T
1989
A
Methodological
Assessment
of
Multiple
Utility
Frameworks
Economics
and
Philosophy
5
189
208
Experiments,Amsterdam
North-Holland
Dugger
W
1979
Methodological
Differences
between
Institutional
and
Neoclassical
Economics
Journal
of
Economic
Issues
13
Blackwell
Gerrard
B
1990
On
Matters
Methodological
in
Economics
Review
Article
Journal
of
Economic
Surveys
4
197
219
1995
The
Scientific
Basis
of
Economics
A
Review
of
the
Methodological
Debates
in
Economics
and
Econometrics
Scottish
Journal
of
Political
Economy
42
201
20
Southern
Economic
Journal
22
476
83
1960
Methodological
Prescriptions
in
Economics
A
Reply
Economica
27
158
60
Journal
for
the
Philosophy
of
Science
15
97
114
Klappholz
K
and
J
Agassi
1959
Methodological
Prescriptions
in
Economics
Economica
26
60
74
London
Routledge
Lawson
T
and
H
Pesaran
1985
Keynes
Economics
Methodological
Issues
Beckenham
Kent
Croom
Helm
Levine
A
E
Sober
and
E
Wright
1987
Marxism
and
Methodological
Individualism
New
Left
Review
162
March/April
67
84
Method
2
nd
edition
Kansas
City
Sheed
Andrews
1981
Epistemological
Problems
of
Economics
G
Reisman
trans
New
York
New
York
University
Press
1992
The
Full-Cost
Controversity
of
the
1940
s
and
1950
s
A
Methodological
Assessment
History
of
Political
Economy
24
311
56
Nell
G
ed
2014
a
Austrian
Economic
Perspectives
on
Individualism
and
Society
Moving
Beyond
Methodological
Individualism
New
York
St
Martin’s
Press
Ochangco
A
1999
Rationality
in
Economic
Thought
Methodological
Ideas
on
the
History
of
Political
Economy
Cheltenham
Edward
Elgar
Roth
A
1988
Laboratory
Experimentation
in
Economics
A
Methodological
Overview
Economic
Journal
98
974
1031
2015
Who
Gets
What—and
Why
The
New
Economics
of
Matchmaking
reprinted
New
York
A
M
Kelley
1965
Sensat
J
1988
Methodological
Individualism
and
Marxism
Economics
and
Philosophy
4
189
220
Quarterly
Journal
of
Economics
12
373
97
Vercelli
A
1991
Methodological
Foundations
of
Macroeconomics
Keynes
and
Lucas
Cambridge
Cambridge
University
Press
Epistemology
as
if
Economics
Really
Mattered
London
Routledge
Wilber
C
and
R
Harrison
1978
The
Methodological
Basis
of
Institutional
Economics
Pattern
Model
Storytelling
and
Holism
Roth
A
and
M
Malouf
1979
Game
Theoretical
Models
and
the
Role
of
Information
in
Bargaining
Psychological
Review
86
574
94
Savage
L
1972
The
Foundations
of
Statistics
New
York
Dover
game
theory
and
ethics
game
theory
evolutionary
Hume
David
individualism
methodological
intentionality
Kuhn
Thomas
Lakatos
Imre
laws
of
nature
ceteris
paribus
Mill
John
Stuart
Random
Entry
Chronological
Archives
A
linear
economic
growth
logic
is
no
longer
sustainable
A
call
for
a
sustainable
growth
that
make
people
thrive
is
required
whether
the
economy
is
heading
in
the
right
direction
Today
the
sustainability
of
the
growth
logic
is
challenged
The
growth
dominant
logic
prevailed
in
the
1930
s
and
is
elegantly
discussed
in
a
book
from
1960
The
Stages
of
Economic
Growth
a
her
resent
UN-speech
that
we
are
currently
at
stage
5
a
stage
that
is
not
sustainable
Few
would
challenge
that
we
need
a
new
logic
for
economic
growth
Professor
Raworth
state
that
we
need
to
stay
within
commercial
and
social
innovations
are
considered
to
be
in
the
sweet
spot
by
contributing
to
a
new
sustainable
business
logic
First
they
provide
customers
with
innovations
that
they
perceive
as
valuable
New
Building
With
AI
logic
programming
tl;dr
Logic
programming
is
a
type
of
programming
in
which
programmers
define
the
rules
of
the
program
in
the
form
of
logical
statements
What
is
the
difference
between
logic
programming
and
other
AI
programming
paradigms
There
are
a
few
key
differences
between
logic
programming
and
other
AI
programming
paradigms
For
one
logic
programming
is
based
on
a
declarative
programming
paradigm
meaning
that
the
programmer
declares
what
the
program
should
do
rather
than
how
it
should
do
it
This
makes
logic
programming
programs
more
human-readable
and
easier
to
understand
Another
key
difference
is
that
logic
programming
is
based
on
formal
logic
whereas
other
AI
programming
paradigms
are
not
This
means
that
logic
programming
programs
can
take
advantage
of
the
many
powerful
inference
algorithms
that
have
been
developed
for
formal
logic
This
gives
logic
programming
a
significant
advantage
when
it
comes
to
solving
complex
problems
Finally
logic
programming
is
a
non-procedural
paradigm
meaning
that
programs
are
not
written
as
a
sequence
of
instructions
to
be
executed
This
makes
logic
programming
programs
more
flexible
and
easier
to
change
It
also
makes
them
more
resistant
to
errors
since
there
is
no
What
are
the
benefits
of
using
logic
programming
in
AI
applications
Logic
programming
has
several
advantages
over
other
AI
paradigms
First
logic
programs
are
declarative
meaning
that
they
specify
what
is
to
be
done
rather
than
how
it
is
to
be
done
This
makes
them
easier
to
understand
and
maintain
than
procedural
programs
Second
logic
programs
can
be
executed
efficiently
by
computers
Third
logic
programs
can
be
easily
extended
and
modified
Fourth
logic
programming
is
a
well-understood
paradigm
with
a
rich
theoretical
foundation
This
foundation
can
be
used
to
develop
new
AI
applications
and
to
understand
and
improve
existing
ones
Finally
logic
programming
is
well
suited
for
use
in
distributed
systems
such
as
the
World
Wide
Web
What
are
some
of
the
challenges
associated
with
logic
programming
Logic
programming
is
a
type
of
AI
that
is
based
on
formal
logic
This
means
that
it
is
based
on
a
set
of
rules
that
are
used
to
infer
new
One
of
the
biggest
challenges
with
logic
programming
is
that
it
can
be
very
difficult
to
scale
This
is
because
the
number
of
rules
that
need
increases
This
can
make
it
very
difficult
to
solve
large
problems
with
logic
programming
Another
challenge
with
logic
programming
is
that
it
can
be
difficult
to
deal
with
uncertain
information
This
is
because
the
rules
that
are
Overall
logic
programming
is
a
powerful
tool
for
AI
but
it
has
some
challenges
that
need
to
be
considered
These
challenges
can
be
overcome
with
careful
planning
and
design
but
they
need
to
be
kept
in
mind
when
using
logic
programming
for
AI
What
are
some
of
the
most
popular
logic
programming
languages
There
are
many
popular
logic
programming
languages
in
AI
but
some
of
the
most
popular
ones
are
Prolog
LISP
and
Clojure
Prolog
is
a
widely
What
are
some
of
the
most
popular
applications
of
logic
programming
Logic
programming
is
a
type
of
programming
that
is
based
on
formal
logic
In
AI
logic
programming
is
used
for
knowledge
representation
and
reasoning
Logic
programming
can
be
used
for
planning
natural
In
this
chapter
we
will
focus
logic
programming
and
how
it
helps
in
Artificial
Intelligence
We
already
know
that
logic
is
the
study
of
principles
of
correct
reasoning
or
in
simple
words
it
is
the
study
of
what
comes
after
what
Logic
Programming
is
the
combination
of
two
words
logic
and
programming
Logic
Programming
is
a
programming
paradigm
in
which
the
problems
are
expressed
as
facts
and
rules
by
program
statements
but
within
a
system
of
formal
logic
Just
like
other
programming
paradigms
like
object
oriented
functional
declarative
and
procedural
etc
it
why
they
are
called
the
building
blocks
of
Logic
Programming
A
goal
needs
to
be
specified
for
every
program
in
logic
programming
To
understand
how
a
problem
can
be
solved
in
logic
programming
we
need
to
know
about
the
building
blocks
Facts
and
Rules
Actually
every
logic
program
needs
facts
to
work
with
so
that
it
can
achieve
the
given
goal
Facts
basically
are
true
statements
about
the
Actually
rules
are
the
constraints
which
allow
us
to
make
conclusions
about
the
problem
domain
Rules
basically
written
as
logical
clauses
to
express
various
facts
For
example
if
we
are
building
any
game
then
Rules
are
very
important
to
solve
any
problem
in
Logic
Programming
Rules
are
basically
logical
conclusion
which
can
express
the
facts
Following
is
the
syntax
of
rule
For
starting
logic
programming
in
Python
we
need
to
install
the
following
two
packages
It
provides
us
a
way
to
simplify
the
way
we
made
code
for
business
logic
It
lets
us
express
the
logic
in
terms
of
rules
and
facts
The
following
command
will
help
you
install
kanren
Followings
are
some
examples
which
can
be
solved
by
logic
programming
Actually
we
can
find
the
unknown
values
by
using
logic
programming
in
a
very
effective
way
The
following
Python
code
will
help
you
match
a
With
the
help
of
logic
programming
we
can
find
the
prime
numbers
from
a
list
of
numbers
and
can
also
generate
prime
numbers
The
Python
code
4
List
of
implementations
5
Probabilistic
inductive
logic
programming
BUTTON
Toggle
Probabilistic
inductive
logic
programming
subsection
Inductive
logic
programming
Inductive
logic
programming
ILP
is
a
subfield
of
symbolic
artificial
intelligence
which
uses
logic
programming
as
a
uniform
representation
for
examples
background
knowledge
and
hypotheses
The
term
inductive
known
background
knowledge
and
a
set
of
examples
represented
as
a
logical
database
of
facts
an
ILP
system
will
derive
a
hypothesised
logic
program
which
entails
all
the
positive
and
none
of
the
negative
examples
Inductive
logic
programming
is
particularly
useful
in
bioinformatics
and
natural
language
processing
System
in
1981
4
5
a
Prolog
program
that
inductively
inferred
Horn
clause
logic
programs
from
positive
and
negative
examples
1
The
term
Inductive
Logic
Programming
was
first
introduced
in
a
paper
by
Stephen
Muggleton
in
1990
defined
as
the
intersection
of
machine
learning
and
logic
programming
1
Muggleton
and
Wray
Buntine
introduced
predicate
invention
and
inverse
resolution
in
1988
1
6
Several
inductive
logic
programming
systems
that
proved
influential
appeared
in
the
early
1990
s
FOIL
introduced
by
Ross
Quinlan
in
At
around
the
same
time
the
first
practical
applications
emerged
particularly
in
bioinformatics
where
by
2000
inductive
logic
programming
had
been
successfully
applied
to
drug
design
programming
inherent
in
the
early
work
these
fields
used
inductive
logic
programming
techniques
from
a
viewpoint
of
relational
data
mining
The
success
of
those
initial
applications
and
the
lack
of
progress
in
recovering
larger
traditional
logic
programs
shaped
the
focus
of
the
field
13
Inductive
logic
programming
has
adopted
several
different
learning
settings
the
most
common
of
which
are
learning
from
entailment
and
learning
from
interpretations
16
In
both
cases
the
input
is
provided
in
the
form
of
background
knowledge
B
a
logical
theory
commonly
in
the
form
of
clauses
used
in
logic
programming
as
well
as
positive
and
negative
examples
denoted
textstyle
E
respectively
The
output
is
given
as
a
hypothesis
H
itself
a
logical
theory
that
typically
consists
of
one
or
more
clauses
As
of
2022
update
learning
from
entailment
is
by
far
the
most
popular
setting
for
inductive
logic
programming
16
In
this
setting
the
positive
and
negative
examples
are
given
as
finite
sets
annotation
semantics
MATH
displaystyle
models
stands
for
logical
entailment
16
17
18
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
An
inductive
logic
programming
system
is
a
program
that
takes
as
an
input
logic
theories
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
displaystyle
B,E
E
A
system
is
complete
if
and
only
if
for
any
input
logic
theories
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
these
input
theories
can
be
found
with
its
hypothesis
search
procedure
Inductive
logic
programming
systems
can
be
roughly
divided
into
two
classes
search-based
and
meta-interpretative
systems
investigated
since
Plotkin's
first
work
on
formalising
induction
in
clausal
logic
in
1970
1
20
Techniques
used
include
least
general
generalisation
based
on
anti-unification
and
inverse
resolution
To
account
for
background
knowledge
inductive
logic
programming
systems
employ
relative
least
general
generalisations
which
are
resolution
step
to
compute
possible
resolving
clauses
Two
types
of
inverse
resolution
operator
are
in
use
in
inductive
logic
programming
V-operators
and
W-operators
A
V-operator
takes
clauses
Inverse
resolution
was
first
introduced
by
Stephen
Muggleton
and
Wray
Buntine
in
1988
for
use
in
the
inductive
logic
programming
system
Cigol
6
By
1993
this
spawned
a
surge
of
research
into
inverse
Questions
of
completeness
of
a
hypothesis
search
procedure
of
specific
inductive
logic
programming
system
arise
For
example
the
Progol
hypothesis
search
procedure
based
on
the
inverse
entailment
inference
Rather
than
explicitly
searching
the
hypothesis
graph
metainterpretive
or
meta-level
systems
encode
the
inductive
logic
programming
program
as
a
meta-level
logic
program
which
is
then
solved
to
obtain
an
optimal
hypothesis
Formalisms
used
to
express
the
problem
specification
meta-interpreter
in
Prolog
while
ASPAL
and
ILASP
are
based
on
an
encoding
of
the
inductive
logic
programming
problem
in
answer
set
programming
30
Probabilistic
inductive
logic
programming
Probabilistic
inductive
logic
programming
adapts
the
setting
of
inductive
logic
programming
to
learning
probabilistic
logic
programs
It
can
be
considered
as
a
form
of
statistical
relational
learning
within
the
formalism
of
probabilistic
logic
programming
34
35
Given
1
background
knowledge
as
a
probabilistic
logic
program
B
and
2
a
set
of
positive
and
negative
examples
the
goal
of
probabilistic
inductive
logic
programming
is
to
find
a
probabilistic
logic
program
MATH
semantics
mrow
class
MJX-TeXAtom-ORD
mstyle
and
the
probability
parameters
of
H
Just
as
in
classical
inductive
logic
programming
the
examples
can
be
given
as
examples
or
as
partial
interpretations
35
In
the
same
year
Meert
W
et
al
introduced
a
method
for
learning
parameters
and
structure
of
ground
probabilistic
logic
programs
by
considering
the
Bayesian
networks
equivalent
to
them
and
applying
ProbFOIL
introduced
by
De
Raedt
and
Ingo
Thon
in
2010
combined
the
inductive
logic
programming
system
FOIL
with
ProbLog
Logical
rules
are
learned
from
probabilistic
data
in
the
sense
that
both
the
examples
In
2011
Elena
Bellodi
and
Fabrizio
Riguzzi
introduced
SLIPCASE
which
performs
a
beam
search
among
probabilistic
logic
programs
by
iteratively
refining
probabilistic
theories
and
optimizing
the
1
a
b
c
d
e
f
Nienhuys-Cheng
Shan-hwei
Wolf
Ronald
de
1997
Foundations
of
inductive
logic
programming
Lecture
notes
in
computer
science
Lecture
notes
in
artificial
intelligence
Lassez
J
L
Plotkin
G
eds
1991
Computational
logic
essays
in
honor
of
Alan
Robinson
MIT
Press
pp
199
254
Quinlan
J
R
August
1990
Learning
logical
definitions
from
relations
Machine
Learning
5
3
239
266
doi
10
1007
bf
00117105
a
b
c
d
Nienhuys-Cheng
Shan-hwei
Wolf
Ronald
de
1997
Foundations
of
inductive
logic
programming
Lecture
notes
in
computer
science
Lecture
notes
in
artificial
intelligence
Berlin
Heidelberg
Cropper
Andrew
Dumančić
Sebastijan
Evans
Richard
Muggleton
Stephen
2022
Inductive
logic
programming
at
30
Machine
Learning
111
1
147
172
doi
10
1007
s
10994
021
06089
1
ISSN
0885
6125
Nienhuys-Cheng
Shan-hwei
Wolf
Ronald
de
1997
Foundations
of
inductive
logic
programming
Lecture
notes
in
computer
science
Lecture
notes
in
artificial
intelligence
Berlin
Heidelberg
Springer
p
255
Nienhuys-Cheng
Shan-hwei
Wolf
Ronald
de
1997
Foundations
of
inductive
logic
programming
Lecture
notes
in
computer
science
Lecture
notes
in
artificial
intelligence
Berlin
Heidelberg
Springer
p
286
a
b
Nienhuys-Cheng
Shan-hwei
Wolf
Ronald
de
1997
Foundations
of
inductive
logic
programming
Lecture
notes
in
computer
science
Lecture
notes
in
artificial
intelligence
Berlin
Heidelberg
learning
Proceedings
of
the
13
th
international
conference
on
inductive
logic
programming
LNCS
Vol
2835
Springer
pp
311
328
CiteSeerX
10
1
1
212
6602
doi
10
1007
978
3
540
39917
9
21
learning
connected
Horn
theories
Proceedings
of
the
10
th
international
conference
on
logic
programing
and
nonmonotonic
reasoning
LNCS
Vol
575
Springer
pp
169
181
a
b
Kimber
Timothy
2012
Learning
definite
and
normal
logic
programs
by
induction
on
failure
PhD
Imperial
College
London
ethos
Bellodi
Elena
Riguzzi
Fabrizio
2014
01
15
Structure
learning
of
probabilistic
logic
programs
by
searching
the
clause
space
Theory
and
Practice
of
Logic
Programming
15
2
169
212
arXiv
1309
2080
Dependent
types
Functional
logic
Point-free
style
Logic
Abductive
logic
Answer
set
Constraint
Constraint
logic
Inductive
logic
Nondeterministic
Ontology
Probabilistic
logic
Query
Choreographic
programming
Concurrent
logic
Concurrent
constraint
logic
Concurrent
OO
Retrieved
from
https
en.wikipedia.org/w/index.php?title
Inductive_logic_programming
oldid
1256017671
Category
Inductive
logic
programming
How
to
leverage
logic
programming
to
enhance
data-driven
development
In
a
previous
post
we
have
seen
how
datalog
language
and
consequently
logic
programming
can
be
convenient
in
the
context
of
data
querying
and
exploration
We
will
now
see
how
logic
programming
can
be
helpful
in
the
context
of
data
transformation
Let's
first
have
a
deeper
look
at
logic
programming
concepts
Logic
programming
is
a
programming
paradigm
that
is
based
on
formal
logic
In
logic
programming
programs
are
written
in
the
form
of
logical
statements
or
rules
which
define
relationships
and
constraints
between
different
entities
object-oriented
programming
which
focus
on
how
to
achieve
a
specific
task
logic
programming
is
concerned
with
representing
and
reasoning
about
knowledge
Programs
written
in
a
logic
programming
language
mainly
consist
of
a
set
of
facts
rules
and
queries
Logic
programming
is
particularly
suited
to
problems
that
can
be
represented
as
logical
relationships
For
example
logic
programming
can
be
used
to
solve
inference
reasoning
and
planning
problems
Here
are
the
key
features
of
the
logic
programming
paradigm
Declarative
Style
Logic
programming
is
declarative
meaning
that
you
specify
what
you
want
to
achieve
rather
than
how
to
achieve
it
Logic
Rules
Programs
consist
of
a
set
of
logical
rules
or
clauses
These
rules
are
expressed
in
the
form
of
predicates
and
facts
which
represent
relationships
between
objects
or
conditions
Pattern
Matching
The
evaluation
of
logical
statements
often
involves
pattern
matching
The
system
matches
the
input
against
the
logical
rules
to
determine
if
they
apply
Knowledge
Representation
Uses
a
formal
language
that
is
precise
it
valuable
for
applications
that
require
a
deep
understanding
of
data
and
the
ability
to
make
logical
deductions
Backtracking
Logic
programming
often
involves
a
mechanism
called
Here
are
some
generic
examples
of
how
logic
programming
can
be
used
To
represent
knowledge
about
the
real
world
such
as
relationships
problems
or
to
draw
conclusions
To
generate
code
for
example
to
translate
logical
rules
into
programming
instructions
When
to
use
logic
programming
Being
declarative
means
that
logic
programs
focus
on
what
the
program
should
do
rather
than
how
it
should
do
it
making
them
easier
to
Furthermore
logic
programs
are
expressive
allowing
them
to
represent
complex
and
abstract
concepts
in
a
concise
and
natural
way
Additionally
logic
programs
are
flexible
and
can
accommodate
different
modes
of
execution
such
as
forward
chaining
or
backward
chaining
which
processing
and
analysis
Its
ability
to
represent
complex
relationships
and
perform
logical
reasoning
can
help
extracting
meaningful
information
from
vast
amounts
of
data
rsz_logic_model_resized.jpg
We
have
seen
logic
programming
offers
a
powerful
approach
for
tasks
that
require
extensive
knowledge
representation
reasoning
and
Functional
programming
and
logic
programming
are
both
declarative
programming
paradigms
that
offer
unique
strengths
and
applications
While
functional
programming
and
logic
programming
are
two
distinct
programming
paradigms
there
are
areas
of
overlap
and
potential
Despite
the
fact
functional
and
logic
programming
have
distinct
design
principles
their
combination
or
integration
can
lead
to
powerful
and
Therefore
librairies
and
frameworks
of
functional
languages
that
incorporate
features
from
logic
paradigm
pattern-matching
logic-rules
such
as
datascript
which
is
based
on
datalog
and
prolog
principles
continue
to
be
developed
and
may
be
very
good
options
to
See
below
3
libraries
which
incorporates
features
of
logic
programming
Each
of
them
offers
a
different
level
of
abstraction
1
Core.logic
A
low-level
logic
programming
library
for
Clojure
ClojureScript
core.logic
offers
Prolog-like
relational
programming
constraint
logic
programming
and
nominal
logic
programming
for
Clojure
run
q
Meander
is
a
declarative
data
manipulation
toolset
created
as
a
library
in
Clojure
Borrowing
ideas
from
logic
programming
and
term
rewriting
Meander
allows
declarative
descriptions
of
arbitrarily
complex
data
These
different
implementations
make
it
possible
to
incorporate
principles
of
logic
programming
into
more
global
projects
based
on
versatile
and
commonly
used
programming
languages
Let's
now
address
the
question
of
using
logic
programming
concepts
in
a
concrete
use-case
The
approach
based
on
the
Meander
library
allows
to
pass
all
the
business
logic
in
more
a
declarative
form
for
all
the
rules
for
pattern-matching
and
transformation
which
once
isolated
from
the
rest
of
the
code
represents
a
kind
of
predicate-as-data
for
declaring
all
the
business
logic
of
the
solution
In
summary
today
I
take
advantage
of
the
joint
use
of
the
native
functionalities
of
Clojure
and
some
features
taken
from
the
logical
programming
paradigm
The
best
of
both
worlds
While
logic
programming
offers
a
unique
and
powerful
approach
to
problem-solving
it
is
not
without
its
limitations
and
challenges
Here
are
some
of
the
caveats
of
logic
programming
that
should
be
considered
when
evaluating
its
suitability
for
a
specific
project
expensive
especially
for
complex
problems
with
large
knowledge
bases
The
search
for
solutions
through
logical
inference
can
become
time-consuming
particularly
in
cases
where
multiple
large-scale
applications
Debugging
Complexity
Debugging
logic
programs
can
be
challenging
due
to
their
declarative
nature
and
the
non-deterministic
execution
time-consuming
and
may
require
a
deep
understanding
of
the
underlying
logic
and
search
strategies
Despite
these
caveats
logic
programming
remains
a
valuable
tool
for
a
variety
of
applications
particularly
those
that
require
knowledge
Careful
consideration
of
these
limitations
and
understanding
the
strengths
of
logic
programming
are
crucial
for
making
informed
decisions
about
its
suitability
for
specific
projects
To
date
the
timely
use
of
functionalities
taken
from
logic
programming
has
made
it
possible
to
considerably
improve
the
maintainability
of
my
What
are
the
main
characteristics
and
examples
of
logic
programming
paradigms
systems
fall
into
three
broad
categories
first-order
logic-programming
and
action
rules
These
paradigms
share
little
in
the
way
of
syntax
and
semantics
Moreover
there
are
large
differences
The
RIF
Working
Group
has
focused
on
two
kinds
of
dialects
logic-based
dialects
and
dialects
for
rules
with
actions
Generally
logic-based
dialects
include
languages
that
employ
some
kind
of
logic
such
as
first-order
logic
often
restricted
to
Horn
logic
or
non-first-order
logics
underlying
the
various
logic
programming
languages
e.g
logic
programming
under
the
well-founded
or
stable
semantics
The
to
the
limited
resources
of
the
RIF
Working
Group
it
defined
only
two
logic
dialects
the
Basic
Logic
Dialect
RIF-BLD
and
a
subset
the
RIF
Core
Dialect
shared
with
RIF-PRD
the
Production
Rule
Dialect
Developing
RIF-FLD
as
a
framework
turned
out
to
be
feasible
because
despite
the
diversity
of
logical
theories
underlying
the
different
logic
rule
systems
they
share
much
of
the
same
syntactic
and
semantic
machinery
Moreover
the
ways
to
combine
the
different
pieces
of
that
machinery
in
order
to
create
those
logic
systems
are
well
studied
However
the
RIF-FLD
specification
is
unique
in
that
it
digests
much
of
RIF-FLD
is
a
very
general
logic
language
that
includes
a
great
deal
of
commonly
used
syntactic
and
semantic
apparatus
however
it
purposely
signatures
It
also
specifies
certain
semantic
notions
such
as
models
and
logical
entailment
but
it
leaves
certain
other
options
open
for
instance
which
exact
models
are
to
be
used
for
entailment
A
dialect
specialization
from
the
RIF
framework
the
preferred
mode
of
specification
for
various
future
logic
dialects
then
should
RIF
rules
refer
to
RDF
and
OWL
facts
and
what
is
the
logical
meaning
of
the
overall
language
RIF-RDF
and
OWL
Compatibility
defines
just
that
The
basic
idea
is
that
RIF
uses
its
frame
syntax
to
RIF-BLD
The
Basic
Logic
Dialect
This
is
one
of
the
two
major
dialects
and
the
main
logic-based
dialect
developed
by
the
group
Technically
this
dialect
corresponds
to
Horn
logic
with
various
syntactic
and
semantic
extensions
The
main
syntactic
extensions
systems
like
Jess
or
JRules
are
defined
using
ad
hoc
computational
mechanisms
which
are
not
based
on
a
logic
For
this
reason
RIF-PRD
is
not
part
of
the
suite
of
logical
RIF
dialects
and
stands
apart
from
them
However
significant
effort
has
been
extended
to
RIF-BLD
and
RIF-PRD
based
on
RIF-DTB
1
0
thus
enabling
limited
rule
exchange
between
logic
rule
dialects
and
production
rules
RIF-Core
corresponds
to
Horn
logic
without
function
symbols
often
called
Datalog
with
a
number
of
extensions
to
support
features
such
as
objects
and
frames
as
in
F-logic
internationalized
resource
identifiers
for
concepts
and
XML
Schema
datatypes
RIF-FLD
The
Framework
for
Logic
Dialects
RIF-FLD
is
not
a
dialect
in
its
own
right
but
rather
a
general
logical
extensibility
framework
It
was
introduced
in
order
to
drastically
lower
the
amount
of
effort
needed
to
define
and
verify
new
logic
dialects
that
extend
the
capabilities
of
RIF-BLD
Handbook
of
logic
in
artificial
intelligence
and
logic
programming
programming
languages
and
artificial
intelligence
There
is
a
growing
need
for
an
in-depth
survey
of
the
applications
of
logic
in
AI
and
computer
science
The
Handbook
of
Logic
in
Artificial
Intelligence
and
thumbnail
of
dbpedia
resource
logicOrganisation
thumbnail
of
dbpedia
resource
has
three
parts
The
first
p
BUTTON
Read
more
When
logic
meets
engineering
introduction
to
logical
issues
in
the
history
and
philosophy
of
computer
science
that
publishes
refereed
papers
BUTTON
Read
more
The
role
of
computational
logic
as
a
hinge
paradigm
among
deduction
problem
solving
programming
and
parallelism
Computational
Logic
in
the
construction
BUTTON
Read
more
Special
issue
on
logics
and
artificial
intelligence
Falomir
Zoe
intelligence
AI
dealing
with
reas
BUTTON
Read
more
A
survey
of
Indian
logic
from
the
point
of
view
of
computer
science
Sarma
V
V
S
Indian
logic
has
a
long
history
It
somewhat
covers
the
domains
of
two
of
the
six
schools
darsanas
BUTTON
Read
more
A
survey
of
indian
logic
from
the
point
of
view
of
computer
science
Sarma
VVS
Indian
logic
has
a
long
history
It
somewhat
covers
the
domains
of
two
of
the
six
schools
darsanas
BUTTON
Read
more
of
the
now
very
large
field
kn
BUTTON
Read
more
A
survey
of
indian
logic
from
the
point
of\ud
view
of
computer
science
Sarma
VVS
Indian
logic
has
a
long
history
It
somewhat
covers
the
domains
of
two
of
the
six
schools
darsanas
BUTTON
Read
more
continuous
and
growing
interaction
BUTTON
Read
more
Philosophical
incidence
of
logic
programming
Lu
ıs
Moniz
Pereira
We
address
the
import
of
AI
for
philosophical
logic
and
examine
the
requirements
posed
by
knowledge
BUTTON
Read
more
has
three
parts
The
first
p
BUTTON
Read
more
When
logic
meets
engineering
introduction
to
logical
issues
in
the
history
and
philosophy
of
computer
science
that
publishes
refereed
papers
BUTTON
Read
more
The
role
of
computational
logic
as
a
hinge
paradigm
among
deduction
problem
solving
programming
and
parallelism
Computational
Logic
in
the
construction
BUTTON
Read
more
Special
issue
on
logics
and
artificial
intelligence
Falomir
Zoe
intelligence
AI
dealing
with
reas
BUTTON
Read
more
A
survey
of
Indian
logic
from
the
point
of
view
of
computer
science
Sarma
V
V
S
Indian
logic
has
a
long
history
It
somewhat
covers
the
domains
of
two
of
the
six
schools
darsanas
BUTTON
Read
more
A
survey
of
indian
logic
from
the
point
of
view
of
computer
science
Sarma
VVS
Indian
logic
has
a
long
history
It
somewhat
covers
the
domains
of
two
of
the
six
schools
darsanas
BUTTON
Read
more
of
the
now
very
large
field
kn
BUTTON
Read
more
A
survey
of
indian
logic
from
the
point
of\ud
view
of
computer
science
Sarma
VVS
Indian
logic
has
a
long
history
It
somewhat
covers
the
domains
of
two
of
the
six
schools
darsanas
BUTTON
Read
more
continuous
and
growing
interaction
BUTTON
Read
more
Philosophical
incidence
of
logic
programming
Lu
ıs
Moniz
Pereira
We
address
the
import
of
AI
for
philosophical
logic
and
examine
the
requirements
posed
by
knowledge
BUTTON
Read
more
has
three
parts
The
first
p
BUTTON
Read
more
When
logic
meets
engineering
introduction
to
logical
issues
in
the
history
and
philosophy
of
computer
science
syntax
We
will
demonstrate
how
these
reasoning
rules
have
equivalent
representation
both
as
RDF
descriptions
and
as
logic
programs
We
will
also
show
how
an
automated
compilation
between
these
translations
is
Metalog
provides
a
logical
view
of
metadata
present
on
the
Web
The
Metalog
approach
is
composed
of
several
components
In
the
first
component
a
particular
data
semantics
is
established
Metalog
provides
way
to
express
logical
relationships
such
as
and
or
and
to
build
up
complex
inference
rules
that
encode
logical
reasoning
This
semantic
layer
builds
on
top
of
RDF
using
a
so-called
The
second
component
consists
of
a
logical
interpretation
of
RDF
data
optionally
enriched
with
the
semantic
schema
into
logic
programming
This
way
the
understood
semantics
of
RDF
is
unwielded
into
its
logical
components
a
logic
program
indeed
This
means
that
every
reasonment
on
RDF
data
can
be
performed
acting
upon
the
corresponding
logical
view
the
logic
program
providing
a
neat
and
powerful
way
to
reason
about
data
The
first
correspondance
in
Metalog
is
between
the
basic
RDF
data
model
and
the
predicates
in
logic
The
RDF
data
model
consists
of
so-called
statements
Statements
are
triples
where
there
is
a
subject
the
resource
a
predicate
the
property
and
an
object
the
literal
Metalog
views
an
RDF
statement
in
the
logical
setting
as
just
a
binary
predicate
involving
the
subject
and
the
literal
For
invented
the
Web
formally
the
RDF
triple
invented
Tim
Berners-Lee
Web
is
seen
in
logic
programming
as
the
predicate
invented(Tim
Berners-Lee
Web
Once
we
have
estalished
the
basic
correspondance
between
the
basic
RDF
data
model
and
predicates
in
logic
the
next
step
becomes
easy
we
can
extend
RDF
so
that
the
mapping
to
logic
is
able
to
take
advantage
of
all
of
the
logical
relationships
present
in
logical
systems
that
is
to
say
beyond
the
ability
of
expressing
static
facts
we
want
the
ability
to
encode
dynamic
reasoning
rules
like
in
logic
programming
In
order
to
do
so
we
need
at
least
the
standard
logical
connectors
and
or
not
variables
The
Metalog
schema
extends
plain
RDF
with
this
logical
layer
enabling
the
expression
of
arbitrary
logical
relationships
within
RDF
In
fact
the
Metalog
schema
provides
more
accessories
besides
the
should
keep
in
mind
is
just
that
the
Metalog
schema
provides
the
meta-logic
operators
to
reason
with
RDF
statements
The
mapping
between
metalog
RDF
and
logical
formulas
is
then
completely
natural
for
each
RDF
statement
that
does
not
use
a
Metalog
connector
there
is
a
corresponding
logical
predicate
as
defined
before
Then
the
metalog
connectors
are
translated
into
the
corresponding
logical
connectors
in
the
natural
way
so
for
instance
the
metalog
and
connector
is
mapped
using
logical
conjunction
while
the
metalog
or
connector
is
mapped
using
logical
disjunction
Note
that
the
RDF
metalog
schema
and
the
corresponding
translation
into
logical
formulas
is
absolutely
general
However
in
practicse
one
need
also
to
then
be
able
to
process
the
resulting
logical
formulas
in
an
effective
ways
In
other
words
while
the
RDF
metalog
schema
nicely
other
computational
side
of
the
coin
how
to
process
and
effectively
reason
with
all
these
logical
inference
rules
expressible
enough
and
also
computationally
feasible
our
choice
went
to
logic
programming
Logic
programming
see
e.g
1
is
a
well
known
programming
paradigm
that
selects
a
subset
of
full
first-order
expressive
paradigm
and
has
the
further
advantage
that
it
has
been
widely
studied
in
the
database
community
a
subset
of
logic
programming
datalog
has
even
the
advantage
of
having
computations
expressibility
of
the
language
must
fit
within
the
one
provided
by
logic
programming
are
then
is
a
keyword
for
the
logical
implication
For
example
if
SHE
has
a
degree
in
math
then
SHE
is
smart
is
translated
into
the
logical
formula
degree(SHE
math
is(SHE
smart
Note
that
here
and
in
the
following
examples
we
provide
directly
the
translation
into
the
logical
formula
to
save
space
a
more
detailed
translation
would
have
to
also
show
the
intermediate
RDF
model
which
is
in
any
case
trivial
to
derive
imply
is
a
keyword
for
the
logical
implication
implies
is
a
keyword
for
the
logical
implication
and
can
be
either
the
metalog
and
or
it
can
be
used
to
indicate
science
as
well
then
SHE
is
really
smart
is
translated
into
the
logical
formula
degree(SHE
math
and
degree(SHE
computer
science
the
technical
report
231
has
as
authors
Mary
and
John
is
translated
into
the
logical
formulas
the
translation
here
is
more
involved
since
the
RDF
Bag
construct
is
used
this
order
is
translated
into
the
logical
formulas
the
translation
here
is
more
involved
since
the
RDF
Bag
construct
is
used
not
can
be
combined
with
any
other
metalog
constructs
and
its
interpretation
is
logical
negation
For
example
if
SHE
has
a
degree
in
math
then
SHE
is
not
stupid
is
translated
into
the
logical
formula
degree(SHE
math
not(is(SHE
stupid
And
finally
this
corresponds
to
the
logical
formula
Running
this
query
in
the
corresponding
logic
program
gives
the
result
that
Y
English
that
is
to
say
the
predicate
speak
John
English
The
use
of
Web
infrastructure
to
accommodate
logic
programs
has
been
suggested
by
Sandevall
1996
and
Loke
Davidson
1996
The
latter
approach
suggests
using
familiar
logic
program
notation
to
place
facts
and
queries
on
HTML
pages
The
embedded
rules
also
have
the
ability
to
fast
writing
of
complex
relationships
but
also
an
extremely
high
readability
Finally
it
can
be
used
even
without
the
logical
extensions
just
to
provide
a
user-friendly
interface
to
RDF
Future
6
Niemelä
I
Simons
P
1997
Smodels
an
implementation
of
the
stable
model
and
well-founded
semantics
for
normal
logic
programs
Proc
of
the
4
th
Int
Conf
on
Logic
Programming
and
Non-Monotonic
English-like
syntax
We
will
demonstrate
how
these
reasoning
rules
have
equivalent
representation
both
as
RDF
descriptions
and
as
logic
formulae
We
will
also
show
how
an
automated
compilation
between
these
Metalog
provides
a
logical
view
of
metadata
present
on
the
web
The
Metalog
approach
is
composed
by
two
major
layers
The
first
layer
consists
in
an
enrichment
of
the
RDF
model
Metalog
provides
way
to
express
logical
relationships
like
and
or
and
so
on
and
to
build
up
complex
inference
rules
that
encode
logical
reasoning
This
semantic
layer
builds
on
top
of
RDF
using
a
so-called
The
second
layer
consists
of
a
logical
interpretation
of
RDF
data
optionally
enriched
with
the
semantic
schema
into
logic
This
way
the
understood
semantics
of
RDF
is
unwound
into
its
logical
components
This
means
that
every
reasonment
on
RDF
data
can
be
performed
acting
upon
the
corresponding
logical
view
providing
a
neat
and
powerful
way
to
reason
about
data
We
call
this
level
of
Metalog
the
Metalog
logic
level
will
be
in
the
building
process
of
setting
up
the
data
and
the
logical
inferences
the
user
will
be
able
to
simply
express
these
using
the
Metalog
language
This
layer
is
translated
into
the
Metalog
model
and
then
using
the
Metalog
logic
interpretation
into
logic
From
here
classic
inference
engines
can
then
be
applied
like
logic
programming
datalog
theorem
provers
and
so
on
Also
all
the
already
existing
RDF
We
can
extend
RDF
so
that
the
mapping
to
logic
is
able
to
take
advantage
of
all
of
the
logical
relationships
present
in
logical
systems
that
is
to
say
behind
the
ability
of
expressing
static
facts
we
want
the
ability
to
encode
dynamic
reasoning
rules
like
in
logic
programming
The
metalog
schema
extends
plain
RDF
with
this
logical
layer
enabling
to
express
arbitrary
logical
relationships
within
RDF
In
fact
the
metalog
schema
provides
more
accessories
besides
the
should
keep
in
mind
is
therefore
just
that
the
Metalog
model
provides
the
meta-logic
operators
to
reason
with
RDF
statements
The
first
correspondence
in
Metalog
is
between
the
basic
RDF
data
model
and
the
predicates
in
logic
The
RDF
data
model
consists
of
so-called
statements
Statements
are
triples
where
there
is
a
subject
the
resource
a
predicate
the
property
and
an
object
the
literal
Metalog
views
an
RDF
statement
in
the
logical
setting
as
just
a
binary
predicate
involving
the
subject
and
the
literal
For
invented
the
Web
formally
the
RDF
triple
invented
Tim
Berners-Lee
Web
is
seen
in
logic
as
the
predicate
invented(Tim
Berners-Lee
Web
So
in
general
RDF
statements
have
a
natural
translation
into
logic
predicates
The
exceptions
that
Metalog
does
are
for
the
so-called
Bag(X
1
X_n
Bag(X_p
1
X_p(n
for
every
permutation
p
So
in
fact
Metalog
logic
is
a
kind
of
equational
logic
see
also
later
in
the
case
of
the
mathematical
operators
Metalog
extension
the
connectors
and
or
and
implies
are
interpreted
as
the
logical
conjunction
disjunction
and
implication
respectively
Variables
are
interpreted
as
logical
variables
En
passant
we
mention
the
other
extensions
provided
by
Metalog
the
not
connector
and
the
concerned
things
are
less
easy
while
for
the
other
interpretation
the
logical
interpretation
is
rather
straightforward
in
other
words
in
the
almost
totality
of
the
useful
logics
these
operators
have
all
the
same
interpretation
a
logical
interpretation
of
the
not
connector
is
not
as
plain
there
are
different
alternatives
to
consider
giving
different
logics
The
Metalog
choice
follows
from
the
intrinsic
nature
of
the
World
Wide
Web
where
the
Metalog
system
is
expected
to
be
Summing
up
the
mapping
between
the
Metalog
model
and
logical
formulas
is
then
completely
natural
for
each
RDF
statement
that
does
not
use
a
metalog
connector
there
is
a
corresponding
logical
predicate
as
defined
before
Then
the
metalog
connectors
are
translated
into
the
corresponding
logical
connectors
as
described
above
are
then
is
a
keyword
for
the
logical
implication
For
example
if
SHE
has
a
degree
in
math
then
SHE
is
smart
is
translated
into
the
logical
formula
degree(SHE
math
is(SHE
smart
Note
that
here
and
in
the
following
examples
we
provide
directly
the
translation
into
the
logical
formula
to
save
space
a
more
detailed
translation
would
have
to
also
show
the
intermediate
RDF
model
which
is
in
any
case
trivial
to
derive
imply
is
a
keyword
for
the
logical
implication
implies
is
a
keyword
for
the
logical
implication
and
can
be
either
the
metalog
and
the
logical-and
or
it
can
be
used
to
indicate
the
presence
of
an
RDF
Bag
the
bag-and
this
science
as
well
then
SHE
is
really
smart
is
translated
into
the
logical
formula
degree(SHE
math
and
degree(SHE
computer
science
the
technical
report
231
has
as
authors
Mary
and
John
is
translated
into
the
logical
formula
authors
technical
report
231
Bag
Mary
John
this
order
is
translated
into
the
logical
formula
authors
technical
report
231
Seq
Mary
John
if
SHE
has
a
degree
in
math
then
SHE
is
not
stupid
is
translated
into
the
logical
formula
degree(SHE
math
not(is(SHE
stupid
Then
we
disambiguate
using
the
metalog
keywords
The
basic
metalog
mapping
structure
here
we
use
a
mapping
directly
to
logic
rather
than
to
Metalog
model
for
conciseness
follows
the
classic
grammatical
model
then
an
object
This
triple
subject
predicate
object
is
naturally
translated
into
the
logic
binary
predicate
predicate(subject,object
On
top
of
this
basic
model
of
translation
more
sophisticated
translate
all
what
was
to
the
left
say
obtaining
LEFT
all
what
is
to
the
right
say
obtaining
RIGHT
and
logically
translate
to
LEFT
RIGHT
here
denotes
logical
implication
Note
that
a
then
can
generally
occur
only
when
a
level
1
is
expected
If
we
find
an
and
if
the
and
occurs
when
a
level
1
is
expected
then
it
could
be
a
logical-and
or
the
bag-and
if
there's
a
holder
soon
after
the
object
to
the
right
of
the
and
then
it's
a
logical-and
otherwise
it's
a
bag-and
and
the
level
still
stays
3
If
the
and
Logical-and
translation
we
have
the
logical
translation
LEFT
and
RIGHT
For
example
take
the
metalog
sentence
and
where
level
1
was
expected
after
John
there
is
a
holder
good
so
it's
a
logical-and
John
level
1
So
the
final
logical
translation
is
Instead
the
fact
the
ultimate
point
of
the
Metalog
chain
is
the
Metalog
logic
leads
itself
to
a
natural
definition
of
query
constructive
satisfability
That
is
to
say
any
given
logical
formula
can
be
queried
along
the
database
to
check
whether
it
is
satisfable
or
Note
that
the
RDF
metalog
model
and
the
corresponding
translation
into
logical
formulas
in
the
Metalog
logic
is
absolutely
general
However
in
practice
one
need
also
to
then
be
able
to
process
the
resulting
logical
formulas
in
an
effective
ways
In
other
words
while
the
Metalog
model
nicely
extends
RDF
with
the
full
power
of
first
order
side
of
the
coin
how
to
process
and
effectively
reason
with
all
these
logical
inference
rules
Metalog
as
such
does
not
impose
computability
restriction
as
its
primary
goal
is
to
provide
expressibility
means
to
codify
logical
data
and
relationships
and
relative
queries
Then
it
is
up
to
the
particular
inference
engine
to
try
to
effectively
deal
with
the
resulting
logical
knowledge
basis
However
there
are
at
least
two
restrictions
of
the
logic
that
deserves
particular
attention
logic
programming
and
datalog
see
e.g
1
These
paradigms
are
that
they
time
The
interesting
things
that
makes
these
languages
particularly
appealing
in
our
case
is
due
to
the
fact
that
both
logic
programming
and
datalog
restrict
to
binary
predicates
this
means
that
RDF
without
the
ordering
structures
is
already
directly
mappable
via
Metalog
into
a
logic
program
Therefore
just
relatively
small
syntactical
constraints
enables
a
metalog
language
program
and
so
logic
formula
to
be
ultimately
processed
in
an
effective
way
using
an
already
existing
logic
programming
or
datalog
inference
engine
This
is
indeed
what
we
are
currently
doing
with
our
current
prototype
interfacing
with
existing
logic
programming/datalog
systems
like
for
example
8
metalog
language
code
does
actually
satisfy
the
corresponding
restrictions
such
to
be
interpreted
as
a
logic
program
or
as
a
datalog
program
This
is
consistent
with
the
general
philosophy
of
Metalog
as
fact
that
the
code
indeed
satisfies
the
appropriate
syntactic
restrictions
So
far
there
are
two
restriction
tags
one
for
logic
programming
and
the
other
for
datalog
It
is
important
to
note
that
to
an
eventual
application
that
tries
to
process
the
metalog
code
that
some
particular
inference
engine
for
logic
programs
datalog
programs
etc
could
be
profitably
used
It
is
semantically
transparent
since
And
finally
this
corresponds
to
the
logical
formula
This
formula
is
just
a
Horn
clause
and
as
such
it
means
it
can
be
viewed
as
a
logic
program
technical
report
231
and
that
the
language
of
technical
report
231
is
English
This
again
can
be
viewed
as
part
of
a
logic
program
technically
they
are
facts
Running
this
query
in
the
corresponding
logic
program
gives
the
result
that
Y
English
that
is
to
say
the
predicate
speak
John
English
syntax
We
will
demonstrate
how
these
reasoning
rules
have
equivalent
representation
both
as
RDF
descriptions
and
as
logic
programs
We
will
also
show
how
an
automated
compilation
between
these
translations
is
Metalog
provides
a
logical
view
of
metadata
present
on
the
Web
The
Metalog
approach
is
composed
of
several
components
In
the
first
component
a
particular
data
semantics
is
established
Metalog
provides
way
to
express
logical
relationships
such
as
and
or
and
to
build
up
complex
inference
rules
that
encode
logical
reasoning
This
semantic
layer
builds
on
top
of
RDF
using
a
so-called
The
second
component
consists
of
a
logical
interpretation
of
RDF
data
optionally
enriched
with
the
semantic
schema
into
logic
programming
This
way
the
understood
semantics
of
RDF
is
unwielded
into
its
logical
components
a
logic
program
indeed
This
means
that
every
reasonment
on
RDF
data
can
be
performed
acting
upon
the
corresponding
logical
view
the
logic
program
providing
a
neat
and
powerful
way
to
reason
about
data
The
first
correspondance
in
Metalog
is
between
the
basic
RDF
data
model
and
the
predicates
in
logic
The
RDF
data
model
consists
of
so-called
statements
Statements
are
triples
where
there
is
a
subject
the
resource
a
predicate
the
property
and
an
object
the
literal
Metalog
views
an
RDF
statement
in
the
logical
setting
as
just
a
binary
predicate
involving
the
subject
and
the
literal
For
invented
the
Web
formally
the
RDF
triple
invented
Tim
Berners-Lee
Web
is
seen
in
logic
programming
as
the
predicate
invented(Tim
Berners-Lee
Web
Once
we
have
estalished
the
basic
correspondance
between
the
basic
RDF
data
model
and
predicates
in
logic
the
next
step
becomes
easy
we
can
extend
RDF
so
that
the
mapping
to
logic
is
able
to
take
advantage
of
all
of
the
logical
relationships
present
in
logical
systems
that
is
to
say
beyond
the
ability
of
expressing
static
facts
we
want
the
ability
to
encode
dynamic
reasoning
rules
like
in
logic
programming
In
order
to
do
so
we
need
at
least
the
standard
logical
connectors
and
or
not
variables
The
Metalog
schema
extends
plain
RDF
with
this
logical
layer
enabling
the
expression
of
arbitrary
logical
relationships
within
RDF
In
fact
the
Metalog
schema
provides
more
accessories
besides
the
should
keep
in
mind
is
just
that
the
Metalog
schema
provides
the
meta-logic
operators
to
reason
with
RDF
statements
The
mapping
between
metalog
RDF
and
logical
formulas
is
then
completely
natural
for
each
RDF
statement
that
does
not
use
a
Metalog
connector
there
is
a
corresponding
logical
predicate
as
defined
before
Then
the
metalog
connectors
are
translated
into
the
corresponding
logical
connectors
in
the
natural
way
so
for
instance
the
metalog
and
connector
is
mapped
using
logical
conjunction
while
the
metalog
or
connector
is
mapped
using
logical
disjunction
Note
that
the
RDF
metalog
schema
and
the
corresponding
translation
into
logical
formulas
is
absolutely
general
However
in
practicse
one
need
also
to
then
be
able
to
process
the
resulting
logical
formulas
in
an
effective
ways
In
other
words
while
the
RDF
metalog
schema
nicely
other
computational
side
of
the
coin
how
to
process
and
effectively
reason
with
all
these
logical
inference
rules
expressible
enough
and
also
computationally
feasible
our
choice
went
to
logic
programming
Logic
programming
see
e.g
1
is
a
well
known
programming
paradigm
that
selects
a
subset
of
full
first-order
expressive
paradigm
and
has
the
further
advantage
that
it
has
been
widely
studied
in
the
database
community
a
subset
of
logic
programming
datalog
has
even
the
advantage
of
having
computations
expressibility
of
the
language
must
fit
within
the
one
provided
by
logic
programming
are
then
is
a
keyword
for
the
logical
implication
For
example
if
SHE
has
a
degree
in
math
then
SHE
is
smart
is
translated
into
the
logical
formula
degree(SHE
math
is(SHE
smart
Note
that
here
and
in
the
following
examples
we
provide
directly
the
translation
into
the
logical
formula
to
save
space
a
more
detailed
translation
would
have
to
also
show
the
intermediate
RDF
model
which
is
in
any
case
trivial
to
derive
imply
is
a
keyword
for
the
logical
implication
implies
is
a
keyword
for
the
logical
implication
and
can
be
either
the
metalog
and
or
it
can
be
used
to
indicate
science
as
well
then
SHE
is
really
smart
is
translated
into
the
logical
formula
degree(SHE
math
and
degree(SHE
computer
science
the
technical
report
231
has
as
authors
Mary
and
John
is
translated
into
the
logical
formulas
the
translation
here
is
more
involved
since
the
RDF
Bag
construct
is
used
this
order
is
translated
into
the
logical
formulas
the
translation
here
is
more
involved
since
the
RDF
Bag
construct
is
used
not
can
be
combined
with
any
other
metalog
constructs
and
its
interpretation
is
logical
negation
For
example
if
SHE
has
a
degree
in
math
then
SHE
is
not
stupid
is
translated
into
the
logical
formula
degree(SHE
math
not(is(SHE
stupid
And
finally
this
corresponds
to
the
logical
formula
Running
this
query
in
the
corresponding
logic
program
gives
the
result
that
Y
English
that
is
to
say
the
predicate
speak
John
English
The
use
of
Web
infrastructure
to
accommodate
logic
programs
has
been
suggested
by
Sandevall
1996
and
Loke
Davidson
1996
The
latter
approach
suggests
using
familiar
logic
program
notation
to
place
facts
and
queries
on
HTML
pages
The
embedded
rules
also
have
the
ability
to
fast
writing
of
complex
relationships
but
also
an
extremely
high
readability
Finally
it
can
be
used
even
without
the
logical
extensions
just
to
provide
a
user-friendly
interface
to
RDF
Future
6
Niemelä
I
Simons
P
1997
Smodels
an
implementation
of
the
stable
model
and
well-founded
semantics
for
normal
logic
programs
Proc
of
the
4
th
Int
Conf
on
Logic
Programming
and
Non-Monotonic
All
the
resolutions
passed
by
the
WG
are
collected
in
this
page
in
reverse
chronological
order
However
the
resolutions
to
accept
minutes
as
true
records
of
meetings
are
not
repeated
here
RESOLVED
Go
with
Axel's
option
C
that
is
using
a
special
syntax
to
distinguish
evaluated
functions/predicates
from
logical
functions/predicates
RESOLVED
close
ISSUE
27
with
the
understanding
that
neither
RIF
Core
nor
RIF
BLD
will
have
constraint
logic
programming
RESOLVED
close
ISSUE
28
with
the
understanding
that
RIF
Core
as
Resolutions
from
Telecon
9
0
ctober
2007
RESOLVED
the
name
of
the
dialect
is
RIF
basic
logic
dialect
and
the
short
notation
is
RIF-BLD
RESOLVED
To
better
understand
what
RIF
Core
could
be
create
two
task
forces
in
RIF
one
focusing
on
a
logical
dialect
and
the
other
one
focusing
on
a
production
rules
dialect
RESOLVED
Rename
the
current
RIF
Core
draft
RIF
basic
logic
dialect
Provides
students
with
a
broad
understanding
of
the
fundamental
concepts
of
computing
logic
and
data
processing
Concepts
include
introductory
hardware
and
software
architecture
models
of
computation
representation
of
data
machine
arithmetic
assembler
programming
command
line
interfaces
and
an
introduction
to
some
of
the
logical
and
mathematical
ideas
used
in
computing
AI
techniques
including
knowledge
representation
and
reasoning
logical
inference
and
machine
learning
Emphasis
is
placed
on
practical
use
of
rule-based
systems
and
the
fundamentals
necessary
for
is
just
one
programming
paradigm
This
course
introduces
two
other
programming
paradigms
functional
and
logic
programming
Logic
programming
is
based
on
first-order
logic
while
functional
programming
is
based
on
the
lambda
calculus
Students
will
learn
the
basic
